<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;
    private $last_taglineno = 0;
    private $last_taglineno_nocache = 0;
    private $strip = false;

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
        $this->compiler->prefix_code = array();
        $this->prefix_number = 0;
        $this->block_nesting_level = 0;
        if ($this->security = isset($this->smarty->security_policy)) {
            $this->php_handling = $this->smarty->security_policy->php_handling;
        } else {
            $this->php_handling = $this->smarty->php_handling;
        }
        $this->is_xml = false;
        $this->asp_tags = (ini_get('asp_tags') != '0');
        $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }

    public static function escape_start_tag($tag_text) {
        $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
        return $tag;
    }

    public static function escape_end_tag($tag_text) {
        return '?<?php ?>>';
    }

    public function compileVariable($variable) {
    	 if (strpos($variable,'(') === false) {
    	 		// not a variable variable
    	 		$var = trim($variable,'\'"');
			    $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable($var, null, true, false, 'nocache');
//			    $this->template->properties['variables'][$var] = $this->compiler->tag_nocache|$this->compiler->nocache;
			 } else {
			    $var = '{'.$variable.'}';
			 }
			 return '$_smarty_tpl->tpl_vars->'. $var . "['value']";
    }

    public function updateNocacheLineTrace($allways = false) {
       if ($this->smarty->enable_traceback) {
           if ($this->compiler->template->caching && $this->last_taglineno_nocache != $this->lex->taglineno) {
               $this->compiler->has_code = true;
               $this->compiler->nocache_nolog = true;
               $this->current_buffer->append_subtree(new _smarty_text($this, $this->compiler->processNocacheCode("<?php \$_smarty_tpl->trace_call_stack[0][1] = {$this->lex->taglineno};?>", true)));
               $this->last_taglineno_nocache = $this->lex->taglineno;
           } elseif ($allways && $this->last_taglineno != $this->lex->taglineno) {
               $this->compiler->has_code = true;
               $this->current_buffer->append_subtree(new _smarty_text($this, $this->compiler->processNocacheCode("<?php \$_smarty_tpl->trace_call_stack[0][1] = {$this->lex->taglineno};?>", true)));
               $this->last_taglineno = $this->lex->taglineno;
           }
       }
    }
#line 150 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_TEMPLATEINIT                   =  3;
    const TP_COMMENT                        =  4;
    const TP_PHPSTARTTAG                    =  5;
    const TP_PHPENDTAG                      =  6;
    const TP_ASPSTARTTAG                    =  7;
    const TP_ASPENDTAG                      =  8;
    const TP_FAKEPHPSTARTTAG                =  9;
    const TP_XMLTAG                         = 10;
    const TP_TEXT                           = 11;
    const TP_STRIPON                        = 12;
    const TP_STRIPOFF                       = 13;
    const TP_LITERALSTART                   = 14;
    const TP_LITERALEND                     = 15;
    const TP_LITERAL                        = 16;
    const TP_LDEL                           = 17;
    const TP_RDEL                           = 18;
    const TP_DOLLAR                         = 19;
    const TP_ID                             = 20;
    const TP_EQUAL                          = 21;
    const TP_PTR                            = 22;
    const TP_LDELIF                         = 23;
    const TP_LDELFOR                        = 24;
    const TP_SEMICOLON                      = 25;
    const TP_IDINCDEC                       = 26;
    const TP_TO                             = 27;
    const TP_STEP                           = 28;
    const TP_LDELFOREACH                    = 29;
    const TP_SPACE                          = 30;
    const TP_AS                             = 31;
    const TP_APTR                           = 32;
    const TP_LDELSETFILTER                  = 33;
    const TP_SMARTYBLOCKCHILD               = 34;
    const TP_LDELSLASH                      = 35;
    const TP_INTEGER                        = 36;
    const TP_COMMA                          = 37;
    const TP_OPENP                          = 38;
    const TP_CLOSEP                         = 39;
    const TP_MATH                           = 40;
    const TP_UNIMATH                        = 41;
    const TP_ANDSYM                         = 42;
    const TP_ISIN                           = 43;
    const TP_ISDIVBY                        = 44;
    const TP_ISNOTDIVBY                     = 45;
    const TP_ISEVEN                         = 46;
    const TP_ISNOTEVEN                      = 47;
    const TP_ISEVENBY                       = 48;
    const TP_ISNOTEVENBY                    = 49;
    const TP_ISODD                          = 50;
    const TP_ISNOTODD                       = 51;
    const TP_ISODDBY                        = 52;
    const TP_ISNOTODDBY                     = 53;
    const TP_INSTANCEOF                     = 54;
    const TP_NAMESPACE                      = 55;
    const TP_QMARK                          = 56;
    const TP_NOT                            = 57;
    const TP_TYPECAST                       = 58;
    const TP_HEX                            = 59;
    const TP_DOT                            = 60;
    const TP_SINGLEQUOTESTRING              = 61;
    const TP_DOUBLECOLON                    = 62;
    const TP_AT                             = 63;
    const TP_HATCH                          = 64;
    const TP_OPENB                          = 65;
    const TP_CLOSEB                         = 66;
    const TP_EQUALS                         = 67;
    const TP_NOTEQUALS                      = 68;
    const TP_GREATERTHAN                    = 69;
    const TP_LESSTHAN                       = 70;
    const TP_GREATEREQUAL                   = 71;
    const TP_LESSEQUAL                      = 72;
    const TP_IDENTITY                       = 73;
    const TP_NONEIDENTITY                   = 74;
    const TP_MOD                            = 75;
    const TP_LAND                           = 76;
    const TP_LOR                            = 77;
    const TP_LXOR                           = 78;
    const TP_QUOTE                          = 79;
    const TP_BACKTICK                       = 80;
    const TP_DOLLARID                       = 81;
    const YY_NO_ACTION = 605;
    const YY_ACCEPT_ACTION = 604;
    const YY_ERROR_ACTION = 603;

    const YY_SZ_ACTTAB = 2611;
static public $yy_action = array(
 /*     0 */   217,  277,  305,  301,  293,  262,  294,  367,  371,  312,
 /*    10 */   365,  357,  198,   19,  217,   44,  276,  325,   38,  159,
 /*    20 */    19,    6,  107,  276,   18,  212,   43,  155,  254,   43,
 /*    30 */     9,  246,  306,  230,  604,   96,  285,  279,  304,   53,
 /*    40 */    52,   47,   46,   13,   15,  329,  332,   12,   14,  316,
 /*    50 */   315,   11,   10,  341,  317,  314,  323,  342,   32,  124,
 /*    60 */   135,  175,  198,  313,  344,  207,  318,  320,  348,  347,
 /*    70 */   346,  349,  352,  351,  345,  338,  337,  336,  217,  202,
 /*    80 */    20,  353,  130,  394,  356,  119,  197,  340,   89,  127,
 /*    90 */   353,   16,   23,  250,  148,  368,  370,  339,  127,  387,
 /*   100 */   298,  386,  383,  159,  350,  206,  382,   43,  180,  298,
 /*   110 */   386,  383,   37,  350,  222,  372,  283,   53,   52,   47,
 /*   120 */    46,   13,   15,  329,  332,   12,   14,  316,  315,   11,
 /*   130 */    10,  217,  217,  207,  287,  279,  304,    5,   19,  217,
 /*   140 */   217,  276,   28,  124,  318,  320,  348,  347,  346,  349,
 /*   150 */   352,  351,  345,  338,  337,  336,  328,  464,   30,  231,
 /*   160 */    43,  138,  178,   35,   19,  269,  217,  276,   43,  464,
 /*   170 */    53,   52,   47,   46,   13,   15,  329,  332,   12,   14,
 /*   180 */   316,  315,   11,   10,  244,   51,   19,  109,  182,  276,
 /*   190 */    28,   19,   51,   51,  276,   43,  283,  318,  320,  348,
 /*   200 */   347,  346,  349,  352,  351,  345,  338,  337,  336,  217,
 /*   210 */   244,   39,  353,  206,  108,  186,  144,    5,  125,   74,
 /*   220 */   127,    5,  217,  283,  462,  157,  331,  370,  339,  217,
 /*   230 */    45,  298,  386,  383,  335,  350,  462,  242,   43,  308,
 /*   240 */   206,  138,  215,  229,    5,  138,  291,  174,   53,   52,
 /*   250 */    47,   46,   13,   15,  329,  332,   12,   14,  316,  315,
 /*   260 */    11,   10,  217,  100,  190,  257,  256,  225,  138,   33,
 /*   270 */   217,  261,  283,  206,  303,  318,  320,  348,  347,  346,
 /*   280 */   349,  352,  351,  345,  338,  337,  336,  324,  179,  206,
 /*   290 */   364,  200,    4,  201,  340,  163,  283,  196,  340,   29,
 /*   300 */   159,   53,   52,   47,   46,   13,   15,  329,  332,   12,
 /*   310 */    14,  316,  315,   11,   10,  217,  176,  206,   33,  185,
 /*   320 */   374,  359,    2,   51,  283,  110,  360,  283,  318,  320,
 /*   330 */   348,  347,  346,  349,  352,  351,  345,  338,  337,  336,
 /*   340 */   124,  375,  235,  238,  207,  177,  126,   19,  134,  247,
 /*   350 */   233,   36,  272,  283,   53,   52,   47,   46,   13,   15,
 /*   360 */   329,  332,   12,   14,  316,  315,   11,   10,  217,   27,
 /*   370 */   207,  188,    7,   33,   19,  260,  189,  276,  273,  283,
 /*   380 */   271,  318,  320,  348,  347,  346,  349,  352,  351,  345,
 /*   390 */   338,  337,  336,  105,  193,  237,  207,  326,  343,   19,
 /*   400 */    19,  199,  216,  228,  154,  154,  140,   53,   52,   47,
 /*   410 */    46,   13,   15,  329,  332,   12,   14,  316,  315,   11,
 /*   420 */    10,  217,  257,  255,  319,  217,  321,  145,  181,  169,
 /*   430 */   273,  162,  217,  160,  318,  320,  348,  347,  346,  349,
 /*   440 */   352,  351,  345,  338,  337,  336,  123,  395,  364,  297,
 /*   450 */   166,  248,  192,  257,  307,  206,   19,  206,  283,  249,
 /*   460 */    53,   52,   47,   46,   13,   15,  329,  332,   12,   14,
 /*   470 */   316,  315,   11,   10,   33,  217,  268,  102,   51,  159,
 /*   480 */     3,  373,  137,  334,  376,  205,  116,  318,  320,  348,
 /*   490 */   347,  346,  349,  352,  351,  345,  338,  337,  336,  195,
 /*   500 */   395,  396,  358,  136,  333,  243,   31,   29,  154,  132,
 /*   510 */   278,  391,  267,   41,   53,   52,   47,   46,   13,   15,
 /*   520 */   329,  332,   12,   14,  316,  315,   11,   10,  389,   95,
 /*   530 */   239,  141,  362,  139,  117,  194,   21,  263,  265,  295,
 /*   540 */     7,  318,  320,  348,  347,  346,  349,  352,  351,  345,
 /*   550 */   338,  337,  336,  217,  168,  354,  353,  250,  149,  379,
 /*   560 */   144,  356,  283,   57,  118,  133,  217,  217,  159,  245,
 /*   570 */   203,  370,  339,  350,  273,  298,  386,  383,   19,  350,
 /*   580 */   273,  276,  226,  300,  302,  303,   43,  170,  369,   17,
 /*   590 */   310,   43,   53,   52,   47,   46,   13,   15,  329,  332,
 /*   600 */    12,   14,  316,  315,   11,   10,  212,  106,   45,  111,
 /*   610 */   331,    9,  331,   25,   24,  217,  331,  331,  331,  318,
 /*   620 */   320,  348,  347,  346,  349,  352,  351,  345,  338,  337,
 /*   630 */   336,  217,  292,  331,  353,  331,  164,  331,  144,  353,
 /*   640 */   331,   74,  127,  146,  283,  331,  331,  127,  258,  370,
 /*   650 */   339,  275,  243,  298,  386,  383,  273,  350,  298,  386,
 /*   660 */   383,  331,  350,   43,  219,  331,  331,  331,  331,  331,
 /*   670 */    53,   52,   47,   46,   13,   15,  329,  332,   12,   14,
 /*   680 */   316,  315,   11,   10,  331,  331,  331,  331,  331,  331,
 /*   690 */   331,  331,  331,  331,  331,  331,  104,  318,  320,  348,
 /*   700 */   347,  346,  349,  352,  351,  345,  338,  337,  336,  217,
 /*   710 */   395,  331,  353,  331,  165,  331,  119,  331,  296,   89,
 /*   720 */   127,  353,  283,  331,  330,  158,  270,  370,  339,  127,
 /*   730 */    43,  298,  386,  383,  273,  350,   43,  259,  331,  331,
 /*   740 */   298,  386,  383,  331,  350,  331,  366,  331,   53,   52,
 /*   750 */    47,   46,   13,   15,  329,  332,   12,   14,  316,  315,
 /*   760 */    11,   10,  217,  331,  331,  331,  331,  331,  331,  331,
 /*   770 */   331,  331,  331,  161,  113,  318,  320,  348,  347,  346,
 /*   780 */   349,  352,  351,  345,  338,  337,  336,  395,  395,  331,
 /*   790 */   331,   43,  331,  331,  331,  331,  331,  331,  331,  331,
 /*   800 */   331,   53,   52,   47,   46,   13,   15,  329,  332,   12,
 /*   810 */    14,  316,  315,   11,   10,  331,  331,  331,  331,  331,
 /*   820 */   331,  331,  331,  331,  331,  331,  331,  331,  318,  320,
 /*   830 */   348,  347,  346,  349,  352,  351,  345,  338,  337,  336,
 /*   840 */   217,  173,  331,  353,  331,  331,  331,  144,  299,  283,
 /*   850 */    63,  118,  255,  465,  120,  284,   26,  204,  370,  339,
 /*   860 */    43,  273,  298,  386,  383,  465,  350,   43,  395,  331,
 /*   870 */   331,  331,  331,    5,  331,  331,  331,  331,  331,   53,
 /*   880 */    52,   47,   46,   13,   15,  329,  332,   12,   14,  316,
 /*   890 */   315,   11,   10,  217,  331,  331,  331,  138,  331,  331,
 /*   900 */   331,  331,  331,  331,   99,  142,  318,  320,  348,  347,
 /*   910 */   346,  349,  352,  351,  345,  338,  337,  336,  395,  395,
 /*   920 */   331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*   930 */   331,  236,   53,   52,   47,   46,   13,   15,  329,  332,
 /*   940 */    12,   14,  316,  315,   11,   10,  217,  331,  331,  331,
 /*   950 */   331,  331,  331,  331,  331,  331,  331,  103,   98,  318,
 /*   960 */   320,  348,  347,  346,  349,  352,  351,  345,  338,  337,
 /*   970 */   336,  395,  395,  331,  331,  331,  331,  331,  331,  331,
 /*   980 */   331,  331,  331,  331,  266,   53,   52,   47,   46,   13,
 /*   990 */    15,  329,  332,   12,   14,  316,  315,   11,   10,  217,
 /*  1000 */   331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*  1010 */   331,  331,  318,  320,  348,  347,  346,  349,  352,  351,
 /*  1020 */   345,  338,  337,  336,  331,  331,  331,  331,  331,  331,
 /*  1030 */   331,  331,  331,  331,  331,  331,  331,  331,   53,   52,
 /*  1040 */    47,   46,   13,   15,  329,  332,   12,   14,  316,  315,
 /*  1050 */    11,   10,  331,  331,  331,  331,  331,  331,  331,  331,
 /*  1060 */   331,  331,  331,  331,  331,  318,  320,  348,  347,  346,
 /*  1070 */   349,  352,  351,  345,  338,  337,  336,  331,  331,   53,
 /*  1080 */    52,   47,   46,   13,   15,  329,  332,   12,   14,  316,
 /*  1090 */   315,   11,   10,  327,  331,  331,  331,  331,  331,  331,
 /*  1100 */   331,  331,  331,  331,  331,   43,  318,  320,  348,  347,
 /*  1110 */   346,  349,  352,  351,  345,  338,  337,  336,  217,  331,
 /*  1120 */   331,  331,  331,  331,   44,  331,  131,  210,  331,  331,
 /*  1130 */     6,  107,  217,  355,  288,  461,  155,  331,  331,  331,
 /*  1140 */   246,  306,  230,  252,  331,   42,   43,   43,   49,  377,
 /*  1150 */   331,  331,  331,  234,  331,  353,  331,  331,  331,  153,
 /*  1160 */   331,   43,  221,  127,   50,   48,  311,  241,  385,    5,
 /*  1170 */   331,  105,    1,  264,  298,  386,  383,   19,  350,  331,
 /*  1180 */   276,  331,   44,  331,  131,  223,   97,  331,    6,  107,
 /*  1190 */    43,  355,  251,  138,  155,  282,  274,  290,  246,  306,
 /*  1200 */   230,  252,  217,   42,  393,  331,   49,   43,   43,   43,
 /*  1210 */   331,  331,  331,  353,  331,  322,   43,  150,  331,  467,
 /*  1220 */   221,  127,   50,   48,  311,  241,  385,   43,  331,  105,
 /*  1230 */     1,  467,  298,  386,  383,  331,  350,  331,  384,  286,
 /*  1240 */    44,  331,  129,   93,   97,  331,    6,  107,  380,  355,
 /*  1250 */    43,   43,  155,  309,  331,   51,  246,  306,  230,  252,
 /*  1260 */    43,   42,  280,  331,   49,   43,  331,  331,  331,  331,
 /*  1270 */   331,  353,  331,  331,   43,  152,  331,  392,  221,  127,
 /*  1280 */    50,   48,  311,  241,  385,  331,  331,  105,    1,   43,
 /*  1290 */   298,  386,  383,  331,  350,  331,  289,  378,   44,  331,
 /*  1300 */   134,  223,   97,  331,    6,  107,  381,  355,   43,   43,
 /*  1310 */   155,  281,  331,  331,  246,  306,  230,  252,   43,   22,
 /*  1320 */   331,  331,   49,   43,  331,  331,  331,  331,  331,  353,
 /*  1330 */   331,  331,  331,  151,  331,  331,  221,  127,   50,   48,
 /*  1340 */   311,  241,  385,  331,  331,  105,    1,  331,  298,  386,
 /*  1350 */   383,  331,  350,  331,  331,  331,   44,  331,  143,  223,
 /*  1360 */    97,  331,    6,  107,  331,  355,  331,  331,  155,  331,
 /*  1370 */   331,  331,  246,  306,  230,  252,  331,    8,  331,  331,
 /*  1380 */    49,  331,  331,  331,  331,  331,  331,  353,  331,  331,
 /*  1390 */   331,  147,  331,  331,  221,  127,   50,   48,  311,  241,
 /*  1400 */   385,  331,  331,  105,    1,  331,  298,  386,  383,  331,
 /*  1410 */   350,  331,  331,  331,   44,  331,  131,  213,   97,  331,
 /*  1420 */     6,  107,  331,  355,  331,  331,  155,  331,  331,  331,
 /*  1430 */   246,  306,  230,  252,  331,   42,  331,  331,   49,  331,
 /*  1440 */   331,  331,  331,  331,  331,  353,  331,  331,  331,  156,
 /*  1450 */   331,  331,  221,  127,   50,   48,  311,  241,  385,  331,
 /*  1460 */   331,  105,    1,  331,  298,  386,  383,  331,  350,  331,
 /*  1470 */   217,  331,   44,  331,  131,  208,   97,  331,    6,  107,
 /*  1480 */   331,  355,  331,  331,  155,  331,  331,  467,  246,  306,
 /*  1490 */   230,  252,  331,   42,  331,  331,   49,  331,  331,  467,
 /*  1500 */   232,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*  1510 */   221,  331,   50,   48,  311,  241,  385,  331,  331,  105,
 /*  1520 */     1,  331,  331,   51,  331,  331,  331,  331,  331,  331,
 /*  1530 */    44,  331,  131,  209,   97,  331,    6,  107,  331,  355,
 /*  1540 */   331,  331,  155,  331,  331,  331,  246,  306,  230,  218,
 /*  1550 */   331,   42,  331,  331,   49,  331,  331,  331,  331,  331,
 /*  1560 */   331,  331,  331,  331,  331,  331,  331,  331,  221,  331,
 /*  1570 */    50,   48,  311,  241,  385,  331,  331,  105,    1,  331,
 /*  1580 */   331,  331,  331,  331,  331,  331,  331,  331,   44,  331,
 /*  1590 */   128,  223,   97,  331,    6,  107,  331,  355,  331,  331,
 /*  1600 */   155,  331,  331,  331,  246,  306,  230,  252,  331,   42,
 /*  1610 */   331,  331,   49,  331,  331,  331,  331,  331,  331,  331,
 /*  1620 */   331,  331,  331,  331,  331,  331,  221,  331,   50,   48,
 /*  1630 */   311,  241,  385,  331,  331,  105,    1,  331,  331,  331,
 /*  1640 */   331,  331,  331,  331,  331,  331,   44,  331,  131,  211,
 /*  1650 */    97,  331,    6,  107,  331,  355,  331,  331,  155,  331,
 /*  1660 */   331,  331,  246,  306,  230,  252,  331,   42,  331,  331,
 /*  1670 */    49,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*  1680 */   331,  331,  331,  331,  221,  331,   50,   48,  311,  241,
 /*  1690 */   385,  331,  331,  105,    1,  331,  331,  331,  331,  331,
 /*  1700 */   331,  331,  331,  331,   44,  331,  134,  223,   97,  331,
 /*  1710 */     6,  107,  331,  355,  331,  331,  155,  331,  331,  331,
 /*  1720 */   246,  306,  230,  252,  331,   22,  331,  331,   49,  331,
 /*  1730 */   331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*  1740 */   331,  331,  221,  331,   50,   48,  311,  241,  385,  331,
 /*  1750 */   331,  105,  331,  331,  331,  331,  331,  331,  331,  331,
 /*  1760 */   331,  331,   44,  331,  134,  227,   97,  331,    6,  107,
 /*  1770 */   331,  355,  331,  331,  155,  331,  331,  331,  246,  306,
 /*  1780 */   230,  252,  331,   22,  331,  331,   49,  331,  331,  331,
 /*  1790 */   331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
 /*  1800 */   220,  331,   50,   48,  311,  241,  385,  331,  331,  105,
 /*  1810 */   331,  331,  331,  331,  331,  331,  331,  331,  331,  510,
 /*  1820 */   331,  331,  331,  331,   97,  331,  510,  331,  510,  510,
 /*  1830 */   331,  510,  510,  331,  101,  191,  331,  331,  510,    5,
 /*  1840 */   510,  331,  331,  283,  331,  331,   16,   23,  331,  353,
 /*  1850 */   331,  331,  331,  144,  331,  510,   74,  127,  331,  331,
 /*  1860 */   206,  331,  331,  138,  370,  339,  331,  510,  298,  386,
 /*  1870 */   383,  331,  350,  331,  331,  331,  361,  331,  331,  224,
 /*  1880 */   331,  510,   34,  331,  361,  331,  331,  331,    6,  107,
 /*  1890 */    34,  331,  331,  331,  155,  331,    6,  107,  246,  306,
 /*  1900 */   230,  331,  155,  331,  331,  331,  246,  306,  230,  331,
 /*  1910 */   331,  353,  331,  331,  331,  144,  331,  331,   74,  127,
 /*  1920 */   331,  331,  331,  331,  331,  331,  370,  339,  331,  331,
 /*  1930 */   298,  386,  383,  331,  350,  331,  331,  331,  331,  331,
 /*  1940 */   331,  214,  331,  353,  390,   40,  363,  144,  331,  331,
 /*  1950 */    86,  127,  388,   40,  363,  331,  331,  331,  370,  339,
 /*  1960 */   331,  331,  298,  386,  383,  331,  350,  331,  353,  331,
 /*  1970 */   331,  331,  144,  331,  331,   72,  127,  331,  331,  331,
 /*  1980 */   331,  331,  331,  370,  339,  331,  353,  298,  386,  383,
 /*  1990 */   144,  350,  331,   62,  127,  331,  331,  331,  331,  202,
 /*  2000 */   172,  370,  339,  331,  331,  298,  386,  383,  283,  350,
 /*  2010 */   331,   16,   23,  353,  331,  331,  331,  115,  331,  331,
 /*  2020 */    78,  127,  331,  331,  331,  206,  331,  331,  370,  339,
 /*  2030 */   331,  353,  298,  386,  383,  144,  350,  331,   84,  127,
 /*  2040 */   331,  353,  331,  331,  331,  144,  370,  339,   87,  127,
 /*  2050 */   298,  386,  383,  331,  350,  331,  370,  339,  331,  353,
 /*  2060 */   298,  386,  383,  144,  350,  331,   68,  127,  331,  331,
 /*  2070 */   331,  331,  331,  331,  370,  339,  331,  353,  298,  386,
 /*  2080 */   383,  144,  350,  331,   55,  127,  331,  331,  331,  331,
 /*  2090 */   331,  331,  370,  339,  331,  331,  298,  386,  383,  331,
 /*  2100 */   350,  331,  331,  331,  353,  202,  171,  331,  144,  331,
 /*  2110 */   331,   58,  127,  331,  283,  331,  331,   16,   23,  370,
 /*  2120 */   339,  331,  353,  298,  386,  383,  144,  350,  331,   81,
 /*  2130 */   127,  206,  353,  331,  331,  331,  144,  370,  339,   92,
 /*  2140 */   127,  298,  386,  383,  331,  350,  331,  370,  339,  331,
 /*  2150 */   353,  298,  386,  383,  144,  350,  331,   75,  127,  331,
 /*  2160 */   331,  331,  331,  331,  331,  370,  339,  331,  353,  298,
 /*  2170 */   386,  383,  144,  350,  331,   88,  127,  331,  331,  331,
 /*  2180 */   331,  331,  331,  370,  339,  331,  331,  298,  386,  383,
 /*  2190 */   331,  350,  331,  331,  331,  353,  202,  167,  331,  144,
 /*  2200 */   331,  331,   76,  127,  331,  283,  331,  331,   16,   23,
 /*  2210 */   370,  339,  331,  353,  298,  386,  383,  144,  350,  331,
 /*  2220 */    77,  127,  206,  353,  331,  331,  331,  144,  370,  339,
 /*  2230 */    66,  127,  298,  386,  383,  331,  350,  331,  370,  339,
 /*  2240 */   331,  353,  298,  386,  383,  144,  350,  331,   82,  127,
 /*  2250 */   331,  331,  331,  331,  331,  331,  370,  339,  331,  353,
 /*  2260 */   298,  386,  383,  144,  350,  331,   71,  127,  331,  331,
 /*  2270 */   331,  331,  331,  331,  370,  339,  331,  331,  298,  386,
 /*  2280 */   383,  331,  350,  331,  331,  331,  353,  202,  183,  331,
 /*  2290 */   144,  331,  331,   60,  127,  331,  283,  331,  331,   16,
 /*  2300 */    23,  370,  339,  331,  353,  298,  386,  383,  112,  350,
 /*  2310 */   331,   70,  127,  206,  353,  331,  331,  331,  144,  370,
 /*  2320 */   339,   90,  127,  298,  386,  383,  331,  350,  331,  370,
 /*  2330 */   339,  331,  353,  298,  386,  383,  144,  350,  331,   85,
 /*  2340 */   127,  331,  331,  331,  331,  331,  331,  370,  339,  331,
 /*  2350 */   353,  298,  386,  383,  144,  350,  331,   69,  127,  331,
 /*  2360 */   331,  331,  331,  331,  331,  370,  339,  331,  331,  298,
 /*  2370 */   386,  383,  331,  350,  331,  331,  331,  353,  202,  184,
 /*  2380 */   331,  144,  331,  331,   65,  127,  331,  283,  331,  331,
 /*  2390 */    16,   23,  370,  339,  331,  353,  298,  386,  383,  144,
 /*  2400 */   350,  331,   91,  127,  206,  353,  331,  331,  331,   94,
 /*  2410 */   370,  339,   59,  122,  298,  386,  383,  331,  350,  331,
 /*  2420 */   370,  339,  331,  353,  298,  386,  383,  144,  350,  331,
 /*  2430 */    67,  127,  331,  331,  331,  331,  331,  331,  370,  339,
 /*  2440 */   331,  353,  240,  386,  383,  144,  350,  331,   64,  127,
 /*  2450 */   331,  331,  331,  331,  331,  331,  370,  339,  331,  331,
 /*  2460 */   298,  386,  383,  331,  350,  331,  331,  331,  353,  202,
 /*  2470 */   187,  331,  144,  331,  331,   80,  127,  331,  283,  331,
 /*  2480 */   331,   16,   23,  370,  339,  331,  353,  298,  386,  383,
 /*  2490 */   121,  350,  331,   56,  127,  206,  353,  331,  331,  331,
 /*  2500 */   144,  370,  339,   61,  127,  298,  386,  383,  331,  350,
 /*  2510 */   331,  370,  339,  331,  353,  298,  386,  383,  144,  350,
 /*  2520 */   331,   79,  127,  331,  331,  331,  331,  331,  331,  370,
 /*  2530 */   339,  331,  353,  298,  386,  383,  114,  350,  331,   83,
 /*  2540 */   127,  331,  331,  331,  331,  331,  331,  370,  339,  331,
 /*  2550 */   331,  298,  386,  383,  331,  350,  331,  331,  331,  353,
 /*  2560 */   331,  331,  331,  144,  331,  331,   73,  127,  331,  331,
 /*  2570 */   331,  331,  331,  331,  370,  339,  331,  353,  298,  386,
 /*  2580 */   383,   94,  350,  331,   54,  122,  331,  353,  331,  331,
 /*  2590 */   331,  144,  370,  339,   63,  127,  253,  386,  383,  331,
 /*  2600 */   350,  331,  370,  339,  331,  331,  298,  386,  383,  331,
 /*  2610 */   350,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,    3,    4,    5,    6,    7,    8,    9,   10,   11,
 /*    10 */    12,   13,   14,   17,    1,   17,   20,   18,   21,   22,
 /*    20 */    17,   23,   24,   20,   21,   60,   30,   29,   32,   30,
 /*    30 */    65,   33,   34,   35,   83,   84,   85,   86,   87,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*    50 */    51,   52,   53,    5,    6,    7,    8,    9,   17,   62,
 /*    60 */    19,   20,   14,   15,   16,  117,   67,   68,   69,   70,
 /*    70 */    71,   72,   73,   74,   75,   76,   77,   78,    1,   91,
 /*    80 */    17,   86,   19,   20,  111,   90,  113,  114,   93,   94,
 /*    90 */    86,  103,  104,    2,   90,   18,  101,  102,   94,   36,
 /*   100 */   105,  106,  107,   22,  109,  117,  102,   30,   92,  105,
 /*   110 */   106,  107,   21,  109,  119,  120,  100,   40,   41,   42,
 /*   120 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   130 */    53,    1,    1,  117,   85,   86,   87,   38,   17,    1,
 /*   140 */     1,   20,   21,   62,   67,   68,   69,   70,   71,   72,
 /*   150 */    73,   74,   75,   76,   77,   78,   18,   18,   28,   60,
 /*   160 */    30,   62,  110,   32,   17,   66,    1,   20,   30,   30,
 /*   170 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   180 */    50,   51,   52,   53,   63,   54,   17,   91,   92,   20,
 /*   190 */    21,   17,   54,   54,   20,   30,  100,   67,   68,   69,
 /*   200 */    70,   71,   72,   73,   74,   75,   76,   77,   78,    1,
 /*   210 */    63,   32,   86,  117,   91,   92,   90,   38,   19,   93,
 /*   220 */    94,   38,    1,  100,   18,   26,   18,  101,  102,    1,
 /*   230 */     2,  105,  106,  107,  114,  109,   30,   63,   30,   18,
 /*   240 */   117,   62,  116,   22,   38,   62,   18,   91,   40,   41,
 /*   250 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   260 */    52,   53,    1,   91,   92,   94,   95,   96,   62,   37,
 /*   270 */     1,   39,  100,  117,  118,   67,   68,   69,   70,   71,
 /*   280 */    72,   73,   74,   75,   76,   77,   78,   18,   92,  117,
 /*   290 */    86,   91,   37,  113,  114,  110,  100,  113,  114,   21,
 /*   300 */    22,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   310 */    49,   50,   51,   52,   53,    1,   92,  117,   37,   92,
 /*   320 */    39,   66,   38,   54,  100,  121,  122,  100,   67,   68,
 /*   330 */    69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
 /*   340 */    62,   80,   19,   20,  117,   92,   62,   17,   19,   20,
 /*   350 */    20,   17,   20,  100,   40,   41,   42,   43,   44,   45,
 /*   360 */    46,   47,   48,   49,   50,   51,   52,   53,    1,    2,
 /*   370 */   117,   92,   38,   37,   17,   39,  110,   20,  112,  100,
 /*   380 */    66,   67,   68,   69,   70,   71,   72,   73,   74,   75,
 /*   390 */    76,   77,   78,   64,   25,   63,  117,  108,  108,   17,
 /*   400 */    17,   99,   20,   20,  115,  115,   37,   40,   41,   42,
 /*   410 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   420 */    53,    1,   94,   95,   87,    1,   89,   19,  110,   91,
 /*   430 */   112,   91,    1,   98,   67,   68,   69,   70,   71,   72,
 /*   440 */    73,   74,   75,   76,   77,   78,   38,  112,   86,   18,
 /*   450 */    92,   31,   99,   94,   95,  117,   17,  117,  100,   20,
 /*   460 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   470 */    50,   51,   52,   53,   37,    1,   39,   99,   54,   22,
 /*   480 */    38,   20,   19,   64,  122,   20,   98,   67,   68,   69,
 /*   490 */    70,   71,   72,   73,   74,   75,   76,   77,   78,   25,
 /*   500 */   112,  108,   20,   19,   64,   60,   27,   21,  115,   19,
 /*   510 */    39,   18,   36,    2,   40,   41,   42,   43,   44,   45,
 /*   520 */    46,   47,   48,   49,   50,   51,   52,   53,   20,   20,
 /*   530 */    20,   19,   80,   20,   20,   20,   56,   36,   66,   20,
 /*   540 */    38,   67,   68,   69,   70,   71,   72,   73,   74,   75,
 /*   550 */    76,   77,   78,    1,   92,   15,   86,    2,   94,  100,
 /*   560 */    90,  111,  100,   93,   94,   95,    1,    1,   22,  105,
 /*   570 */    18,  101,  102,  109,  112,  105,  106,  107,   17,  109,
 /*   580 */   112,   20,   97,   18,   18,  118,   30,  110,  115,   30,
 /*   590 */    30,   30,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   600 */    48,   49,   50,   51,   52,   53,   60,  110,    2,   88,
 /*   610 */   123,   65,  123,   21,   97,    1,  123,  123,  123,   67,
 /*   620 */    68,   69,   70,   71,   72,   73,   74,   75,   76,   77,
 /*   630 */    78,    1,   18,  123,   86,  123,   92,  123,   90,   86,
 /*   640 */   123,   93,   94,   90,  100,  123,  123,   94,   18,  101,
 /*   650 */   102,   18,   60,  105,  106,  107,  112,  109,  105,  106,
 /*   660 */   107,  123,  109,   30,  116,  123,  123,  123,  123,  123,
 /*   670 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   680 */    50,   51,   52,   53,  123,  123,  123,  123,  123,  123,
 /*   690 */   123,  123,  123,  123,  123,  123,   98,   67,   68,   69,
 /*   700 */    70,   71,   72,   73,   74,   75,   76,   77,   78,    1,
 /*   710 */   112,  123,   86,  123,   92,  123,   90,  123,   18,   93,
 /*   720 */    94,   86,  100,  123,   18,   90,   18,  101,  102,   94,
 /*   730 */    30,  105,  106,  107,  112,  109,   30,  102,  123,  123,
 /*   740 */   105,  106,  107,  123,  109,  123,  120,  123,   40,   41,
 /*   750 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   760 */    52,   53,    1,  123,  123,  123,  123,  123,  123,  123,
 /*   770 */   123,  123,  123,   98,   98,   67,   68,   69,   70,   71,
 /*   780 */    72,   73,   74,   75,   76,   77,   78,  112,  112,  123,
 /*   790 */   123,   30,  123,  123,  123,  123,  123,  123,  123,  123,
 /*   800 */   123,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   810 */    49,   50,   51,   52,   53,  123,  123,  123,  123,  123,
 /*   820 */   123,  123,  123,  123,  123,  123,  123,  123,   67,   68,
 /*   830 */    69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
 /*   840 */     1,   92,  123,   86,  123,  123,  123,   90,   18,  100,
 /*   850 */    93,   94,   95,   18,   98,   18,   21,   18,  101,  102,
 /*   860 */    30,  112,  105,  106,  107,   30,  109,   30,  112,  123,
 /*   870 */   123,  123,  123,   38,  123,  123,  123,  123,  123,   40,
 /*   880 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   890 */    51,   52,   53,    1,  123,  123,  123,   62,  123,  123,
 /*   900 */   123,  123,  123,  123,   98,   98,   67,   68,   69,   70,
 /*   910 */    71,   72,   73,   74,   75,   76,   77,   78,  112,  112,
 /*   920 */   123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*   930 */   123,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   940 */    48,   49,   50,   51,   52,   53,    1,  123,  123,  123,
 /*   950 */   123,  123,  123,  123,  123,  123,  123,   98,   98,   67,
 /*   960 */    68,   69,   70,   71,   72,   73,   74,   75,   76,   77,
 /*   970 */    78,  112,  112,  123,  123,  123,  123,  123,  123,  123,
 /*   980 */   123,  123,  123,  123,   39,   40,   41,   42,   43,   44,
 /*   990 */    45,   46,   47,   48,   49,   50,   51,   52,   53,    1,
 /*  1000 */   123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1010 */   123,  123,   67,   68,   69,   70,   71,   72,   73,   74,
 /*  1020 */    75,   76,   77,   78,  123,  123,  123,  123,  123,  123,
 /*  1030 */   123,  123,  123,  123,  123,  123,  123,  123,   40,   41,
 /*  1040 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*  1050 */    52,   53,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1060 */   123,  123,  123,  123,  123,   67,   68,   69,   70,   71,
 /*  1070 */    72,   73,   74,   75,   76,   77,   78,  123,  123,   40,
 /*  1080 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*  1090 */    51,   52,   53,   18,  123,  123,  123,  123,  123,  123,
 /*  1100 */   123,  123,  123,  123,  123,   30,   67,   68,   69,   70,
 /*  1110 */    71,   72,   73,   74,   75,   76,   77,   78,    1,  123,
 /*  1120 */   123,  123,  123,  123,   17,  123,   19,   20,  123,  123,
 /*  1130 */    23,   24,    1,   26,   18,   18,   29,  123,  123,  123,
 /*  1140 */    33,   34,   35,   36,  123,   38,   30,   30,   41,   18,
 /*  1150 */   123,  123,  123,   22,  123,   86,  123,  123,  123,   90,
 /*  1160 */   123,   30,   55,   94,   57,   58,   59,   60,   61,   38,
 /*  1170 */   123,   64,   65,   66,  105,  106,  107,   17,  109,  123,
 /*  1180 */    20,  123,   17,  123,   19,   20,   79,  123,   23,   24,
 /*  1190 */    30,   26,   32,   62,   29,   18,   18,   18,   33,   34,
 /*  1200 */    35,   36,    1,   38,   18,  123,   41,   30,   30,   30,
 /*  1210 */   123,  123,  123,   86,  123,   18,   30,   90,  123,   18,
 /*  1220 */    55,   94,   57,   58,   59,   60,   61,   30,  123,   64,
 /*  1230 */    65,   30,  105,  106,  107,  123,  109,  123,   18,   18,
 /*  1240 */    17,  123,   19,   20,   79,  123,   23,   24,   18,   26,
 /*  1250 */    30,   30,   29,   18,  123,   54,   33,   34,   35,   36,
 /*  1260 */    30,   38,   18,  123,   41,   30,  123,  123,  123,  123,
 /*  1270 */   123,   86,  123,  123,   30,   90,  123,   18,   55,   94,
 /*  1280 */    57,   58,   59,   60,   61,  123,  123,   64,   65,   30,
 /*  1290 */   105,  106,  107,  123,  109,  123,   18,   18,   17,  123,
 /*  1300 */    19,   20,   79,  123,   23,   24,   18,   26,   30,   30,
 /*  1310 */    29,   18,  123,  123,   33,   34,   35,   36,   30,   38,
 /*  1320 */   123,  123,   41,   30,  123,  123,  123,  123,  123,   86,
 /*  1330 */   123,  123,  123,   90,  123,  123,   55,   94,   57,   58,
 /*  1340 */    59,   60,   61,  123,  123,   64,   65,  123,  105,  106,
 /*  1350 */   107,  123,  109,  123,  123,  123,   17,  123,   19,   20,
 /*  1360 */    79,  123,   23,   24,  123,   26,  123,  123,   29,  123,
 /*  1370 */   123,  123,   33,   34,   35,   36,  123,   38,  123,  123,
 /*  1380 */    41,  123,  123,  123,  123,  123,  123,   86,  123,  123,
 /*  1390 */   123,   90,  123,  123,   55,   94,   57,   58,   59,   60,
 /*  1400 */    61,  123,  123,   64,   65,  123,  105,  106,  107,  123,
 /*  1410 */   109,  123,  123,  123,   17,  123,   19,   20,   79,  123,
 /*  1420 */    23,   24,  123,   26,  123,  123,   29,  123,  123,  123,
 /*  1430 */    33,   34,   35,   36,  123,   38,  123,  123,   41,  123,
 /*  1440 */   123,  123,  123,  123,  123,   86,  123,  123,  123,   90,
 /*  1450 */   123,  123,   55,   94,   57,   58,   59,   60,   61,  123,
 /*  1460 */   123,   64,   65,  123,  105,  106,  107,  123,  109,  123,
 /*  1470 */     1,  123,   17,  123,   19,   20,   79,  123,   23,   24,
 /*  1480 */   123,   26,  123,  123,   29,  123,  123,   18,   33,   34,
 /*  1490 */    35,   36,  123,   38,  123,  123,   41,  123,  123,   30,
 /*  1500 */    31,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1510 */    55,  123,   57,   58,   59,   60,   61,  123,  123,   64,
 /*  1520 */    65,  123,  123,   54,  123,  123,  123,  123,  123,  123,
 /*  1530 */    17,  123,   19,   20,   79,  123,   23,   24,  123,   26,
 /*  1540 */   123,  123,   29,  123,  123,  123,   33,   34,   35,   36,
 /*  1550 */   123,   38,  123,  123,   41,  123,  123,  123,  123,  123,
 /*  1560 */   123,  123,  123,  123,  123,  123,  123,  123,   55,  123,
 /*  1570 */    57,   58,   59,   60,   61,  123,  123,   64,   65,  123,
 /*  1580 */   123,  123,  123,  123,  123,  123,  123,  123,   17,  123,
 /*  1590 */    19,   20,   79,  123,   23,   24,  123,   26,  123,  123,
 /*  1600 */    29,  123,  123,  123,   33,   34,   35,   36,  123,   38,
 /*  1610 */   123,  123,   41,  123,  123,  123,  123,  123,  123,  123,
 /*  1620 */   123,  123,  123,  123,  123,  123,   55,  123,   57,   58,
 /*  1630 */    59,   60,   61,  123,  123,   64,   65,  123,  123,  123,
 /*  1640 */   123,  123,  123,  123,  123,  123,   17,  123,   19,   20,
 /*  1650 */    79,  123,   23,   24,  123,   26,  123,  123,   29,  123,
 /*  1660 */   123,  123,   33,   34,   35,   36,  123,   38,  123,  123,
 /*  1670 */    41,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1680 */   123,  123,  123,  123,   55,  123,   57,   58,   59,   60,
 /*  1690 */    61,  123,  123,   64,   65,  123,  123,  123,  123,  123,
 /*  1700 */   123,  123,  123,  123,   17,  123,   19,   20,   79,  123,
 /*  1710 */    23,   24,  123,   26,  123,  123,   29,  123,  123,  123,
 /*  1720 */    33,   34,   35,   36,  123,   38,  123,  123,   41,  123,
 /*  1730 */   123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1740 */   123,  123,   55,  123,   57,   58,   59,   60,   61,  123,
 /*  1750 */   123,   64,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1760 */   123,  123,   17,  123,   19,   20,   79,  123,   23,   24,
 /*  1770 */   123,   26,  123,  123,   29,  123,  123,  123,   33,   34,
 /*  1780 */    35,   36,  123,   38,  123,  123,   41,  123,  123,  123,
 /*  1790 */   123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
 /*  1800 */    55,  123,   57,   58,   59,   60,   61,  123,  123,   64,
 /*  1810 */   123,  123,  123,  123,  123,  123,  123,  123,  123,   18,
 /*  1820 */   123,  123,  123,  123,   79,  123,   25,  123,   27,   28,
 /*  1830 */   123,   30,   31,  123,   91,   92,  123,  123,   37,   38,
 /*  1840 */    39,  123,  123,  100,  123,  123,  103,  104,  123,   86,
 /*  1850 */   123,  123,  123,   90,  123,   54,   93,   94,  123,  123,
 /*  1860 */   117,  123,  123,   62,  101,  102,  123,   66,  105,  106,
 /*  1870 */   107,  123,  109,  123,  123,  123,   11,  123,  123,  116,
 /*  1880 */   123,   80,   17,  123,   11,  123,  123,  123,   23,   24,
 /*  1890 */    17,  123,  123,  123,   29,  123,   23,   24,   33,   34,
 /*  1900 */    35,  123,   29,  123,  123,  123,   33,   34,   35,  123,
 /*  1910 */   123,   86,  123,  123,  123,   90,  123,  123,   93,   94,
 /*  1920 */   123,  123,  123,  123,  123,  123,  101,  102,  123,  123,
 /*  1930 */   105,  106,  107,  123,  109,  123,  123,  123,  123,  123,
 /*  1940 */   123,  116,  123,   86,   79,   80,   81,   90,  123,  123,
 /*  1950 */    93,   94,   79,   80,   81,  123,  123,  123,  101,  102,
 /*  1960 */   123,  123,  105,  106,  107,  123,  109,  123,   86,  123,
 /*  1970 */   123,  123,   90,  123,  123,   93,   94,  123,  123,  123,
 /*  1980 */   123,  123,  123,  101,  102,  123,   86,  105,  106,  107,
 /*  1990 */    90,  109,  123,   93,   94,  123,  123,  123,  123,   91,
 /*  2000 */    92,  101,  102,  123,  123,  105,  106,  107,  100,  109,
 /*  2010 */   123,  103,  104,   86,  123,  123,  123,   90,  123,  123,
 /*  2020 */    93,   94,  123,  123,  123,  117,  123,  123,  101,  102,
 /*  2030 */   123,   86,  105,  106,  107,   90,  109,  123,   93,   94,
 /*  2040 */   123,   86,  123,  123,  123,   90,  101,  102,   93,   94,
 /*  2050 */   105,  106,  107,  123,  109,  123,  101,  102,  123,   86,
 /*  2060 */   105,  106,  107,   90,  109,  123,   93,   94,  123,  123,
 /*  2070 */   123,  123,  123,  123,  101,  102,  123,   86,  105,  106,
 /*  2080 */   107,   90,  109,  123,   93,   94,  123,  123,  123,  123,
 /*  2090 */   123,  123,  101,  102,  123,  123,  105,  106,  107,  123,
 /*  2100 */   109,  123,  123,  123,   86,   91,   92,  123,   90,  123,
 /*  2110 */   123,   93,   94,  123,  100,  123,  123,  103,  104,  101,
 /*  2120 */   102,  123,   86,  105,  106,  107,   90,  109,  123,   93,
 /*  2130 */    94,  117,   86,  123,  123,  123,   90,  101,  102,   93,
 /*  2140 */    94,  105,  106,  107,  123,  109,  123,  101,  102,  123,
 /*  2150 */    86,  105,  106,  107,   90,  109,  123,   93,   94,  123,
 /*  2160 */   123,  123,  123,  123,  123,  101,  102,  123,   86,  105,
 /*  2170 */   106,  107,   90,  109,  123,   93,   94,  123,  123,  123,
 /*  2180 */   123,  123,  123,  101,  102,  123,  123,  105,  106,  107,
 /*  2190 */   123,  109,  123,  123,  123,   86,   91,   92,  123,   90,
 /*  2200 */   123,  123,   93,   94,  123,  100,  123,  123,  103,  104,
 /*  2210 */   101,  102,  123,   86,  105,  106,  107,   90,  109,  123,
 /*  2220 */    93,   94,  117,   86,  123,  123,  123,   90,  101,  102,
 /*  2230 */    93,   94,  105,  106,  107,  123,  109,  123,  101,  102,
 /*  2240 */   123,   86,  105,  106,  107,   90,  109,  123,   93,   94,
 /*  2250 */   123,  123,  123,  123,  123,  123,  101,  102,  123,   86,
 /*  2260 */   105,  106,  107,   90,  109,  123,   93,   94,  123,  123,
 /*  2270 */   123,  123,  123,  123,  101,  102,  123,  123,  105,  106,
 /*  2280 */   107,  123,  109,  123,  123,  123,   86,   91,   92,  123,
 /*  2290 */    90,  123,  123,   93,   94,  123,  100,  123,  123,  103,
 /*  2300 */   104,  101,  102,  123,   86,  105,  106,  107,   90,  109,
 /*  2310 */   123,   93,   94,  117,   86,  123,  123,  123,   90,  101,
 /*  2320 */   102,   93,   94,  105,  106,  107,  123,  109,  123,  101,
 /*  2330 */   102,  123,   86,  105,  106,  107,   90,  109,  123,   93,
 /*  2340 */    94,  123,  123,  123,  123,  123,  123,  101,  102,  123,
 /*  2350 */    86,  105,  106,  107,   90,  109,  123,   93,   94,  123,
 /*  2360 */   123,  123,  123,  123,  123,  101,  102,  123,  123,  105,
 /*  2370 */   106,  107,  123,  109,  123,  123,  123,   86,   91,   92,
 /*  2380 */   123,   90,  123,  123,   93,   94,  123,  100,  123,  123,
 /*  2390 */   103,  104,  101,  102,  123,   86,  105,  106,  107,   90,
 /*  2400 */   109,  123,   93,   94,  117,   86,  123,  123,  123,   90,
 /*  2410 */   101,  102,   93,   94,  105,  106,  107,  123,  109,  123,
 /*  2420 */   101,  102,  123,   86,  105,  106,  107,   90,  109,  123,
 /*  2430 */    93,   94,  123,  123,  123,  123,  123,  123,  101,  102,
 /*  2440 */   123,   86,  105,  106,  107,   90,  109,  123,   93,   94,
 /*  2450 */   123,  123,  123,  123,  123,  123,  101,  102,  123,  123,
 /*  2460 */   105,  106,  107,  123,  109,  123,  123,  123,   86,   91,
 /*  2470 */    92,  123,   90,  123,  123,   93,   94,  123,  100,  123,
 /*  2480 */   123,  103,  104,  101,  102,  123,   86,  105,  106,  107,
 /*  2490 */    90,  109,  123,   93,   94,  117,   86,  123,  123,  123,
 /*  2500 */    90,  101,  102,   93,   94,  105,  106,  107,  123,  109,
 /*  2510 */   123,  101,  102,  123,   86,  105,  106,  107,   90,  109,
 /*  2520 */   123,   93,   94,  123,  123,  123,  123,  123,  123,  101,
 /*  2530 */   102,  123,   86,  105,  106,  107,   90,  109,  123,   93,
 /*  2540 */    94,  123,  123,  123,  123,  123,  123,  101,  102,  123,
 /*  2550 */   123,  105,  106,  107,  123,  109,  123,  123,  123,   86,
 /*  2560 */   123,  123,  123,   90,  123,  123,   93,   94,  123,  123,
 /*  2570 */   123,  123,  123,  123,  101,  102,  123,   86,  105,  106,
 /*  2580 */   107,   90,  109,  123,   93,   94,  123,   86,  123,  123,
 /*  2590 */   123,   90,  101,  102,   93,   94,  105,  106,  107,  123,
 /*  2600 */   109,  123,  101,  102,  123,  123,  105,  106,  107,  123,
 /*  2610 */   109,
);
    const YY_SHIFT_USE_DFLT = -36;
    const YY_SHIFT_MAX = 257;
    static public $yy_shift_ofst = array(
 /*     0 */    -2, 1397, 1165, 1165, 1397, 1165, 1339, 1165, 1339, 1107,
 /*    10 */  1165, 1165, 1165, 1165, 1165, 1165, 1165, 1513, 1165, 1165,
 /*    20 */  1165, 1571, 1165, 1165, 1165, 1165, 1629, 1165, 1165, 1165,
 /*    30 */  1165, 1165, 1165, 1165, 1223, 1165, 1165, 1165, 1165, 1165,
 /*    40 */  1165, 1455, 1165, 1513, 1223, 1281, 1281, 1687, 1687, 1687,
 /*    50 */  1687, 1745, 1687, 1687,  208,  130,   -1,   77,  761,  761,
 /*    60 */   761,  761,  945,  892,  839,  630,  314,  261,  367,  708,
 /*    70 */   420,  552,  474,  998,  998,  998,  998,  998,  998,  998,
 /*    80 */   998,  998,  998,  998,  998,  998,  998,  998,  998,  998,
 /*    90 */   998, 1039, 1039, 1131,  138,  165,   -2, 1873,   -4, 1160,
 /*   100 */  1117, 1117,  228,  561,  561,  329,  546,  408,  165,  165,
 /*   110 */  1865,   48, 1469,  121, 1201,  139,  147,  221,  278,  131,
 /*   120 */   169,  269,   -3,  408,  323,  357,  323,   81,  330,  382,
 /*   130 */   357,  383,  357, 1293,  357,  439,  357,  357,  323,  431,
 /*   140 */   408,  357,  357,  383,  424,  357,   13,   13,   13,  457,
 /*   150 */    13,   13,   13,   13,  457,  559,   13,  556,  -36,   41,
 /*   160 */     3,  174,  565,  -35,  700,  830, 1116, 1075, 1177,  566,
 /*   170 */   -35, 1244, 1278,  633,  614,  334, 1235, 1197,  -35, 1179,
 /*   180 */  1186,  -35, 1230, 1221, 1220, 1279, 1288, 1178, 1259,  -35,
 /*   190 */   837,  706,  606,  560,  442,  560,  457,  457,  540,  606,
 /*   200 */    13,  457,   13,  -36,  -36,  -36,  -36,  -36, 1801,  835,
 /*   210 */    99,  206,   63,  179,  232,  336,   91,  332,  592,  437,
 /*   220 */   284,  284,  255,  183,  281,  369,  199,  183,  555,  513,
 /*   230 */   514,  510,  512,  511,  509,  515,  480,  519,  502,  472,
 /*   240 */   452,  501,  508,  476,  482,  440,  465,  419,  463,  442,
 /*   250 */   461,  484,  445,  493,  490,  471,  479,  486,
);
    const YY_REDUCE_USE_DFLT = -53;
    const YY_REDUCE_MAX = 207;
    static public $yy_reduce_ofst = array(
 /*     0 */   -49,   -5, 1825, 1763,  626,  126,  470,  548,  757, 2137,
 /*    10 */  2127, 2109, 2082, 2155, 2064, 2246, 2228, 2218, 2200, 2291,
 /*    20 */  2264, 1973, 1900, 1945, 1882, 1857, 1927, 2046, 2036, 1955,
 /*    30 */  2018, 1991, 2173, 2473, 2491, 2428, 2355, 2400, 2410, 2382,
 /*    40 */  2337, 2309, 2501, 2446, 2319,  635,    4, 1243, 1359, 1301,
 /*    50 */  1185, 1069, 1127,  553, 1743, 2014, 2105, 1908, 2378, 1743,
 /*    60 */  2196, 2287,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
 /*    70 */   -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
 /*    80 */   -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
 /*    90 */   -12,  -12,  -12,  123,  172,   96,   49,  204,  622,  462,
 /*   100 */   227,  253,  156,  749,  544,  464,  -27,  171,  279,   16,
 /*   110 */   362,  337,  200,  266,  200,  200,  266,  338,  180,  200,
 /*   120 */   266,  200,  180,  328,  290,  335,  289,  180,  388,  388,
 /*   130 */   675,  388,  598,  358,  388,  807,  859,  860,  393,  340,
 /*   140 */   359,  806,  318,  676,  200,  756,  200,  200,  200,  180,
 /*   150 */   200,  200,  200,  200,  184,  196,  200,  224,  200,  473,
 /*   160 */   468,  468,  -52,  450,  459,  459,  459,  459,  459,  -52,
 /*   170 */   450,  459,  459,  459,  -52,  477,  459,  459,  450,  459,
 /*   180 */   459,  450,  459,  459,  459,  459,  459,  459,  459,  450,
 /*   190 */   459,  459,  467,  517,  497,  485,  120,  120,  521,  467,
 /*   200 */   -52,  120,  -52,   52,  185,  378,  302,  353,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 23, 24, 29, 33, 34, 35, ),
        /* 1 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 2 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 3 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 4 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 5 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 6 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 7 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 8 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 9 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 66, 79, ),
        /* 10 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 11 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 12 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 13 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 14 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 15 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 16 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 17 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 18 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 19 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 20 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 21 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 22 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 23 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 24 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 25 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 26 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 27 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 28 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 29 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 30 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 31 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 32 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 33 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 34 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 35 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 36 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 37 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 38 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 39 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 40 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 41 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 42 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 43 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 44 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 45 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 46 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 65, 79, ),
        /* 47 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 48 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 49 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 50 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 51 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 52 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 53 */ array(17, 19, 20, 23, 24, 26, 29, 33, 34, 35, 36, 38, 41, 55, 57, 58, 59, 60, 61, 64, 79, ),
        /* 54 */ array(1, 18, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 55 */ array(1, 28, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 56 */ array(1, 18, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 57 */ array(1, 18, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 58 */ array(1, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 59 */ array(1, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 60 */ array(1, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 61 */ array(1, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 62 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 63 */ array(1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 64 */ array(1, 18, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 65 */ array(1, 18, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 66 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 67 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, ),
        /* 68 */ array(1, 2, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 69 */ array(1, 18, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 70 */ array(1, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 71 */ array(1, 18, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 72 */ array(1, 25, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 73 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 74 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 75 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 76 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 77 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 78 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 79 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 80 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 81 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 82 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 83 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 84 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 85 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 86 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 87 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 88 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 89 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 90 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 91 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 92 */ array(40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ),
        /* 93 */ array(1, 18, 22, 30, 38, 62, ),
        /* 94 */ array(1, 18, 30, 54, ),
        /* 95 */ array(1, 30, ),
        /* 96 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 23, 24, 29, 33, 34, 35, ),
        /* 97 */ array(11, 17, 23, 24, 29, 33, 34, 35, 79, 80, 81, ),
        /* 98 */ array(17, 20, 30, 32, ),
        /* 99 */ array(17, 20, 30, 32, ),
        /* 100 */ array(1, 18, 30, ),
        /* 101 */ array(1, 18, 30, ),
        /* 102 */ array(1, 2, 18, ),
        /* 103 */ array(17, 20, 30, ),
        /* 104 */ array(17, 20, 30, ),
        /* 105 */ array(19, 20, 64, ),
        /* 106 */ array(22, 60, 65, ),
        /* 107 */ array(19, 38, ),
        /* 108 */ array(1, 30, ),
        /* 109 */ array(1, 30, ),
        /* 110 */ array(11, 17, 23, 24, 29, 33, 34, 35, 79, 80, 81, ),
        /* 111 */ array(5, 6, 7, 8, 9, 14, 15, 16, ),
        /* 112 */ array(1, 18, 30, 31, 54, ),
        /* 113 */ array(17, 20, 21, 63, ),
        /* 114 */ array(1, 18, 30, 54, ),
        /* 115 */ array(1, 18, 30, 54, ),
        /* 116 */ array(17, 20, 63, ),
        /* 117 */ array(1, 18, 22, ),
        /* 118 */ array(21, 22, 62, ),
        /* 119 */ array(1, 32, 54, ),
        /* 120 */ array(17, 20, 21, ),
        /* 121 */ array(1, 18, 54, ),
        /* 122 */ array(21, 22, 62, ),
        /* 123 */ array(19, 38, ),
        /* 124 */ array(19, 20, ),
        /* 125 */ array(17, 20, ),
        /* 126 */ array(19, 20, ),
        /* 127 */ array(22, 62, ),
        /* 128 */ array(17, 20, ),
        /* 129 */ array(17, 20, ),
        /* 130 */ array(17, 20, ),
        /* 131 */ array(17, 20, ),
        /* 132 */ array(17, 20, ),
        /* 133 */ array(18, 30, ),
        /* 134 */ array(17, 20, ),
        /* 135 */ array(17, 20, ),
        /* 136 */ array(17, 20, ),
        /* 137 */ array(17, 20, ),
        /* 138 */ array(19, 20, ),
        /* 139 */ array(1, 18, ),
        /* 140 */ array(19, 38, ),
        /* 141 */ array(17, 20, ),
        /* 142 */ array(17, 20, ),
        /* 143 */ array(17, 20, ),
        /* 144 */ array(1, 54, ),
        /* 145 */ array(17, 20, ),
        /* 146 */ array(1, ),
        /* 147 */ array(1, ),
        /* 148 */ array(1, ),
        /* 149 */ array(22, ),
        /* 150 */ array(1, ),
        /* 151 */ array(1, ),
        /* 152 */ array(1, ),
        /* 153 */ array(1, ),
        /* 154 */ array(22, ),
        /* 155 */ array(30, ),
        /* 156 */ array(1, ),
        /* 157 */ array(30, ),
        /* 158 */ array(),
        /* 159 */ array(17, 19, 20, ),
        /* 160 */ array(17, 20, 21, ),
        /* 161 */ array(17, 20, 63, ),
        /* 162 */ array(1, 18, ),
        /* 163 */ array(60, 65, ),
        /* 164 */ array(18, 30, ),
        /* 165 */ array(18, 30, ),
        /* 166 */ array(18, 30, ),
        /* 167 */ array(18, 30, ),
        /* 168 */ array(18, 30, ),
        /* 169 */ array(1, 18, ),
        /* 170 */ array(60, 65, ),
        /* 171 */ array(18, 30, ),
        /* 172 */ array(18, 30, ),
        /* 173 */ array(18, 30, ),
        /* 174 */ array(1, 18, ),
        /* 175 */ array(17, 38, ),
        /* 176 */ array(18, 30, ),
        /* 177 */ array(18, 30, ),
        /* 178 */ array(60, 65, ),
        /* 179 */ array(18, 30, ),
        /* 180 */ array(18, 30, ),
        /* 181 */ array(60, 65, ),
        /* 182 */ array(18, 30, ),
        /* 183 */ array(18, 30, ),
        /* 184 */ array(18, 30, ),
        /* 185 */ array(18, 30, ),
        /* 186 */ array(18, 30, ),
        /* 187 */ array(18, 30, ),
        /* 188 */ array(18, 30, ),
        /* 189 */ array(60, 65, ),
        /* 190 */ array(18, 30, ),
        /* 191 */ array(18, 30, ),
        /* 192 */ array(2, ),
        /* 193 */ array(30, ),
        /* 194 */ array(38, ),
        /* 195 */ array(30, ),
        /* 196 */ array(22, ),
        /* 197 */ array(22, ),
        /* 198 */ array(15, ),
        /* 199 */ array(2, ),
        /* 200 */ array(1, ),
        /* 201 */ array(22, ),
        /* 202 */ array(1, ),
        /* 203 */ array(),
        /* 204 */ array(),
        /* 205 */ array(),
        /* 206 */ array(),
        /* 207 */ array(),
        /* 208 */ array(18, 25, 27, 28, 30, 31, 37, 38, 39, 54, 62, 66, 80, ),
        /* 209 */ array(18, 21, 30, 38, 62, ),
        /* 210 */ array(38, 60, 62, 66, ),
        /* 211 */ array(18, 30, 38, 62, ),
        /* 212 */ array(17, 19, 20, 36, ),
        /* 213 */ array(32, 38, 62, ),
        /* 214 */ array(37, 39, ),
        /* 215 */ array(37, 39, ),
        /* 216 */ array(2, 21, ),
        /* 217 */ array(20, 63, ),
        /* 218 */ array(21, 60, ),
        /* 219 */ array(37, 39, ),
        /* 220 */ array(38, 62, ),
        /* 221 */ array(38, 62, ),
        /* 222 */ array(37, 66, ),
        /* 223 */ array(38, 62, ),
        /* 224 */ array(37, 39, ),
        /* 225 */ array(25, 37, ),
        /* 226 */ array(19, 26, ),
        /* 227 */ array(38, 62, ),
        /* 228 */ array(2, ),
        /* 229 */ array(20, ),
        /* 230 */ array(20, ),
        /* 231 */ array(20, ),
        /* 232 */ array(19, ),
        /* 233 */ array(2, ),
        /* 234 */ array(20, ),
        /* 235 */ array(20, ),
        /* 236 */ array(56, ),
        /* 237 */ array(20, ),
        /* 238 */ array(38, ),
        /* 239 */ array(66, ),
        /* 240 */ array(80, ),
        /* 241 */ array(36, ),
        /* 242 */ array(20, ),
        /* 243 */ array(36, ),
        /* 244 */ array(20, ),
        /* 245 */ array(64, ),
        /* 246 */ array(20, ),
        /* 247 */ array(64, ),
        /* 248 */ array(19, ),
        /* 249 */ array(38, ),
        /* 250 */ array(20, ),
        /* 251 */ array(19, ),
        /* 252 */ array(60, ),
        /* 253 */ array(18, ),
        /* 254 */ array(19, ),
        /* 255 */ array(39, ),
        /* 256 */ array(27, ),
        /* 257 */ array(21, ),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
        /* 389 */ array(),
        /* 390 */ array(),
        /* 391 */ array(),
        /* 392 */ array(),
        /* 393 */ array(),
        /* 394 */ array(),
        /* 395 */ array(),
        /* 396 */ array(),
);
    static public $yy_default = array(
 /*     0 */   400,  586,  557,  557,  603,  557,  603,  557,  603,  603,
 /*    10 */   603,  603,  603,  603,  603,  603,  603,  603,  603,  603,
 /*    20 */   603,  603,  603,  603,  603,  603,  603,  603,  603,  603,
 /*    30 */   603,  603,  603,  603,  603,  603,  603,  603,  603,  603,
 /*    40 */   603,  603,  603,  603,  603,  603,  603,  603,  603,  603,
 /*    50 */   603,  603,  603,  603,  603,  461,  603,  603,  461,  461,
 /*    60 */   461,  461,  603,  603,  603,  603,  603,  603,  603,  603,
 /*    70 */   466,  603,  603,  555,  556,  491,  494,  495,  463,  587,
 /*    80 */   588,  471,  486,  466,  485,  487,  468,  472,  490,  589,
 /*    90 */   482,  499,  500,  510,  474,  461,  397,  603,  461,  461,
 /*   100 */   521,  481,  603,  461,  461,  603,  569,  603,  461,  461,
 /*   110 */   603,  603,  474,  529,  474,  474,  529,  603,  522,  474,
 /*   120 */   529,  474,  522,  603,  603,  603,  603,  522,  603,  603,
 /*   130 */   603,  603,  603,  603,  603,  603,  603,  603,  603,  603,
 /*   140 */   603,  603,  529,  603,  474,  603,  477,  502,  484,  522,
 /*   150 */   478,  479,  503,  498,  566,  461,  504,  461,  564,  603,
 /*   160 */   603,  530,  603,  549,  603,  603,  603,  603,  603,  603,
 /*   170 */   546,  603,  603,  603,  603,  529,  603,  603,  548,  603,
 /*   180 */   603,  547,  603,  603,  603,  603,  603,  603,  603,  527,
 /*   190 */   603,  603,  558,  602,  529,  602,  567,  570,  417,  559,
 /*   200 */   521,  543,  481,  529,  529,  563,  563,  563,  476,  510,
 /*   210 */   510,  510,  603,  510,  603,  603,  541,  603,  506,  603,
 /*   220 */   497,  518,  603,  510,  603,  603,  603,  496,  541,  603,
 /*   230 */   603,  603,  603,  541,  603,  603,  512,  603,  568,  603,
 /*   240 */   501,  603,  603,  508,  603,  603,  603,  603,  603,  541,
 /*   250 */   603,  603,  506,  501,  603,  603,  469,  603,  542,  565,
 /*   260 */   551,  552,  407,  509,  538,  536,  512,  507,  553,  535,
 /*   270 */   534,  537,  561,  540,  446,  449,  541,  401,  473,  402,
 /*   280 */   445,  441,  448,  460,  427,  398,  443,  399,  442,  440,
 /*   290 */   447,  452,  453,  406,  408,  560,  451,  457,  501,  450,
 /*   300 */   458,  405,  456,  562,  404,  403,  454,  470,  455,  444,
 /*   310 */   601,  505,  411,  415,  423,  493,  492,  422,  571,  418,
 /*   320 */   572,  416,  428,  424,  430,  431,  517,  432,  425,  488,
 /*   330 */   429,  598,  489,  526,  525,  545,  582,  581,  580,  480,
 /*   340 */   544,  420,  421,  519,  419,  579,  575,  574,  573,  576,
 /*   350 */   524,  578,  577,  520,  414,  515,  528,  413,  523,  583,
 /*   360 */   593,  600,  594,  596,  599,  412,  585,  409,  439,  550,
 /*   370 */   475,  410,  584,  476,  554,  595,  592,  435,  426,  459,
 /*   380 */   436,  434,  483,  514,  433,  513,  511,  533,  590,  531,
 /*   390 */   591,  597,  437,  438,  532,  539,  516,
);
    const YYNOCODE = 124;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 397;
    const YYNRULE = 206;
    const YYERRORSYMBOL = 82;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'TEMPLATEINIT',
  'COMMENT',       'PHPSTARTTAG',   'PHPENDTAG',     'ASPSTARTTAG',
  'ASPENDTAG',     'FAKEPHPSTARTTAG',  'XMLTAG',        'TEXT',
  'STRIPON',       'STRIPOFF',      'LITERALSTART',  'LITERALEND',
  'LITERAL',       'LDEL',          'RDEL',          'DOLLAR',
  'ID',            'EQUAL',         'PTR',           'LDELIF',
  'LDELFOR',       'SEMICOLON',     'IDINCDEC',      'TO',
  'STEP',          'LDELFOREACH',   'SPACE',         'AS',
  'APTR',          'LDELSETFILTER',  'SMARTYBLOCKCHILD',  'LDELSLASH',
  'INTEGER',       'COMMA',         'OPENP',         'CLOSEP',
  'MATH',          'UNIMATH',       'ANDSYM',        'ISIN',
  'ISDIVBY',       'ISNOTDIVBY',    'ISEVEN',        'ISNOTEVEN',
  'ISEVENBY',      'ISNOTEVENBY',   'ISODD',         'ISNOTODD',
  'ISODDBY',       'ISNOTODDBY',    'INSTANCEOF',    'NAMESPACE',
  'QMARK',         'NOT',           'TYPECAST',      'HEX',
  'DOT',           'SINGLEQUOTESTRING',  'DOUBLECOLON',   'AT',
  'HATCH',         'OPENB',         'CLOSEB',        'EQUALS',
  'NOTEQUALS',     'GREATERTHAN',   'LESSTHAN',      'GREATEREQUAL',
  'LESSEQUAL',     'IDENTITY',      'NONEIDENTITY',  'MOD',
  'LAND',          'LOR',           'LXOR',          'QUOTE',
  'BACKTICK',      'DOLLARID',      'error',         'start',
  'template',      'template_element',  'smartytag',     'literal',
  'literal_elements',  'literal_element',  'value',         'modifierlist',
  'attributes',    'expr',          'varindexed',    'statement',
  'statements',    'optspace',      'varvar',        'modparameters',
  'attribute',     'ternary',       'array',         'ifcond',
  'lop',           'variable',      'function',      'doublequoted_with_quotes',
  'static_class_access',  'object',        'arrayindex',    'indexdef',
  'varvarele',     'objectchain',   'objectelement',  'method',
  'params',        'modifier',      'modparameter',  'arrayelements',
  'arrayelement',  'doublequoted',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= TEMPLATEINIT",
 /*   5 */ "template_element ::= smartytag",
 /*   6 */ "template_element ::= COMMENT",
 /*   7 */ "template_element ::= literal",
 /*   8 */ "template_element ::= PHPSTARTTAG",
 /*   9 */ "template_element ::= PHPENDTAG",
 /*  10 */ "template_element ::= ASPSTARTTAG",
 /*  11 */ "template_element ::= ASPENDTAG",
 /*  12 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  13 */ "template_element ::= XMLTAG",
 /*  14 */ "template_element ::= TEXT",
 /*  15 */ "template_element ::= STRIPON",
 /*  16 */ "template_element ::= STRIPOFF",
 /*  17 */ "literal ::= LITERALSTART LITERALEND",
 /*  18 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  19 */ "literal_elements ::= literal_elements literal_element",
 /*  20 */ "literal_elements ::=",
 /*  21 */ "literal_element ::= literal",
 /*  22 */ "literal_element ::= LITERAL",
 /*  23 */ "literal_element ::= PHPSTARTTAG",
 /*  24 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  25 */ "literal_element ::= PHPENDTAG",
 /*  26 */ "literal_element ::= ASPSTARTTAG",
 /*  27 */ "literal_element ::= ASPENDTAG",
 /*  28 */ "smartytag ::= LDEL value RDEL",
 /*  29 */ "smartytag ::= LDEL value modifierlist attributes RDEL",
 /*  30 */ "smartytag ::= LDEL value attributes RDEL",
 /*  31 */ "smartytag ::= LDEL expr modifierlist attributes RDEL",
 /*  32 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  35 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  36 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  37 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  38 */ "smartytag ::= LDEL ID RDEL",
 /*  39 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  40 */ "smartytag ::= LDEL ID modifierlist attributes RDEL",
 /*  41 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes RDEL",
 /*  42 */ "smartytag ::= LDELIF expr RDEL",
 /*  43 */ "smartytag ::= LDELIF expr attributes RDEL",
 /*  44 */ "smartytag ::= LDELIF statement RDEL",
 /*  45 */ "smartytag ::= LDELIF statement attributes RDEL",
 /*  46 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar EQUAL expr attributes RDEL",
 /*  47 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace IDINCDEC attributes RDEL",
 /*  48 */ "smartytag ::= LDELFOR statement TO expr attributes RDEL",
 /*  49 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes RDEL",
 /*  50 */ "smartytag ::= LDELFOREACH attributes RDEL",
 /*  51 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes RDEL",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  53 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes RDEL",
 /*  54 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  55 */ "smartytag ::= LDELSETFILTER ID modparameters RDEL",
 /*  56 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
 /*  57 */ "smartytag ::= SMARTYBLOCKCHILD",
 /*  58 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  59 */ "smartytag ::= LDELSLASH ID modifierlist RDEL",
 /*  60 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  61 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist RDEL",
 /*  62 */ "attributes ::= attributes attribute",
 /*  63 */ "attributes ::= attribute",
 /*  64 */ "attributes ::=",
 /*  65 */ "attribute ::= SPACE ID EQUAL ID",
 /*  66 */ "attribute ::= SPACE ID EQUAL expr",
 /*  67 */ "attribute ::= SPACE ID EQUAL value",
 /*  68 */ "attribute ::= SPACE ID",
 /*  69 */ "attribute ::= SPACE expr",
 /*  70 */ "attribute ::= SPACE value",
 /*  71 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  72 */ "statements ::= statement",
 /*  73 */ "statements ::= statements COMMA statement",
 /*  74 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  75 */ "statement ::= varindexed EQUAL expr",
 /*  76 */ "statement ::= OPENP statement CLOSEP",
 /*  77 */ "expr ::= value",
 /*  78 */ "expr ::= ternary",
 /*  79 */ "expr ::= DOLLAR ID COLON ID",
 /*  80 */ "expr ::= expr MATH value",
 /*  81 */ "expr ::= expr UNIMATH value",
 /*  82 */ "expr ::= expr ANDSYM value",
 /*  83 */ "expr ::= array",
 /*  84 */ "expr ::= expr modifierlist",
 /*  85 */ "expr ::= expr ifcond expr",
 /*  86 */ "expr ::= expr ISIN array",
 /*  87 */ "expr ::= expr ISIN value",
 /*  88 */ "expr ::= expr lop expr",
 /*  89 */ "expr ::= expr ISDIVBY expr",
 /*  90 */ "expr ::= expr ISNOTDIVBY expr",
 /*  91 */ "expr ::= expr ISEVEN",
 /*  92 */ "expr ::= expr ISNOTEVEN",
 /*  93 */ "expr ::= expr ISEVENBY expr",
 /*  94 */ "expr ::= expr ISNOTEVENBY expr",
 /*  95 */ "expr ::= expr ISODD",
 /*  96 */ "expr ::= expr ISNOTODD",
 /*  97 */ "expr ::= expr ISODDBY expr",
 /*  98 */ "expr ::= expr ISNOTODDBY expr",
 /*  99 */ "expr ::= value INSTANCEOF ID",
 /* 100 */ "expr ::= value INSTANCEOF NAMESPACE",
 /* 101 */ "expr ::= value INSTANCEOF value",
 /* 102 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /* 103 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /* 104 */ "value ::= variable",
 /* 105 */ "value ::= UNIMATH value",
 /* 106 */ "value ::= NOT value",
 /* 107 */ "value ::= TYPECAST value",
 /* 108 */ "value ::= HEX",
 /* 109 */ "value ::= INTEGER",
 /* 110 */ "value ::= INTEGER DOT INTEGER",
 /* 111 */ "value ::= INTEGER DOT",
 /* 112 */ "value ::= DOT INTEGER",
 /* 113 */ "value ::= ID",
 /* 114 */ "value ::= function",
 /* 115 */ "value ::= OPENP expr CLOSEP",
 /* 116 */ "value ::= SINGLEQUOTESTRING",
 /* 117 */ "value ::= doublequoted_with_quotes",
 /* 118 */ "value ::= IDINCDEC",
 /* 119 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 120 */ "value ::= NAMESPACE DOUBLECOLON static_class_access",
 /* 121 */ "value ::= NAMESPACE",
 /* 122 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 123 */ "value ::= smartytag",
 /* 124 */ "value ::= value modifierlist",
 /* 125 */ "variable ::= varindexed",
 /* 126 */ "variable ::= DOLLAR varvar AT ID",
 /* 127 */ "variable ::= object",
 /* 128 */ "variable ::= HATCH ID HATCH",
 /* 129 */ "variable ::= HATCH variable HATCH",
 /* 130 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 131 */ "arrayindex ::= arrayindex indexdef",
 /* 132 */ "arrayindex ::=",
 /* 133 */ "indexdef ::= DOT DOLLAR varvar",
 /* 134 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 135 */ "indexdef ::= DOT ID",
 /* 136 */ "indexdef ::= DOT INTEGER",
 /* 137 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 138 */ "indexdef ::= OPENB ID CLOSEB",
 /* 139 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 140 */ "indexdef ::= OPENB expr CLOSEB",
 /* 141 */ "indexdef ::= OPENB CLOSEB",
 /* 142 */ "varvar ::= varvarele",
 /* 143 */ "varvar ::= varvar varvarele",
 /* 144 */ "varvarele ::= ID",
 /* 145 */ "varvarele ::= LDEL expr RDEL",
 /* 146 */ "object ::= varindexed objectchain",
 /* 147 */ "objectchain ::= objectelement",
 /* 148 */ "objectchain ::= objectchain objectelement",
 /* 149 */ "objectelement ::= PTR ID arrayindex",
 /* 150 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 151 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 152 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 153 */ "objectelement ::= PTR method",
 /* 154 */ "function ::= ID OPENP params CLOSEP",
 /* 155 */ "function ::= NAMESPACE OPENP params CLOSEP",
 /* 156 */ "method ::= ID OPENP params CLOSEP",
 /* 157 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 158 */ "params ::= params COMMA expr",
 /* 159 */ "params ::= expr",
 /* 160 */ "params ::=",
 /* 161 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 162 */ "modifierlist ::= modifier modparameters",
 /* 163 */ "modifier ::= VERT AT ID",
 /* 164 */ "modifier ::= VERT ID",
 /* 165 */ "modparameters ::= modparameters modparameter",
 /* 166 */ "modparameters ::=",
 /* 167 */ "modparameter ::= COLON value",
 /* 168 */ "modparameter ::= COLON array",
 /* 169 */ "static_class_access ::= method",
 /* 170 */ "static_class_access ::= method objectchain",
 /* 171 */ "static_class_access ::= ID",
 /* 172 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 173 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 174 */ "ifcond ::= EQUALS",
 /* 175 */ "ifcond ::= NOTEQUALS",
 /* 176 */ "ifcond ::= GREATERTHAN",
 /* 177 */ "ifcond ::= LESSTHAN",
 /* 178 */ "ifcond ::= GREATEREQUAL",
 /* 179 */ "ifcond ::= LESSEQUAL",
 /* 180 */ "ifcond ::= IDENTITY",
 /* 181 */ "ifcond ::= NONEIDENTITY",
 /* 182 */ "ifcond ::= MOD",
 /* 183 */ "lop ::= LAND",
 /* 184 */ "lop ::= LOR",
 /* 185 */ "lop ::= LXOR",
 /* 186 */ "array ::= OPENB arrayelements CLOSEB",
 /* 187 */ "arrayelements ::= arrayelement",
 /* 188 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 189 */ "arrayelements ::=",
 /* 190 */ "arrayelement ::= value APTR expr",
 /* 191 */ "arrayelement ::= ID APTR expr",
 /* 192 */ "arrayelement ::= expr",
 /* 193 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 194 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 195 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 196 */ "doublequoted ::= doublequotedcontent",
 /* 197 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 198 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 199 */ "doublequotedcontent ::= DOLLARID",
 /* 200 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 201 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 202 */ "doublequotedcontent ::= smartytag",
 /* 203 */ "doublequotedcontent ::= TEXT",
 /* 204 */ "optspace ::= SPACE",
 /* 205 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
		        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
	$this->yyidx = $yyidx;
	$this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 102 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1797 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 0 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 0 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 6 ),
  array( 'lhs' => 86, 'rhs' => 6 ),
  array( 'lhs' => 86, 'rhs' => 7 ),
  array( 'lhs' => 86, 'rhs' => 6 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 6 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 7 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 13 ),
  array( 'lhs' => 86, 'rhs' => 10 ),
  array( 'lhs' => 86, 'rhs' => 6 ),
  array( 'lhs' => 86, 'rhs' => 8 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 8 ),
  array( 'lhs' => 86, 'rhs' => 11 ),
  array( 'lhs' => 86, 'rhs' => 8 ),
  array( 'lhs' => 86, 'rhs' => 11 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 5 ),
  array( 'lhs' => 86, 'rhs' => 6 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 92, 'rhs' => 0 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 4 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 101, 'rhs' => 8 ),
  array( 'lhs' => 101, 'rhs' => 7 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 0 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 5 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 4 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 5 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 1 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 2 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 4 ),
  array( 'lhs' => 114, 'rhs' => 5 ),
  array( 'lhs' => 114, 'rhs' => 6 ),
  array( 'lhs' => 114, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 115, 'rhs' => 4 ),
  array( 'lhs' => 115, 'rhs' => 5 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 0 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 0 ),
  array( 'lhs' => 118, 'rhs' => 2 ),
  array( 'lhs' => 118, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 4 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 119, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 0 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 2 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        17 => 17,
        20 => 17,
        205 => 17,
        18 => 18,
        76 => 18,
        19 => 19,
        105 => 19,
        107 => 19,
        131 => 19,
        170 => 19,
        21 => 21,
        22 => 21,
        69 => 21,
        70 => 21,
        77 => 21,
        78 => 21,
        83 => 21,
        104 => 21,
        108 => 21,
        109 => 21,
        114 => 21,
        116 => 21,
        117 => 21,
        121 => 21,
        127 => 21,
        142 => 21,
        169 => 21,
        171 => 21,
        187 => 21,
        192 => 21,
        204 => 21,
        23 => 23,
        24 => 23,
        25 => 25,
        26 => 26,
        27 => 27,
        28 => 28,
        29 => 29,
        30 => 30,
        32 => 30,
        31 => 31,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        42 => 42,
        43 => 43,
        45 => 43,
        44 => 44,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 61,
        62 => 62,
        63 => 63,
        72 => 63,
        159 => 63,
        163 => 63,
        167 => 63,
        168 => 63,
        64 => 64,
        160 => 64,
        166 => 64,
        65 => 65,
        66 => 66,
        67 => 66,
        71 => 66,
        68 => 68,
        73 => 73,
        74 => 74,
        75 => 74,
        79 => 79,
        80 => 80,
        81 => 80,
        82 => 80,
        84 => 84,
        124 => 84,
        85 => 85,
        88 => 85,
        99 => 85,
        100 => 85,
        86 => 86,
        87 => 87,
        89 => 89,
        90 => 90,
        91 => 91,
        96 => 91,
        92 => 92,
        95 => 92,
        93 => 93,
        98 => 93,
        94 => 94,
        97 => 94,
        101 => 101,
        102 => 102,
        103 => 103,
        106 => 106,
        110 => 110,
        111 => 111,
        112 => 112,
        113 => 113,
        115 => 115,
        118 => 118,
        119 => 119,
        120 => 120,
        122 => 122,
        123 => 123,
        125 => 125,
        126 => 126,
        128 => 128,
        129 => 129,
        130 => 130,
        132 => 132,
        189 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        140 => 137,
        138 => 138,
        139 => 139,
        141 => 141,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        158 => 158,
        161 => 161,
        162 => 162,
        164 => 164,
        165 => 165,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        186 => 186,
        188 => 188,
        190 => 190,
        191 => 191,
        193 => 193,
        194 => 194,
        195 => 195,
        196 => 196,
        197 => 197,
        198 => 197,
        200 => 197,
        199 => 199,
        201 => 201,
        202 => 202,
        203 => 203,
    );
#line 113 "smarty_internal_templateparser.y"
    function yy_r0(){
   // execute end of template
   $this->current_buffer->append_subtree(new _smarty_text($this, "<?php array_shift(\$_smarty_tpl->trace_call_stack);?>"));
   if ($this->compiler->template->caching) {
       $this->compiler->has_code = true;
       $this->compiler->nocache_nolog = true;
       $this->current_buffer->append_subtree(new _smarty_text($this, $this->compiler->processNocacheCode("<?php array_shift(\$_smarty_tpl->trace_call_stack);?>", true)));
   }
   // merge all buffer to output
   $this->_retvalue = $this->root_buffer->to_smarty_php();
    }
#line 2245 "smarty_internal_templateparser.php"
#line 129 "smarty_internal_templateparser.y"
    function yy_r1(){
    $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2250 "smarty_internal_templateparser.php"
#line 145 "smarty_internal_templateparser.y"
    function yy_r4(){
    if ($this->compiler->template->source->type == 'eval' || $this->compiler->template->source->type == 'string') {
        $resource = $this->compiler->template->source->type;
    } else {
        $resource = $this->compiler->template->template_resource;
        // santitize extends resource
        if (strpos($resource,'extends:') !==false) {
            $start = strpos($resource,':');
            $end = strpos($resource,'|');
            $resource = substr($resource,$start+1,$end-$start-1);
        }
    }
    $code = "<?php array_unshift(\$_smarty_tpl->trace_call_stack, array('{$resource}', 0, '{$this->compiler->template->source->type}'));?>";
    if ($this->compiler->template->caching) {
        $this->compiler->has_code = true;
        $this->compiler->nocache_nolog = true;
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($code, true) . $code);
    } else {
        $this->_retvalue = new _smarty_tag($this, $code);
    }
    }
#line 2273 "smarty_internal_templateparser.php"
#line 169 "smarty_internal_templateparser.y"
    function yy_r5(){
    if ($this->compiler->has_code) {
        $tmp ='';
        if ($this->smarty->enable_traceback && (!$this->compiler->nocache && !$this->compiler->tag_nocache) && $this->last_taglineno != $this->lex->taglineno ||
            (($this->compiler->nocache || $this->compiler->tag_nocache) && $this->last_taglineno_nocache != $this->lex->taglineno)) {
            $tmp = "<?php \$_smarty_tpl->trace_call_stack[0][1] = {$this->lex->taglineno};?>";
            if (!$this->compiler->nocache && !$this->compiler->tag_nocache) {
                $this->last_taglineno = $this->lex->taglineno;
            } else {
                $this->last_taglineno_nocache = $this->lex->taglineno;
            }
        }
        foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true));
    } else {
        $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    $this->compiler->has_variable_string = false;
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 2295 "smarty_internal_templateparser.php"
#line 191 "smarty_internal_templateparser.y"
    function yy_r6(){
    $this->_retvalue = new _smarty_text($this, '');
    }
#line 2300 "smarty_internal_templateparser.php"
#line 196 "smarty_internal_templateparser.y"
    function yy_r7(){
    $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2305 "smarty_internal_templateparser.php"
#line 201 "smarty_internal_templateparser.y"
    function yy_r8(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->smarty instanceof SmartyBC)) {
            $this->compiler->trigger_template_error (self::Err3);
        }
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = new _smarty_text($this, '');
    }
    }
#line 2321 "smarty_internal_templateparser.php"
#line 217 "smarty_internal_templateparser.y"
    function yy_r9(){
    if ($this->is_xml) {
        $this->compiler->nocache_nolog = true;
        $this->is_xml = false;
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>", true));
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = new _smarty_text($this, '');
    }
    }
#line 2338 "smarty_internal_templateparser.php"
#line 234 "smarty_internal_templateparser.y"
    function yy_r10(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->smarty instanceof SmartyBC)) {
                $this->compiler->trigger_template_error (self::Err3);
            }
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, '');
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    }
    }
#line 2362 "smarty_internal_templateparser.php"
#line 258 "smarty_internal_templateparser.y"
    function yy_r11(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, '');
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    }
    }
#line 2383 "smarty_internal_templateparser.php"
#line 278 "smarty_internal_templateparser.y"
    function yy_r12(){
    if ($this->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)));
    } else {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
    }
    }
#line 2392 "smarty_internal_templateparser.php"
#line 287 "smarty_internal_templateparser.y"
    function yy_r13(){
    $this->compiler->nocache_nolog = true;
    $this->is_xml = true;
    $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", true));
    }
#line 2399 "smarty_internal_templateparser.php"
#line 294 "smarty_internal_templateparser.y"
    function yy_r14(){
    if ($this->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
    } else {
        $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    }
#line 2408 "smarty_internal_templateparser.php"
#line 303 "smarty_internal_templateparser.y"
    function yy_r15(){
    $this->strip = true;
    $this->_retvalue = new _smarty_text($this, '');
    }
#line 2414 "smarty_internal_templateparser.php"
#line 308 "smarty_internal_templateparser.y"
    function yy_r16(){
    $this->strip = false;
    $this->_retvalue = new _smarty_text($this, '');
    }
#line 2420 "smarty_internal_templateparser.php"
#line 314 "smarty_internal_templateparser.y"
    function yy_r17(){
    $this->_retvalue = '';
    }
#line 2425 "smarty_internal_templateparser.php"
#line 318 "smarty_internal_templateparser.y"
    function yy_r18(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2430 "smarty_internal_templateparser.php"
#line 322 "smarty_internal_templateparser.y"
    function yy_r19(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2435 "smarty_internal_templateparser.php"
#line 330 "smarty_internal_templateparser.y"
    function yy_r21(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2440 "smarty_internal_templateparser.php"
#line 338 "smarty_internal_templateparser.y"
    function yy_r23(){
    $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2445 "smarty_internal_templateparser.php"
#line 346 "smarty_internal_templateparser.y"
    function yy_r25(){
    $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2450 "smarty_internal_templateparser.php"
#line 350 "smarty_internal_templateparser.y"
    function yy_r26(){
    $this->_retvalue = '<<?php ?>%';
    }
#line 2455 "smarty_internal_templateparser.php"
#line 354 "smarty_internal_templateparser.y"
    function yy_r27(){
    $this->_retvalue = '%<?php ?>>';
    }
#line 2460 "smarty_internal_templateparser.php"
#line 363 "smarty_internal_templateparser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2465 "smarty_internal_templateparser.php"
#line 367 "smarty_internal_templateparser.y"
    function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2470 "smarty_internal_templateparser.php"
#line 371 "smarty_internal_templateparser.y"
    function yy_r30(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2475 "smarty_internal_templateparser.php"
#line 375 "smarty_internal_templateparser.y"
    function yy_r31(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2480 "smarty_internal_templateparser.php"
#line 388 "smarty_internal_templateparser.y"
    function yy_r33(){
    $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")));
    }
#line 2485 "smarty_internal_templateparser.php"
#line 396 "smarty_internal_templateparser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'")),$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2490 "smarty_internal_templateparser.php"
#line 400 "smarty_internal_templateparser.y"
    function yy_r36(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>$this->yystack[$this->yyidx + -4]->minor['var'])),$this->yystack[$this->yyidx + -1]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -4]->minor['smarty_internal_index']));
    }
#line 2495 "smarty_internal_templateparser.php"
#line 405 "smarty_internal_templateparser.y"
    function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2500 "smarty_internal_templateparser.php"
#line 409 "smarty_internal_templateparser.y"
    function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());
    }
#line 2505 "smarty_internal_templateparser.php"
#line 414 "smarty_internal_templateparser.y"
    function yy_r39(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2510 "smarty_internal_templateparser.php"
#line 419 "smarty_internal_templateparser.y"
    function yy_r40(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).';?>';
    }
#line 2516 "smarty_internal_templateparser.php"
#line 425 "smarty_internal_templateparser.y"
    function yy_r41(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -5]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -3]->minor)).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).';?>';
    }
#line 2522 "smarty_internal_templateparser.php"
#line 431 "smarty_internal_templateparser.y"
    function yy_r42(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2528 "smarty_internal_templateparser.php"
#line 436 "smarty_internal_templateparser.y"
    function yy_r43(){
    $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + -1]->minor,array('if condition'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2534 "smarty_internal_templateparser.php"
#line 441 "smarty_internal_templateparser.y"
    function yy_r44(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2540 "smarty_internal_templateparser.php"
#line 452 "smarty_internal_templateparser.y"
    function yy_r46(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -11]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -8]->minor),array('var'=>$this->yystack[$this->yyidx + -4]->minor),array('step'=>'='.$this->yystack[$this->yyidx + -2]->minor))),1);
    }
#line 2545 "smarty_internal_templateparser.php"
#line 455 "smarty_internal_templateparser.y"
    function yy_r47(){
    $len =strlen($this->yystack[$this->yyidx + -2]->minor);
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -8]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -5]->minor),array('var'=>substr($this->yystack[$this->yyidx + -2]->minor,1,$len-3)),array('step'=>substr($this->yystack[$this->yyidx + -2]->minor,$len-2)))),1);
    }
#line 2551 "smarty_internal_templateparser.php"
#line 460 "smarty_internal_templateparser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -4]->minor),array('to'=>$this->yystack[$this->yyidx + -2]->minor))),0);
    }
#line 2556 "smarty_internal_templateparser.php"
#line 464 "smarty_internal_templateparser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -6]->minor),array('to'=>$this->yystack[$this->yyidx + -4]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),0);
    }
#line 2561 "smarty_internal_templateparser.php"
#line 469 "smarty_internal_templateparser.y"
    function yy_r50(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2566 "smarty_internal_templateparser.php"
#line 474 "smarty_internal_templateparser.y"
    function yy_r51(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));
    }
#line 2571 "smarty_internal_templateparser.php"
#line 478 "smarty_internal_templateparser.y"
    function yy_r52(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));
    }
#line 2576 "smarty_internal_templateparser.php"
#line 482 "smarty_internal_templateparser.y"
    function yy_r53(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));
    }
#line 2581 "smarty_internal_templateparser.php"
#line 486 "smarty_internal_templateparser.y"
    function yy_r54(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));
    }
#line 2586 "smarty_internal_templateparser.php"
#line 491 "smarty_internal_templateparser.y"
    function yy_r55(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2591 "smarty_internal_templateparser.php"
#line 495 "smarty_internal_templateparser.y"
    function yy_r56(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -2]->minor)),$this->yystack[$this->yyidx + -1]->minor)));
    }
#line 2596 "smarty_internal_templateparser.php"
#line 500 "smarty_internal_templateparser.y"
    function yy_r57(){
    $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
    }
#line 2601 "smarty_internal_templateparser.php"
#line 506 "smarty_internal_templateparser.y"
    function yy_r58(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());
    }
#line 2606 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r59(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2611 "smarty_internal_templateparser.php"
#line 515 "smarty_internal_templateparser.y"
    function yy_r60(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2616 "smarty_internal_templateparser.php"
#line 519 "smarty_internal_templateparser.y"
    function yy_r61(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2621 "smarty_internal_templateparser.php"
#line 527 "smarty_internal_templateparser.y"
    function yy_r62(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2627 "smarty_internal_templateparser.php"
#line 533 "smarty_internal_templateparser.y"
    function yy_r63(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2632 "smarty_internal_templateparser.php"
#line 538 "smarty_internal_templateparser.y"
    function yy_r64(){
    $this->_retvalue = array();
    }
#line 2637 "smarty_internal_templateparser.php"
#line 543 "smarty_internal_templateparser.y"
    function yy_r65(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2650 "smarty_internal_templateparser.php"
#line 555 "smarty_internal_templateparser.y"
    function yy_r66(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2655 "smarty_internal_templateparser.php"
#line 563 "smarty_internal_templateparser.y"
    function yy_r68(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2660 "smarty_internal_templateparser.php"
#line 588 "smarty_internal_templateparser.y"
    function yy_r73(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2666 "smarty_internal_templateparser.php"
#line 593 "smarty_internal_templateparser.y"
    function yy_r74(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2671 "smarty_internal_templateparser.php"
#line 621 "smarty_internal_templateparser.y"
    function yy_r79(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2676 "smarty_internal_templateparser.php"
#line 626 "smarty_internal_templateparser.y"
    function yy_r80(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2681 "smarty_internal_templateparser.php"
#line 645 "smarty_internal_templateparser.y"
    function yy_r84(){
    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2686 "smarty_internal_templateparser.php"
#line 651 "smarty_internal_templateparser.y"
    function yy_r85(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2691 "smarty_internal_templateparser.php"
#line 655 "smarty_internal_templateparser.y"
    function yy_r86(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2696 "smarty_internal_templateparser.php"
#line 659 "smarty_internal_templateparser.y"
    function yy_r87(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2701 "smarty_internal_templateparser.php"
#line 667 "smarty_internal_templateparser.y"
    function yy_r89(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2706 "smarty_internal_templateparser.php"
#line 671 "smarty_internal_templateparser.y"
    function yy_r90(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2711 "smarty_internal_templateparser.php"
#line 675 "smarty_internal_templateparser.y"
    function yy_r91(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2716 "smarty_internal_templateparser.php"
#line 679 "smarty_internal_templateparser.y"
    function yy_r92(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2721 "smarty_internal_templateparser.php"
#line 683 "smarty_internal_templateparser.y"
    function yy_r93(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2726 "smarty_internal_templateparser.php"
#line 687 "smarty_internal_templateparser.y"
    function yy_r94(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2731 "smarty_internal_templateparser.php"
#line 715 "smarty_internal_templateparser.y"
    function yy_r101(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;
    }
#line 2738 "smarty_internal_templateparser.php"
#line 724 "smarty_internal_templateparser.y"
    function yy_r102(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2743 "smarty_internal_templateparser.php"
#line 728 "smarty_internal_templateparser.y"
    function yy_r103(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2748 "smarty_internal_templateparser.php"
#line 744 "smarty_internal_templateparser.y"
    function yy_r106(){
    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2753 "smarty_internal_templateparser.php"
#line 761 "smarty_internal_templateparser.y"
    function yy_r110(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2758 "smarty_internal_templateparser.php"
#line 765 "smarty_internal_templateparser.y"
    function yy_r111(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';
    }
#line 2763 "smarty_internal_templateparser.php"
#line 769 "smarty_internal_templateparser.y"
    function yy_r112(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2768 "smarty_internal_templateparser.php"
#line 774 "smarty_internal_templateparser.y"
    function yy_r113(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2781 "smarty_internal_templateparser.php"
#line 792 "smarty_internal_templateparser.y"
    function yy_r115(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2786 "smarty_internal_templateparser.php"
#line 806 "smarty_internal_templateparser.y"
    function yy_r118(){
    $len = strlen($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = '$_smarty_tpl->tpl_vars->' . substr($this->yystack[$this->yyidx + 0]->minor,1,$len-3) . "['value']". substr($this->yystack[$this->yyidx + 0]->minor,$len-2);
    }
#line 2792 "smarty_internal_templateparser.php"
#line 812 "smarty_internal_templateparser.y"
    function yy_r119(){
    if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
        if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
            $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
        }
    } else {
        $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2805 "smarty_internal_templateparser.php"
#line 825 "smarty_internal_templateparser.y"
    function yy_r120(){
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2810 "smarty_internal_templateparser.php"
#line 834 "smarty_internal_templateparser.y"
    function yy_r122(){
    if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2819 "smarty_internal_templateparser.php"
#line 843 "smarty_internal_templateparser.y"
    function yy_r123(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>';
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2826 "smarty_internal_templateparser.php"
#line 858 "smarty_internal_templateparser.y"
    function yy_r125(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
        $this->_retvalue = $smarty_var;
    } else {
        // used for array reset,next,prev,end,current
        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2839 "smarty_internal_templateparser.php"
#line 871 "smarty_internal_templateparser.y"
    function yy_r126(){
    $this->_retvalue = '$_smarty_tpl->tpl_vars->' . trim($this->yystack[$this->yyidx + -2]->minor,"'") . "['". $this->yystack[$this->yyidx + 0]->minor . "']";
    }
#line 2844 "smarty_internal_templateparser.php"
#line 881 "smarty_internal_templateparser.y"
    function yy_r128(){
    $var = trim($this->yystack[$this->yyidx + -1]->minor,'\'');
    $this->_retvalue = "\$_smarty_tpl->tpl_vars->___config_var_{$var}['value']";
    }
#line 2850 "smarty_internal_templateparser.php"
#line 886 "smarty_internal_templateparser.y"
    function yy_r129(){
    $this->_retvalue = "\$_smarty_tpl->tpl_vars->___config_var_{{$this->yystack[$this->yyidx + -1]->minor}}['value']";
    }
#line 2855 "smarty_internal_templateparser.php"
#line 890 "smarty_internal_templateparser.y"
    function yy_r130(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2860 "smarty_internal_templateparser.php"
#line 903 "smarty_internal_templateparser.y"
    function yy_r132(){
    return;
    }
#line 2865 "smarty_internal_templateparser.php"
#line 909 "smarty_internal_templateparser.y"
    function yy_r133(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    }
#line 2870 "smarty_internal_templateparser.php"
#line 913 "smarty_internal_templateparser.y"
    function yy_r134(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2875 "smarty_internal_templateparser.php"
#line 917 "smarty_internal_templateparser.y"
    function yy_r135(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2880 "smarty_internal_templateparser.php"
#line 921 "smarty_internal_templateparser.y"
    function yy_r136(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2885 "smarty_internal_templateparser.php"
#line 925 "smarty_internal_templateparser.y"
    function yy_r137(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2890 "smarty_internal_templateparser.php"
#line 930 "smarty_internal_templateparser.y"
    function yy_r138(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2895 "smarty_internal_templateparser.php"
#line 934 "smarty_internal_templateparser.y"
    function yy_r139(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2900 "smarty_internal_templateparser.php"
#line 944 "smarty_internal_templateparser.y"
    function yy_r141(){
    $this->_retvalue = '[]';
    }
#line 2905 "smarty_internal_templateparser.php"
#line 957 "smarty_internal_templateparser.y"
    function yy_r143(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2910 "smarty_internal_templateparser.php"
#line 962 "smarty_internal_templateparser.y"
    function yy_r144(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2915 "smarty_internal_templateparser.php"
#line 967 "smarty_internal_templateparser.y"
    function yy_r145(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2920 "smarty_internal_templateparser.php"
#line 974 "smarty_internal_templateparser.y"
    function yy_r146(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2929 "smarty_internal_templateparser.php"
#line 983 "smarty_internal_templateparser.y"
    function yy_r147(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2934 "smarty_internal_templateparser.php"
#line 988 "smarty_internal_templateparser.y"
    function yy_r148(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2939 "smarty_internal_templateparser.php"
#line 993 "smarty_internal_templateparser.y"
    function yy_r149(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2947 "smarty_internal_templateparser.php"
#line 1000 "smarty_internal_templateparser.y"
    function yy_r150(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2955 "smarty_internal_templateparser.php"
#line 1007 "smarty_internal_templateparser.y"
    function yy_r151(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2963 "smarty_internal_templateparser.php"
#line 1014 "smarty_internal_templateparser.y"
    function yy_r152(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2971 "smarty_internal_templateparser.php"
#line 1022 "smarty_internal_templateparser.y"
    function yy_r153(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2976 "smarty_internal_templateparser.php"
#line 1030 "smarty_internal_templateparser.y"
    function yy_r154(){
    if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                preg_match('/\$_smarty_tpl->tpl_vars->([0-9]*[a-zA-Z_]\w*)(.*)/',$par,$match);
                if (isset($match[1])) {
                    $search = array('/\$_smarty_tpl->tpl_vars->([0-9]*[a-zA-Z_]\w*)/','/\[\'[0-9]*[a-zA-Z_]\w*\'\].*/');
                    $replace = array('$_smarty_tpl->getVariable(\'\1\', null, true, false)','');
                    $this->prefix_number++;
                    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.preg_replace($search, $replace, $par).';?>';
                    $isset_par = '$_tmp'.$this->prefix_number.$match[2];
                } else {
                    $this->prefix_number++;
                    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='. $par .';?>';
                    $isset_par = '$_tmp'.$this->prefix_number;
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->trigger_template_error ("Illegal number of paramer in \"{$func_name}\"");
                }
                $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 3013 "smarty_internal_templateparser.php"
#line 1069 "smarty_internal_templateparser.y"
    function yy_r155(){
    if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
        } else {
            $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 3024 "smarty_internal_templateparser.php"
#line 1082 "smarty_internal_templateparser.y"
    function yy_r156(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 3032 "smarty_internal_templateparser.php"
#line 1089 "smarty_internal_templateparser.y"
    function yy_r157(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';?>';
    $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 3042 "smarty_internal_templateparser.php"
#line 1100 "smarty_internal_templateparser.y"
    function yy_r158(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 3047 "smarty_internal_templateparser.php"
#line 1117 "smarty_internal_templateparser.y"
    function yy_r161(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 3052 "smarty_internal_templateparser.php"
#line 1121 "smarty_internal_templateparser.y"
    function yy_r162(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 3057 "smarty_internal_templateparser.php"
#line 1129 "smarty_internal_templateparser.y"
    function yy_r164(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 3062 "smarty_internal_templateparser.php"
#line 1137 "smarty_internal_templateparser.y"
    function yy_r165(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 3067 "smarty_internal_templateparser.php"
#line 1171 "smarty_internal_templateparser.y"
    function yy_r172(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3072 "smarty_internal_templateparser.php"
#line 1176 "smarty_internal_templateparser.y"
    function yy_r173(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3077 "smarty_internal_templateparser.php"
#line 1182 "smarty_internal_templateparser.y"
    function yy_r174(){
    $this->_retvalue = '==';
    }
#line 3082 "smarty_internal_templateparser.php"
#line 1186 "smarty_internal_templateparser.y"
    function yy_r175(){
    $this->_retvalue = '!=';
    }
#line 3087 "smarty_internal_templateparser.php"
#line 1190 "smarty_internal_templateparser.y"
    function yy_r176(){
    $this->_retvalue = '>';
    }
#line 3092 "smarty_internal_templateparser.php"
#line 1194 "smarty_internal_templateparser.y"
    function yy_r177(){
    $this->_retvalue = '<';
    }
#line 3097 "smarty_internal_templateparser.php"
#line 1198 "smarty_internal_templateparser.y"
    function yy_r178(){
    $this->_retvalue = '>=';
    }
#line 3102 "smarty_internal_templateparser.php"
#line 1202 "smarty_internal_templateparser.y"
    function yy_r179(){
    $this->_retvalue = '<=';
    }
#line 3107 "smarty_internal_templateparser.php"
#line 1206 "smarty_internal_templateparser.y"
    function yy_r180(){
    $this->_retvalue = '===';
    }
#line 3112 "smarty_internal_templateparser.php"
#line 1210 "smarty_internal_templateparser.y"
    function yy_r181(){
    $this->_retvalue = '!==';
    }
#line 3117 "smarty_internal_templateparser.php"
#line 1214 "smarty_internal_templateparser.y"
    function yy_r182(){
    $this->_retvalue = '%';
    }
#line 3122 "smarty_internal_templateparser.php"
#line 1218 "smarty_internal_templateparser.y"
    function yy_r183(){
    $this->_retvalue = '&&';
    }
#line 3127 "smarty_internal_templateparser.php"
#line 1222 "smarty_internal_templateparser.y"
    function yy_r184(){
    $this->_retvalue = '||';
    }
#line 3132 "smarty_internal_templateparser.php"
#line 1226 "smarty_internal_templateparser.y"
    function yy_r185(){
    $this->_retvalue = ' XOR ';
    }
#line 3137 "smarty_internal_templateparser.php"
#line 1233 "smarty_internal_templateparser.y"
    function yy_r186(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 3142 "smarty_internal_templateparser.php"
#line 1241 "smarty_internal_templateparser.y"
    function yy_r188(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3147 "smarty_internal_templateparser.php"
#line 1249 "smarty_internal_templateparser.y"
    function yy_r190(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3152 "smarty_internal_templateparser.php"
#line 1253 "smarty_internal_templateparser.y"
    function yy_r191(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3157 "smarty_internal_templateparser.php"
#line 1265 "smarty_internal_templateparser.y"
    function yy_r193(){
    $this->_retvalue = "''";
    }
#line 3162 "smarty_internal_templateparser.php"
#line 1269 "smarty_internal_templateparser.y"
    function yy_r194(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();
    }
#line 3167 "smarty_internal_templateparser.php"
#line 1274 "smarty_internal_templateparser.y"
    function yy_r195(){
    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 3173 "smarty_internal_templateparser.php"
#line 1279 "smarty_internal_templateparser.y"
    function yy_r196(){
    $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3178 "smarty_internal_templateparser.php"
#line 1283 "smarty_internal_templateparser.y"
    function yy_r197(){
    $this->_retvalue = new _smarty_code($this, '(string)'.$this->yystack[$this->yyidx + -1]->minor);
    }
#line 3183 "smarty_internal_templateparser.php"
#line 1291 "smarty_internal_templateparser.y"
    function yy_r199(){
    $this->_retvalue = new _smarty_code($this, '(string)$_smarty_tpl->tpl_vars->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . "['value']");
    }
#line 3188 "smarty_internal_templateparser.php"
#line 1299 "smarty_internal_templateparser.y"
    function yy_r201(){
    $this->_retvalue = new _smarty_code($this, '(string)('.$this->yystack[$this->yyidx + -1]->minor.')');
    }
#line 3193 "smarty_internal_templateparser.php"
#line 1303 "smarty_internal_templateparser.y"
    function yy_r202(){
    $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3198 "smarty_internal_templateparser.php"
#line 1307 "smarty_internal_templateparser.y"
    function yy_r203(){
    $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3203 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 95 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 3266 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 87 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 3284 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
