<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

      const Err1 = "Security error: Call to private object member not allowed";
      const Err2 = "Security error: Call to dynamic object member not allowed";
      const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
                $this->compiler->prefix_code = array();
                $this->prefix_number = 0;
                $this->block_nesting_level = 0;
                if ($this->security = isset($this->smarty->security_policy)) {
              $this->php_handling = $this->smarty->security_policy->php_handling;
        } else {
              $this->php_handling = $this->smarty->php_handling;
        }
                $this->is_xml = false;
                $this->asp_tags = (ini_get('asp_tags') != '0');
                $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }

    public static function escape_start_tag($tag_text) {
       $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
       return $tag;
    }

    public static function escape_end_tag($tag_text) {
       return '?<?php ?>>';
    }

    public function compileVariable($variable) {
         if (strpos($variable,'(') == 0) {
                 // not a variable variable
                 $var = trim($variable,'\'');
                     $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable($var, null, true, false)->nocache;
                     $this->template->properties['variables'][$var] = $this->compiler->tag_nocache|$this->compiler->nocache;
             }
//             return '(isset($_smarty_tpl->tpl_vars['. $variable .'])?$_smarty_tpl->tpl_vars['. $variable .']->value:$_smarty_tpl->getVariable('. $variable .')->value)';
             return '$_smarty_tpl->tpl_vars['. $variable .']->value';
    }
#line 131 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_COMMENT                        =  3;
    const TP_PHPSTARTTAG                    =  4;
    const TP_PHPENDTAG                      =  5;
    const TP_ASPSTARTTAG                    =  6;
    const TP_ASPENDTAG                      =  7;
    const TP_FAKEPHPSTARTTAG                =  8;
    const TP_XMLTAG                         =  9;
    const TP_OTHER                          = 10;
    const TP_LINEBREAK                      = 11;
    const TP_LITERALSTART                   = 12;
    const TP_LITERALEND                     = 13;
    const TP_LITERAL                        = 14;
    const TP_LDEL                           = 15;
    const TP_RDEL                           = 16;
    const TP_DOLLAR                         = 17;
    const TP_ID                             = 18;
    const TP_EQUAL                          = 19;
    const TP_PTR                            = 20;
    const TP_LDELIF                         = 21;
    const TP_LDELFOR                        = 22;
    const TP_SEMICOLON                      = 23;
    const TP_INCDEC                         = 24;
    const TP_TO                             = 25;
    const TP_STEP                           = 26;
    const TP_LDELFOREACH                    = 27;
    const TP_SPACE                          = 28;
    const TP_AS                             = 29;
    const TP_APTR                           = 30;
    const TP_LDELSETFILTER                  = 31;
    const TP_SMARTYBLOCKCHILD               = 32;
    const TP_LDELSLASH                      = 33;
    const TP_INTEGER                        = 34;
    const TP_COMMA                          = 35;
    const TP_OPENP                          = 36;
    const TP_CLOSEP                         = 37;
    const TP_MATH                           = 38;
    const TP_UNIMATH                        = 39;
    const TP_ANDSYM                         = 40;
    const TP_ISIN                           = 41;
    const TP_ISDIVBY                        = 42;
    const TP_ISNOTDIVBY                     = 43;
    const TP_ISEVEN                         = 44;
    const TP_ISNOTEVEN                      = 45;
    const TP_ISEVENBY                       = 46;
    const TP_ISNOTEVENBY                    = 47;
    const TP_ISODD                          = 48;
    const TP_ISNOTODD                       = 49;
    const TP_ISODDBY                        = 50;
    const TP_ISNOTODDBY                     = 51;
    const TP_INSTANCEOF                     = 52;
    const TP_QMARK                          = 53;
    const TP_NOT                            = 54;
    const TP_TYPECAST                       = 55;
    const TP_HEX                            = 56;
    const TP_DOT                            = 57;
    const TP_SINGLEQUOTESTRING              = 58;
    const TP_DOUBLECOLON                    = 59;
    const TP_AT                             = 60;
    const TP_HATCH                          = 61;
    const TP_OPENB                          = 62;
    const TP_CLOSEB                         = 63;
    const TP_EQUALS                         = 64;
    const TP_NOTEQUALS                      = 65;
    const TP_GREATERTHAN                    = 66;
    const TP_LESSTHAN                       = 67;
    const TP_GREATEREQUAL                   = 68;
    const TP_LESSEQUAL                      = 69;
    const TP_IDENTITY                       = 70;
    const TP_NONEIDENTITY                   = 71;
    const TP_MOD                            = 72;
    const TP_LAND                           = 73;
    const TP_LOR                            = 74;
    const TP_LXOR                           = 75;
    const TP_QUOTE                          = 76;
    const TP_BACKTICK                       = 77;
    const TP_DOLLARID                       = 78;
    const YY_NO_ACTION = 598;
    const YY_ACCEPT_ACTION = 597;
    const YY_ERROR_ACTION = 596;

    const YY_SZ_ACTTAB = 2617;
static public $yy_action = array(
 /*     0 */   220,  323,  325,  320,  319,  315,  314,  316,  317,  318,
 /*    10 */   194,   20,  212,   41,  292,  313,  272,    8,   20,    7,
 /*    20 */   109,  292,   18,  182,   43,  150,  247,   43,   43,  229,
 /*    30 */   290,  228,  597,   97,  261,  321,  324,   48,   47,   52,
 /*    40 */    45,   10,    9,  370,  371,   19,   38,  372,  379,   33,
 /*    50 */    22,  220,  338,  333,  329,  328,  334,  241,  245,  223,
 /*    60 */   194,  327,  337,  380,  388,  389,  390,  391,  387,  386,
 /*    70 */   382,  381,  383,  384,  385,   14,   42,   26,   43,  141,
 /*    80 */   171,    4,  199,  345,   39,   36,  128,  376,   48,   47,
 /*    90 */    52,   45,   10,    9,  370,  371,   19,   38,  372,  379,
 /*   100 */    33,   22,  238,  377,  133,   32,    5,   20,  268,   20,
 /*   110 */   292,   18,  292,  252,  380,  388,  389,  390,  391,  387,
 /*   120 */   386,  382,  381,  383,  384,  385,  220,  367,  105,  187,
 /*   130 */   168,  122,  220,   44,  232,   78,  129,  284,  364,  295,
 /*   140 */   295,  346,   12,   13,  303,  286,  185,  288,  378,  369,
 /*   150 */    43,  366,  256,   43,  255,  205,  208,  322,  321,  324,
 /*   160 */   189,  217,  260,   48,   47,   52,   45,   10,    9,  370,
 /*   170 */   371,   19,   38,  372,  379,   33,   22,   20,  220,   28,
 /*   180 */   292,   16,   15,  162,  240,    4,  277,  205,  289,  380,
 /*   190 */   388,  389,  390,  391,  387,  386,  382,  381,  383,  384,
 /*   200 */   385,  220,  367,  203,  172,  204,  145,   31,  133,  232,
 /*   210 */    87,  129,  195,  345,  295,  459,  341,   12,   13,  303,
 /*   220 */   286,  102,  132,  378,  369,  358,  366,  459,   43,   49,
 /*   230 */   205,   20,  205,  226,  292,    4,  308,    4,   48,   47,
 /*   240 */    52,   45,   10,    9,  370,  371,   19,   38,  372,  379,
 /*   250 */    33,   22,  220,  193,  339,    6,  200,  345,  133,  311,
 /*   260 */   133,  112,  392,  295,  380,  388,  389,  390,  391,  387,
 /*   270 */   386,  382,  381,  383,  384,  385,  256,  220,  234,  208,
 /*   280 */   246,  220,   27,  269,  274,  241,  267,   23,  162,   48,
 /*   290 */    47,   52,   45,   10,    9,  370,  371,   19,   38,  372,
 /*   300 */   379,   33,   22,  220,  180,   27,   27,  271,  278,  231,
 /*   310 */   249,  253,  355,  148,  295,  380,  388,  389,  390,  391,
 /*   320 */   387,  386,  382,  381,  383,  384,  385,  132,  366,  198,
 /*   330 */   208,   20,   49,  164,  292,  293,  137,  250,  208,  281,
 /*   340 */    48,   47,   52,   45,   10,    9,  370,  371,   19,   38,
 /*   350 */   372,  379,   33,   22,  220,  174,  301,  177,  336,   20,
 /*   360 */   335,  178,  239,  149,  136,  295,  380,  388,  389,  390,
 /*   370 */   391,  387,  386,  382,  381,  383,  384,  385,  108,  176,
 /*   380 */   106,  208,   20,   20,  205,  248,  218,  197,  205,  295,
 /*   390 */   237,   48,   47,   52,   45,   10,    9,  370,  371,   19,
 /*   400 */    38,  372,  379,   33,   22,  205,  169,  368,  220,   20,
 /*   410 */   146,  166,  235,  293,  149,  251,  295,  380,  388,  389,
 /*   420 */   390,  391,  387,  386,  382,  381,  383,  384,  385,  220,
 /*   430 */   367,  203,  181,  251,  145,   43,   40,  232,   87,  129,
 /*   440 */    20,  220,  295,  292,  207,   12,   13,  303,  286,  162,
 /*   450 */    24,  378,  369,   43,  366,  233,  291,  259,  205,  130,
 /*   460 */   230,  222,  135,  241,  243,  252,   48,   47,   52,   45,
 /*   470 */    10,    9,  370,  371,   19,   38,  372,  379,   33,   22,
 /*   480 */   167,  140,    5,  302,  283,  265,  212,  340,  306,  304,
 /*   490 */   295,    8,  380,  388,  389,  390,  391,  387,  386,  382,
 /*   500 */   381,  383,  384,  385,  220,  367,  203,  190,  175,  145,
 /*   510 */    15,  138,  232,   66,  125,  243,  220,  295,  295,  257,
 /*   520 */    12,   13,  303,  286,  352,   20,  378,  369,  292,  366,
 /*   530 */   311,  287,  196,  205,  208,  134,   43,  305,   43,  120,
 /*   540 */   220,   48,   47,   52,   45,   10,    9,  370,  371,   19,
 /*   550 */    38,  372,  379,   33,   22,  310,  163,   37,  209,  300,
 /*   560 */     3,  236,  142,  266,   35,   96,  295,  380,  388,  389,
 /*   570 */   390,  391,  387,  386,  382,  381,  383,  384,  385,  220,
 /*   580 */   367,  203,  165,  332,  122,  339,  173,  232,   78,  129,
 /*   590 */   220,  220,  295,  186,  282,   12,   13,  303,  286,  297,
 /*   600 */   202,  378,  369,  295,  366,  342,  299,   17,  205,   43,
 /*   610 */   349,   43,  144,  162,  293,  264,   48,   47,   52,   45,
 /*   620 */    10,    9,  370,  371,   19,   38,  372,  379,   33,   22,
 /*   630 */   220,  326,  293,  279,  113,  103,   44,  326,  326,  289,
 /*   640 */   104,   49,  380,  388,  389,  390,  391,  387,  386,  382,
 /*   650 */   381,  383,  384,  385,  375,  358,  326,   43,  326,  326,
 /*   660 */   326,  326,  326,  326,  326,  326,  326,   48,   47,   52,
 /*   670 */    45,   10,    9,  370,  371,   19,   38,  372,  379,   33,
 /*   680 */    22,  220,  326,  326,  326,  326,  326,  326,  326,  326,
 /*   690 */   326,  326,  360,  380,  388,  389,  390,  391,  387,  386,
 /*   700 */   382,  381,  383,  384,  385,  110,  192,  326,  326,  326,
 /*   710 */   326,  326,  326,  326,  326,  326,  295,  326,   48,   47,
 /*   720 */    52,   45,   10,    9,  370,  371,   19,   38,  372,  379,
 /*   730 */    33,   22,  205,  326,  326,  326,  326,  326,  326,  326,
 /*   740 */   326,  326,  326,  326,  380,  388,  389,  390,  391,  387,
 /*   750 */   386,  382,  381,  383,  384,  385,  220,  356,  326,  326,
 /*   760 */   367,  203,  179,  326,  151,  270,  326,  232,  359,  129,
 /*   770 */   162,  220,  295,   30,  326,   12,   13,   43,  201,    7,
 /*   780 */   109,  378,  369,  326,  366,  150,  309,  326,  205,  229,
 /*   790 */   290,  228,  326,   48,   47,   52,   45,   10,    9,  370,
 /*   800 */   371,   19,   38,  372,  379,   33,   22,  326,  326,  132,
 /*   810 */   326,  326,  326,  326,  326,  326,  326,  326,  203,  380,
 /*   820 */   388,  389,  390,  391,  387,  386,  382,  381,  383,  384,
 /*   830 */   385,  220,   12,   13,  365,   29,  357,  312,  326,  111,
 /*   840 */   184,  183,  359,  296,  294,  205,  206,   30,  326,   43,
 /*   850 */   295,  295,  326,    7,  109,   43,   43,  326,  326,  150,
 /*   860 */   326,  326,  293,  229,  290,  228,  205,  326,   48,   47,
 /*   870 */    52,   45,   10,    9,  370,  371,   19,   38,  372,  379,
 /*   880 */    33,   22,  220,   25,  326,  326,  326,  326,  326,  326,
 /*   890 */   326,  326,  123,  119,  380,  388,  389,  390,  391,  387,
 /*   900 */   386,  382,  381,  383,  384,  385,  375,  375,  361,   29,
 /*   910 */   357,  326,  326,  326,  326,  326,  326,  326,  326,   48,
 /*   920 */    47,   52,   45,   10,    9,  370,  371,   19,   38,  372,
 /*   930 */   379,   33,   22,  220,  326,  326,  326,  326,  326,  326,
 /*   940 */   326,  326,  326,  326,  156,  380,  388,  389,  390,  391,
 /*   950 */   387,  386,  382,  381,  383,  384,  385,  293,  107,  191,
 /*   960 */   326,  326,  326,  326,  326,  326,  326,  326,  326,  295,
 /*   970 */    48,   47,   52,   45,   10,    9,  370,  371,   19,   38,
 /*   980 */   372,  379,   33,   22,  220,  205,  326,  326,  326,  326,
 /*   990 */   326,  326,  326,  326,  161,  280,  380,  388,  389,  390,
 /*  1000 */   391,  387,  386,  382,  381,  383,  384,  385,  375,  326,
 /*  1010 */   326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1020 */   326,   48,   47,   52,   45,   10,    9,  370,  371,   19,
 /*  1030 */    38,  372,  379,   33,   22,  326,  326,  326,  326,  326,
 /*  1040 */   326,  326,  326,  326,  326,  117,  326,  380,  388,  389,
 /*  1050 */   390,  391,  387,  386,  382,  381,  383,  384,  385,  375,
 /*  1060 */    48,   47,   52,   45,   10,    9,  370,  371,   19,   38,
 /*  1070 */   372,  379,   33,   22,  326,  326,  326,  326,  326,  326,
 /*  1080 */   326,  326,  326,  326,  326,  326,  380,  388,  389,  390,
 /*  1090 */   391,  387,  386,  382,  381,  383,  384,  385,   99,  326,
 /*  1100 */   326,  326,   41,  116,  147,  214,  367,  220,    7,  109,
 /*  1110 */   160,  326,  375,  232,  150,  129,  326,  375,  229,  290,
 /*  1120 */   228,  244,  458,   34,  275,  348,   46,  378,  369,  326,
 /*  1130 */   366,  367,  326,  326,   43,  155,  326,   43,  232,  326,
 /*  1140 */   129,   51,   50,  307,  254,  373,  326,  367,  106,    1,
 /*  1150 */   285,  153,  378,  369,  232,  366,  129,  220,   41,  326,
 /*  1160 */   147,  224,  326,   98,    7,  109,  353,  101,  378,  369,
 /*  1170 */   150,  366,  458,  347,  229,  290,  228,  244,   43,   34,
 /*  1180 */   311,  375,   46,  326,   43,   43,  367,  326,  139,  326,
 /*  1190 */   157,  462,  100,  232,   21,  129,  326,   51,   50,  307,
 /*  1200 */   254,  373,  375,  462,  106,    1,  375,  378,  369,  220,
 /*  1210 */   366,    4,  326,  326,   41,  326,  137,  224,  326,   98,
 /*  1220 */     7,  109,  326,  326,  354,  326,  150,  276,  227,  326,
 /*  1230 */   229,  290,  228,  244,  133,   11,   43,  170,   46,   43,
 /*  1240 */   326,  326,  367,  326,    4,  326,  154,  295,  326,  232,
 /*  1250 */   298,  129,  326,   51,   50,  307,  254,  373,  293,  188,
 /*  1260 */   106,    1,   43,  378,  369,  326,  366,  133,  326,  295,
 /*  1270 */    41,  326,  143,   92,  367,   98,    7,  109,  158,  326,
 /*  1280 */   293,  232,  150,  129,  326,  326,  229,  290,  228,  244,
 /*  1290 */   350,   34,  363,  258,   46,  378,  369,  326,  366,  326,
 /*  1300 */   326,  326,   43,  326,   43,   43,  273,  326,  362,   51,
 /*  1310 */    50,  307,  254,  373,  326,  367,  106,    1,   43,  159,
 /*  1320 */    43,  326,  232,  331,  129,  326,   41,  326,  147,  211,
 /*  1330 */   326,   98,    7,  109,  220,   43,  378,  369,  150,  366,
 /*  1340 */   344,  343,  229,  290,  228,  221,  262,   34,  263,  351,
 /*  1350 */    46,  326,   43,   43,  326,  326,  326,  311,   43,  326,
 /*  1360 */    43,   43,  326,  326,  326,   51,   50,  307,  254,  373,
 /*  1370 */   326,  326,  106,    1,  326,  220,  326,  326,  326,  326,
 /*  1380 */   326,  326,   41,  326,  147,  215,  326,   98,    7,  109,
 /*  1390 */   330,  326,  326,  326,  150,  326,  326,  326,  229,  290,
 /*  1400 */   228,  244,   43,   34,  326,  326,   46,  326,  326,  326,
 /*  1410 */   326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1420 */   326,   51,   50,  307,  254,  373,   49,  326,  106,    1,
 /*  1430 */   326,  220,  326,  326,  326,  326,  326,  326,   41,  326,
 /*  1440 */   126,  224,  326,   98,    7,  109,  461,  326,  326,  326,
 /*  1450 */   150,  326,  326,  326,  229,  290,  228,  244,  461,   34,
 /*  1460 */   326,  326,   46,  326,  326,  326,  326,  326,  326,  326,
 /*  1470 */   326,  326,  326,  326,  326,  326,  326,   51,   50,  307,
 /*  1480 */   254,  373,   49,  326,  106,    1,  326,  220,  326,  326,
 /*  1490 */   326,  326,  326,  326,   41,  326,  131,  224,  326,   98,
 /*  1500 */     7,  109,  464,  326,  326,  326,  150,  326,  326,  326,
 /*  1510 */   229,  290,  228,  244,  464,    2,  326,  326,   46,  326,
 /*  1520 */   326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1530 */   326,  326,  326,   51,   50,  307,  254,  373,   49,  326,
 /*  1540 */   106,    1,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1550 */    41,  326,  147,  210,  326,   98,    7,  109,  326,  326,
 /*  1560 */   326,  326,  150,  326,  326,  326,  229,  290,  228,  244,
 /*  1570 */   326,   34,  326,  326,   46,  326,  326,  326,  326,  326,
 /*  1580 */   326,  326,  326,  326,  326,  326,  326,  326,  326,   51,
 /*  1590 */    50,  307,  254,  373,  326,  326,  106,    1,  326,  326,
 /*  1600 */   326,  326,  326,  326,  326,  326,   41,  326,  147,  213,
 /*  1610 */   326,   98,    7,  109,  326,  326,  326,  326,  150,  326,
 /*  1620 */   326,  326,  229,  290,  228,  244,  326,   34,  326,  326,
 /*  1630 */    46,  326,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  1640 */   326,  326,  326,  326,  326,   51,   50,  307,  254,  373,
 /*  1650 */   326,  326,  106,    1,  326,  326,  326,  326,  326,  326,
 /*  1660 */   326,  326,   41,  326,  137,  224,  326,   98,    7,  109,
 /*  1670 */   326,  326,  326,  326,  150,  326,  326,  326,  229,  290,
 /*  1680 */   228,  244,  220,   11,  326,  326,   46,  326,  326,  326,
 /*  1690 */   326,  326,  326,  326,  326,  326,  326,  464,  326,  326,
 /*  1700 */   326,   51,   50,  307,  254,  373,  326,  326,  106,  464,
 /*  1710 */   242,  326,  326,  326,  326,  326,  326,  326,   41,  326,
 /*  1720 */   137,  216,  326,   98,    7,  109,  326,  326,  326,  326,
 /*  1730 */   150,  326,  326,   49,  229,  290,  228,  244,  326,   11,
 /*  1740 */   326,  326,   46,  326,  326,  326,  326,  326,  326,  326,
 /*  1750 */   326,  326,  326,  326,  326,  326,  507,   51,   50,  307,
 /*  1760 */   254,  373,  326,  507,  106,  507,  507,  326,  507,  507,
 /*  1770 */   326,  326,  326,  326,  326,  507,    4,  507,  326,   98,
 /*  1780 */   326,  326,  326,  326,  326,  326,  326,  367,  326,  326,
 /*  1790 */   326,  145,  507,  326,  232,   55,  125,  127,  326,  133,
 /*  1800 */   326,  326,  326,  507,  303,  286,  326,  326,  378,  369,
 /*  1810 */   326,  366,  326,  326,  367,  326,  326,  507,  145,  326,
 /*  1820 */   326,  232,   87,  129,  326,  326,  326,  326,  326,  326,
 /*  1830 */   326,  303,  286,  326,  326,  378,  369,  326,  366,  326,
 /*  1840 */   367,  326,  326,  326,  145,  225,  326,  232,   66,  129,
 /*  1850 */   326,  326,  326,  326,  326,  326,  326,  303,  286,  367,
 /*  1860 */   326,  378,  369,  145,  366,  326,  232,   79,  129,  326,
 /*  1870 */   326,  326,  326,  326,  326,  326,  303,  286,  367,  326,
 /*  1880 */   378,  369,  145,  366,  326,  232,   88,  129,  326,  326,
 /*  1890 */   326,  326,  326,  326,  326,  303,  286,  326,  326,  378,
 /*  1900 */   369,  367,  366,  326,  326,  114,  326,  326,  232,   65,
 /*  1910 */   129,  326,  326,  326,  326,  326,  326,  326,  303,  286,
 /*  1920 */   367,  326,  378,  369,  145,  366,  326,  232,   63,  129,
 /*  1930 */   326,  326,  326,  326,  326,  326,  326,  303,  286,  326,
 /*  1940 */   326,  378,  369,  367,  366,  326,  326,  118,  326,  326,
 /*  1950 */   232,   77,  129,  326,  326,  326,  326,  326,  326,  326,
 /*  1960 */   303,  286,  367,  326,  378,  369,  145,  366,  326,  232,
 /*  1970 */    57,  129,  326,  326,  326,  326,  326,  326,  326,  303,
 /*  1980 */   286,  326,  326,  378,  369,  367,  366,  326,  326,  145,
 /*  1990 */   326,  326,  232,   82,  129,  326,  326,  326,  326,  326,
 /*  2000 */   326,  326,  303,  286,  367,  326,  378,  369,  145,  366,
 /*  2010 */   326,  232,   80,  129,  326,  326,  326,  326,  326,  326,
 /*  2020 */   326,  303,  286,  326,  326,  378,  369,  367,  366,  326,
 /*  2030 */   326,  145,  326,  326,  232,   86,  129,  326,  326,  326,
 /*  2040 */   326,  326,  326,  326,  303,  286,  367,  326,  378,  369,
 /*  2050 */   145,  366,  326,  232,   89,  129,  326,  326,  326,  326,
 /*  2060 */   326,  326,  326,  303,  286,  326,  326,  378,  369,  367,
 /*  2070 */   366,  326,  326,  145,  326,  326,  232,   85,  129,  326,
 /*  2080 */   326,  326,  326,  326,  326,  326,  303,  286,  367,  326,
 /*  2090 */   378,  369,  145,  366,  326,  232,   62,  129,  326,  326,
 /*  2100 */   326,  326,  326,  326,  326,  303,  286,  326,  326,  378,
 /*  2110 */   369,  367,  366,  326,  326,  145,  326,  326,  232,   64,
 /*  2120 */   129,  326,  326,  326,  326,  326,  326,  326,  303,  286,
 /*  2130 */   367,  326,  378,  369,  145,  366,  326,  232,   71,  129,
 /*  2140 */   326,  326,  326,  326,  326,  326,  326,  303,  286,  326,
 /*  2150 */   326,  378,  369,  367,  366,  326,  326,  145,  326,  326,
 /*  2160 */   232,   75,  129,  326,  326,  326,  326,  326,  326,  326,
 /*  2170 */   303,  286,  367,  326,  378,  369,  145,  366,  326,  232,
 /*  2180 */    81,  129,  326,  326,  326,  326,  326,  326,  326,  303,
 /*  2190 */   286,  326,  326,  378,  369,  367,  366,  326,  326,  124,
 /*  2200 */   326,  326,  232,   53,  129,  326,  326,  326,  326,  326,
 /*  2210 */   326,  326,  303,  286,  367,  326,  378,  369,  145,  366,
 /*  2220 */   326,  232,   90,  129,  326,  326,  326,  326,  326,  326,
 /*  2230 */   326,  303,  286,  326,  326,  378,  369,  367,  366,  326,
 /*  2240 */   326,  145,  326,  326,  232,   84,  129,  326,  326,  326,
 /*  2250 */   326,  326,  326,  326,  303,  286,  367,  326,  378,  369,
 /*  2260 */   145,  366,  326,  232,   91,  129,  326,  326,  326,  326,
 /*  2270 */   326,  326,  326,  303,  286,  326,  326,  378,  369,  367,
 /*  2280 */   366,  326,  326,  145,  326,  326,  232,   60,  129,  326,
 /*  2290 */   326,  326,  326,  326,  326,  326,  303,  286,  367,  326,
 /*  2300 */   378,  369,  145,  366,  326,  232,   68,  129,  326,  326,
 /*  2310 */   326,  326,  326,  326,  326,  303,  286,  326,  326,  378,
 /*  2320 */   369,  367,  366,  326,  326,  145,  326,  326,  232,   54,
 /*  2330 */   129,  326,  326,  326,  326,  326,  326,  326,  303,  286,
 /*  2340 */   367,  326,  378,  369,  145,  366,  326,  232,   58,  129,
 /*  2350 */   326,  326,  326,  326,  326,  326,  326,  303,  286,  326,
 /*  2360 */   326,  378,  369,  367,  366,  326,  326,   93,  326,  326,
 /*  2370 */    95,   59,  121,  326,  326,  326,  326,  326,  326,  326,
 /*  2380 */   303,  286,  367,  326,  378,  369,  145,  366,  326,  232,
 /*  2390 */    61,  129,  326,  326,  326,  326,  326,  326,  326,  303,
 /*  2400 */   286,  326,  326,  378,  369,  367,  366,  326,  326,  145,
 /*  2410 */   326,  326,  232,   83,  129,  326,  326,  326,  326,  326,
 /*  2420 */   326,  326,  303,  286,  367,  326,  378,  369,  145,  366,
 /*  2430 */   326,  232,   72,  129,  326,  326,  326,  326,  326,  326,
 /*  2440 */   326,  303,  286,  326,  326,  378,  369,  367,  366,  326,
 /*  2450 */   326,  145,  326,  326,  232,   74,  129,  326,  326,  326,
 /*  2460 */   326,  326,  326,  326,  303,  286,  367,  326,  378,  369,
 /*  2470 */   145,  366,  326,  232,   67,  129,  326,  326,  326,  326,
 /*  2480 */   326,  326,  326,  303,  286,  326,  326,  378,  369,  367,
 /*  2490 */   366,  326,  326,  115,  326,  326,  232,   76,  129,  326,
 /*  2500 */   326,  326,  326,  326,  326,  326,  303,  286,  367,  326,
 /*  2510 */   378,  369,  145,  366,  326,  219,   70,  129,  326,  326,
 /*  2520 */   326,  326,  326,  326,  326,  303,  286,  326,  326,  378,
 /*  2530 */   369,  367,  366,  326,  326,  145,  326,  326,  232,   73,
 /*  2540 */   129,  326,  326,  326,  326,  326,  326,  326,  303,  286,
 /*  2550 */   367,  326,  378,  369,   93,  366,  326,   94,   56,  121,
 /*  2560 */   326,  326,  326,  326,  326,  326,  326,  303,  286,  326,
 /*  2570 */   326,  378,  369,  367,  366,  326,  326,  145,  326,  326,
 /*  2580 */   232,   69,  129,  326,  326,  326,  326,  326,  326,  326,
 /*  2590 */   303,  286,  367,  326,  378,  369,  152,  366,  326,  232,
 /*  2600 */   326,  129,  326,  326,  326,  326,  326,  326,  326,  326,
 /*  2610 */   374,  326,  326,  378,  369,  326,  366,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,    3,    4,    5,    6,    7,    8,    9,   10,   11,
 /*    10 */    12,   15,   57,   15,   18,   16,   16,   62,   15,   21,
 /*    20 */    22,   18,   19,  108,   28,   27,   30,   28,   28,   31,
 /*    30 */    32,   33,   80,   81,   82,   83,   84,   38,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*    50 */    51,    1,    4,    5,    6,    7,    8,   92,   93,   94,
 /*    60 */    12,   13,   14,   64,   65,   66,   67,   68,   69,   70,
 /*    70 */    71,   72,   73,   74,   75,   19,   26,   15,   28,   17,
 /*    80 */    18,   36,  111,  112,   15,   15,   17,   18,   38,   39,
 /*    90 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   100 */    50,   51,   57,   34,   59,   95,   36,   15,   63,   15,
 /*   110 */    18,   19,   18,   57,   64,   65,   66,   67,   68,   69,
 /*   120 */    70,   71,   72,   73,   74,   75,    1,   83,   88,   89,
 /*   130 */    89,   87,    1,    2,   90,   91,   92,   28,   16,   99,
 /*   140 */    99,   16,  102,  103,  100,  101,  108,   16,  104,  105,
 /*   150 */    28,  107,   60,   28,   60,  115,  115,   82,   83,   84,
 /*   160 */    88,  117,  118,   38,   39,   40,   41,   42,   43,   44,
 /*   170 */    45,   46,   47,   48,   49,   50,   51,   15,    1,   30,
 /*   180 */    18,   19,   19,   20,   95,   36,   24,  115,  116,   64,
 /*   190 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   200 */    75,    1,   83,   88,   89,   88,   87,   30,   59,   90,
 /*   210 */    91,   92,  111,  112,   99,   16,   16,  102,  103,  100,
 /*   220 */   101,   98,   59,  104,  105,   83,  107,   28,   28,   52,
 /*   230 */   115,   15,  115,  114,   18,   36,   18,   36,   38,   39,
 /*   240 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   250 */    50,   51,    1,   89,  109,   35,  111,  112,   59,   24,
 /*   260 */    59,  119,  120,   99,   64,   65,   66,   67,   68,   69,
 /*   270 */    70,   71,   72,   73,   74,   75,   60,    1,   60,  115,
 /*   280 */    29,    1,   35,   63,   37,   92,   93,   19,   20,   38,
 /*   290 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   300 */    49,   50,   51,    1,   89,   35,   35,   37,   37,   17,
 /*   310 */    18,   90,   77,   92,   99,   64,   65,   66,   67,   68,
 /*   320 */    69,   70,   71,   72,   73,   74,   75,   59,  107,   98,
 /*   330 */   115,   15,   52,  108,   18,  110,   17,   18,  115,   37,
 /*   340 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   350 */    48,   49,   50,   51,    1,   89,  106,   88,   84,   15,
 /*   360 */    86,   88,   18,  113,   18,   99,   64,   65,   66,   67,
 /*   370 */    68,   69,   70,   71,   72,   73,   74,   75,   88,   89,
 /*   380 */    61,  115,   15,   15,  115,   18,   18,   98,  115,   99,
 /*   390 */    37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   400 */    47,   48,   49,   50,   51,  115,   89,  106,    1,   15,
 /*   410 */    17,  108,   18,  110,  113,    2,   99,   64,   65,   66,
 /*   420 */    67,   68,   69,   70,   71,   72,   73,   74,   75,    1,
 /*   430 */    83,   88,   89,    2,   87,   28,   25,   90,   91,   92,
 /*   440 */    15,    1,   99,   18,   16,  102,  103,  100,  101,   20,
 /*   450 */    19,  104,  105,   28,  107,   30,   16,   37,  115,   17,
 /*   460 */    20,  114,   17,   92,   93,   57,   38,   39,   40,   41,
 /*   470 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   480 */    89,   36,   36,   34,   61,   61,   57,   18,   34,   18,
 /*   490 */    99,   62,   64,   65,   66,   67,   68,   69,   70,   71,
 /*   500 */    72,   73,   74,   75,    1,   83,   88,   89,   89,   87,
 /*   510 */    19,   17,   90,   91,   92,   93,    1,   99,   99,   16,
 /*   520 */   102,  103,  100,  101,   16,   15,  104,  105,   18,  107,
 /*   530 */    24,   16,   18,  115,  115,   17,   28,   18,   28,   18,
 /*   540 */     1,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*   550 */    47,   48,   49,   50,   51,   16,   89,    2,   18,   18,
 /*   560 */    36,   18,   17,   63,   53,   18,   99,   64,   65,   66,
 /*   570 */    67,   68,   69,   70,   71,   72,   73,   74,   75,    1,
 /*   580 */    83,   88,   89,   99,   87,  109,  108,   90,   91,   92,
 /*   590 */     1,    1,   99,   89,   16,  102,  103,  100,  101,   16,
 /*   600 */    23,  104,  105,   99,  107,   16,   16,   28,  115,   28,
 /*   610 */   112,   28,   35,   20,  110,  118,   38,   39,   40,   41,
 /*   620 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   630 */     1,   13,  110,  113,   85,  108,    2,  121,  121,  116,
 /*   640 */    96,   52,   64,   65,   66,   67,   68,   69,   70,   71,
 /*   650 */    72,   73,   74,   75,  110,   83,  121,   28,  121,  121,
 /*   660 */   121,  121,  121,  121,  121,  121,  121,   38,   39,   40,
 /*   670 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   680 */    51,    1,  121,  121,  121,  121,  121,  121,  121,  121,
 /*   690 */   121,  121,  120,   64,   65,   66,   67,   68,   69,   70,
 /*   700 */    71,   72,   73,   74,   75,   88,   89,  121,  121,  121,
 /*   710 */   121,  121,  121,  121,  121,  121,   99,  121,   38,   39,
 /*   720 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   730 */    50,   51,  115,  121,  121,  121,  121,  121,  121,  121,
 /*   740 */   121,  121,  121,  121,   64,   65,   66,   67,   68,   69,
 /*   750 */    70,   71,   72,   73,   74,   75,    1,   77,  121,  121,
 /*   760 */    83,   88,   89,  121,   87,   16,  121,   90,   10,   92,
 /*   770 */    20,    1,   99,   15,  121,  102,  103,   28,   23,   21,
 /*   780 */    22,  104,  105,  121,  107,   27,   16,  121,  115,   31,
 /*   790 */    32,   33,  121,   38,   39,   40,   41,   42,   43,   44,
 /*   800 */    45,   46,   47,   48,   49,   50,   51,  121,  121,   59,
 /*   810 */   121,  121,  121,  121,  121,  121,  121,  121,   88,   64,
 /*   820 */    65,   66,   67,   68,   69,   70,   71,   72,   73,   74,
 /*   830 */    75,    1,  102,  103,   76,   77,   78,   16,  121,   88,
 /*   840 */    89,   89,   10,   16,   16,  115,   16,   15,  121,   28,
 /*   850 */    99,   99,  121,   21,   22,   28,   28,  121,  121,   27,
 /*   860 */   121,  121,  110,   31,   32,   33,  115,  121,   38,   39,
 /*   870 */    40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   880 */    50,   51,    1,    2,  121,  121,  121,  121,  121,  121,
 /*   890 */   121,  121,   96,   96,   64,   65,   66,   67,   68,   69,
 /*   900 */    70,   71,   72,   73,   74,   75,  110,  110,   76,   77,
 /*   910 */    78,  121,  121,  121,  121,  121,  121,  121,  121,   38,
 /*   920 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   930 */    49,   50,   51,    1,  121,  121,  121,  121,  121,  121,
 /*   940 */   121,  121,  121,  121,   97,   64,   65,   66,   67,   68,
 /*   950 */    69,   70,   71,   72,   73,   74,   75,  110,   88,   89,
 /*   960 */   121,  121,  121,  121,  121,  121,  121,  121,  121,   99,
 /*   970 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   980 */    48,   49,   50,   51,    1,  115,  121,  121,  121,  121,
 /*   990 */   121,  121,  121,  121,   96,   63,   64,   65,   66,   67,
 /*  1000 */    68,   69,   70,   71,   72,   73,   74,   75,  110,  121,
 /*  1010 */   121,  121,  121,  121,  121,  121,  121,  121,  121,  121,
 /*  1020 */   121,   38,   39,   40,   41,   42,   43,   44,   45,   46,
 /*  1030 */    47,   48,   49,   50,   51,  121,  121,  121,  121,  121,
 /*  1040 */   121,  121,  121,  121,  121,   96,  121,   64,   65,   66,
 /*  1050 */    67,   68,   69,   70,   71,   72,   73,   74,   75,  110,
 /*  1060 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*  1070 */    48,   49,   50,   51,  121,  121,  121,  121,  121,  121,
 /*  1080 */   121,  121,  121,  121,  121,  121,   64,   65,   66,   67,
 /*  1090 */    68,   69,   70,   71,   72,   73,   74,   75,   96,  121,
 /*  1100 */   121,  121,   15,   96,   17,   18,   83,    1,   21,   22,
 /*  1110 */    87,  121,  110,   90,   27,   92,  121,  110,   31,   32,
 /*  1120 */    33,   34,   16,   36,  101,   16,   39,  104,  105,  121,
 /*  1130 */   107,   83,  121,  121,   28,   87,  121,   28,   90,  121,
 /*  1140 */    92,   54,   55,   56,   57,   58,  121,   83,   61,   62,
 /*  1150 */    63,   87,  104,  105,   90,  107,   92,    1,   15,  121,
 /*  1160 */    17,   18,  121,   76,   21,   22,   16,   96,  104,  105,
 /*  1170 */    27,  107,   16,   16,   31,   32,   33,   34,   28,   36,
 /*  1180 */    24,  110,   39,  121,   28,   28,   83,  121,   96,  121,
 /*  1190 */    87,   16,   96,   90,   19,   92,  121,   54,   55,   56,
 /*  1200 */    57,   58,  110,   28,   61,   62,  110,  104,  105,    1,
 /*  1210 */   107,   36,  121,  121,   15,  121,   17,   18,  121,   76,
 /*  1220 */    21,   22,  121,  121,   16,  121,   27,   16,   20,  121,
 /*  1230 */    31,   32,   33,   34,   59,   36,   28,   89,   39,   28,
 /*  1240 */   121,  121,   83,  121,   36,  121,   87,   99,  121,   90,
 /*  1250 */    16,   92,  121,   54,   55,   56,   57,   58,  110,   89,
 /*  1260 */    61,   62,   28,  104,  105,  121,  107,   59,  121,   99,
 /*  1270 */    15,  121,   17,   18,   83,   76,   21,   22,   87,  121,
 /*  1280 */   110,   90,   27,   92,  121,  121,   31,   32,   33,   34,
 /*  1290 */    16,   36,   16,   16,   39,  104,  105,  121,  107,  121,
 /*  1300 */   121,  121,   28,  121,   28,   28,   16,  121,   16,   54,
 /*  1310 */    55,   56,   57,   58,  121,   83,   61,   62,   28,   87,
 /*  1320 */    28,  121,   90,   16,   92,  121,   15,  121,   17,   18,
 /*  1330 */   121,   76,   21,   22,    1,   28,  104,  105,   27,  107,
 /*  1340 */    16,   16,   31,   32,   33,   34,   16,   36,   16,   16,
 /*  1350 */    39,  121,   28,   28,  121,  121,  121,   24,   28,  121,
 /*  1360 */    28,   28,  121,  121,  121,   54,   55,   56,   57,   58,
 /*  1370 */   121,  121,   61,   62,  121,    1,  121,  121,  121,  121,
 /*  1380 */   121,  121,   15,  121,   17,   18,  121,   76,   21,   22,
 /*  1390 */    16,  121,  121,  121,   27,  121,  121,  121,   31,   32,
 /*  1400 */    33,   34,   28,   36,  121,  121,   39,  121,  121,  121,
 /*  1410 */   121,  121,  121,  121,  121,  121,  121,  121,  121,  121,
 /*  1420 */   121,   54,   55,   56,   57,   58,   52,  121,   61,   62,
 /*  1430 */   121,    1,  121,  121,  121,  121,  121,  121,   15,  121,
 /*  1440 */    17,   18,  121,   76,   21,   22,   16,  121,  121,  121,
 /*  1450 */    27,  121,  121,  121,   31,   32,   33,   34,   28,   36,
 /*  1460 */   121,  121,   39,  121,  121,  121,  121,  121,  121,  121,
 /*  1470 */   121,  121,  121,  121,  121,  121,  121,   54,   55,   56,
 /*  1480 */    57,   58,   52,  121,   61,   62,  121,    1,  121,  121,
 /*  1490 */   121,  121,  121,  121,   15,  121,   17,   18,  121,   76,
 /*  1500 */    21,   22,   16,  121,  121,  121,   27,  121,  121,  121,
 /*  1510 */    31,   32,   33,   34,   28,   36,  121,  121,   39,  121,
 /*  1520 */   121,  121,  121,  121,  121,  121,  121,  121,  121,  121,
 /*  1530 */   121,  121,  121,   54,   55,   56,   57,   58,   52,  121,
 /*  1540 */    61,   62,  121,  121,  121,  121,  121,  121,  121,  121,
 /*  1550 */    15,  121,   17,   18,  121,   76,   21,   22,  121,  121,
 /*  1560 */   121,  121,   27,  121,  121,  121,   31,   32,   33,   34,
 /*  1570 */   121,   36,  121,  121,   39,  121,  121,  121,  121,  121,
 /*  1580 */   121,  121,  121,  121,  121,  121,  121,  121,  121,   54,
 /*  1590 */    55,   56,   57,   58,  121,  121,   61,   62,  121,  121,
 /*  1600 */   121,  121,  121,  121,  121,  121,   15,  121,   17,   18,
 /*  1610 */   121,   76,   21,   22,  121,  121,  121,  121,   27,  121,
 /*  1620 */   121,  121,   31,   32,   33,   34,  121,   36,  121,  121,
 /*  1630 */    39,  121,  121,  121,  121,  121,  121,  121,  121,  121,
 /*  1640 */   121,  121,  121,  121,  121,   54,   55,   56,   57,   58,
 /*  1650 */   121,  121,   61,   62,  121,  121,  121,  121,  121,  121,
 /*  1660 */   121,  121,   15,  121,   17,   18,  121,   76,   21,   22,
 /*  1670 */   121,  121,  121,  121,   27,  121,  121,  121,   31,   32,
 /*  1680 */    33,   34,    1,   36,  121,  121,   39,  121,  121,  121,
 /*  1690 */   121,  121,  121,  121,  121,  121,  121,   16,  121,  121,
 /*  1700 */   121,   54,   55,   56,   57,   58,  121,  121,   61,   28,
 /*  1710 */    29,  121,  121,  121,  121,  121,  121,  121,   15,  121,
 /*  1720 */    17,   18,  121,   76,   21,   22,  121,  121,  121,  121,
 /*  1730 */    27,  121,  121,   52,   31,   32,   33,   34,  121,   36,
 /*  1740 */   121,  121,   39,  121,  121,  121,  121,  121,  121,  121,
 /*  1750 */   121,  121,  121,  121,  121,  121,   16,   54,   55,   56,
 /*  1760 */    57,   58,  121,   23,   61,   25,   26,  121,   28,   29,
 /*  1770 */   121,  121,  121,  121,  121,   35,   36,   37,  121,   76,
 /*  1780 */   121,  121,  121,  121,  121,  121,  121,   83,  121,  121,
 /*  1790 */   121,   87,   52,  121,   90,   91,   92,   93,  121,   59,
 /*  1800 */   121,  121,  121,   63,  100,  101,  121,  121,  104,  105,
 /*  1810 */   121,  107,  121,  121,   83,  121,  121,   77,   87,  121,
 /*  1820 */   121,   90,   91,   92,  121,  121,  121,  121,  121,  121,
 /*  1830 */   121,  100,  101,  121,  121,  104,  105,  121,  107,  121,
 /*  1840 */    83,  121,  121,  121,   87,  114,  121,   90,   91,   92,
 /*  1850 */   121,  121,  121,  121,  121,  121,  121,  100,  101,   83,
 /*  1860 */   121,  104,  105,   87,  107,  121,   90,   91,   92,  121,
 /*  1870 */   121,  121,  121,  121,  121,  121,  100,  101,   83,  121,
 /*  1880 */   104,  105,   87,  107,  121,   90,   91,   92,  121,  121,
 /*  1890 */   121,  121,  121,  121,  121,  100,  101,  121,  121,  104,
 /*  1900 */   105,   83,  107,  121,  121,   87,  121,  121,   90,   91,
 /*  1910 */    92,  121,  121,  121,  121,  121,  121,  121,  100,  101,
 /*  1920 */    83,  121,  104,  105,   87,  107,  121,   90,   91,   92,
 /*  1930 */   121,  121,  121,  121,  121,  121,  121,  100,  101,  121,
 /*  1940 */   121,  104,  105,   83,  107,  121,  121,   87,  121,  121,
 /*  1950 */    90,   91,   92,  121,  121,  121,  121,  121,  121,  121,
 /*  1960 */   100,  101,   83,  121,  104,  105,   87,  107,  121,   90,
 /*  1970 */    91,   92,  121,  121,  121,  121,  121,  121,  121,  100,
 /*  1980 */   101,  121,  121,  104,  105,   83,  107,  121,  121,   87,
 /*  1990 */   121,  121,   90,   91,   92,  121,  121,  121,  121,  121,
 /*  2000 */   121,  121,  100,  101,   83,  121,  104,  105,   87,  107,
 /*  2010 */   121,   90,   91,   92,  121,  121,  121,  121,  121,  121,
 /*  2020 */   121,  100,  101,  121,  121,  104,  105,   83,  107,  121,
 /*  2030 */   121,   87,  121,  121,   90,   91,   92,  121,  121,  121,
 /*  2040 */   121,  121,  121,  121,  100,  101,   83,  121,  104,  105,
 /*  2050 */    87,  107,  121,   90,   91,   92,  121,  121,  121,  121,
 /*  2060 */   121,  121,  121,  100,  101,  121,  121,  104,  105,   83,
 /*  2070 */   107,  121,  121,   87,  121,  121,   90,   91,   92,  121,
 /*  2080 */   121,  121,  121,  121,  121,  121,  100,  101,   83,  121,
 /*  2090 */   104,  105,   87,  107,  121,   90,   91,   92,  121,  121,
 /*  2100 */   121,  121,  121,  121,  121,  100,  101,  121,  121,  104,
 /*  2110 */   105,   83,  107,  121,  121,   87,  121,  121,   90,   91,
 /*  2120 */    92,  121,  121,  121,  121,  121,  121,  121,  100,  101,
 /*  2130 */    83,  121,  104,  105,   87,  107,  121,   90,   91,   92,
 /*  2140 */   121,  121,  121,  121,  121,  121,  121,  100,  101,  121,
 /*  2150 */   121,  104,  105,   83,  107,  121,  121,   87,  121,  121,
 /*  2160 */    90,   91,   92,  121,  121,  121,  121,  121,  121,  121,
 /*  2170 */   100,  101,   83,  121,  104,  105,   87,  107,  121,   90,
 /*  2180 */    91,   92,  121,  121,  121,  121,  121,  121,  121,  100,
 /*  2190 */   101,  121,  121,  104,  105,   83,  107,  121,  121,   87,
 /*  2200 */   121,  121,   90,   91,   92,  121,  121,  121,  121,  121,
 /*  2210 */   121,  121,  100,  101,   83,  121,  104,  105,   87,  107,
 /*  2220 */   121,   90,   91,   92,  121,  121,  121,  121,  121,  121,
 /*  2230 */   121,  100,  101,  121,  121,  104,  105,   83,  107,  121,
 /*  2240 */   121,   87,  121,  121,   90,   91,   92,  121,  121,  121,
 /*  2250 */   121,  121,  121,  121,  100,  101,   83,  121,  104,  105,
 /*  2260 */    87,  107,  121,   90,   91,   92,  121,  121,  121,  121,
 /*  2270 */   121,  121,  121,  100,  101,  121,  121,  104,  105,   83,
 /*  2280 */   107,  121,  121,   87,  121,  121,   90,   91,   92,  121,
 /*  2290 */   121,  121,  121,  121,  121,  121,  100,  101,   83,  121,
 /*  2300 */   104,  105,   87,  107,  121,   90,   91,   92,  121,  121,
 /*  2310 */   121,  121,  121,  121,  121,  100,  101,  121,  121,  104,
 /*  2320 */   105,   83,  107,  121,  121,   87,  121,  121,   90,   91,
 /*  2330 */    92,  121,  121,  121,  121,  121,  121,  121,  100,  101,
 /*  2340 */    83,  121,  104,  105,   87,  107,  121,   90,   91,   92,
 /*  2350 */   121,  121,  121,  121,  121,  121,  121,  100,  101,  121,
 /*  2360 */   121,  104,  105,   83,  107,  121,  121,   87,  121,  121,
 /*  2370 */    90,   91,   92,  121,  121,  121,  121,  121,  121,  121,
 /*  2380 */   100,  101,   83,  121,  104,  105,   87,  107,  121,   90,
 /*  2390 */    91,   92,  121,  121,  121,  121,  121,  121,  121,  100,
 /*  2400 */   101,  121,  121,  104,  105,   83,  107,  121,  121,   87,
 /*  2410 */   121,  121,   90,   91,   92,  121,  121,  121,  121,  121,
 /*  2420 */   121,  121,  100,  101,   83,  121,  104,  105,   87,  107,
 /*  2430 */   121,   90,   91,   92,  121,  121,  121,  121,  121,  121,
 /*  2440 */   121,  100,  101,  121,  121,  104,  105,   83,  107,  121,
 /*  2450 */   121,   87,  121,  121,   90,   91,   92,  121,  121,  121,
 /*  2460 */   121,  121,  121,  121,  100,  101,   83,  121,  104,  105,
 /*  2470 */    87,  107,  121,   90,   91,   92,  121,  121,  121,  121,
 /*  2480 */   121,  121,  121,  100,  101,  121,  121,  104,  105,   83,
 /*  2490 */   107,  121,  121,   87,  121,  121,   90,   91,   92,  121,
 /*  2500 */   121,  121,  121,  121,  121,  121,  100,  101,   83,  121,
 /*  2510 */   104,  105,   87,  107,  121,   90,   91,   92,  121,  121,
 /*  2520 */   121,  121,  121,  121,  121,  100,  101,  121,  121,  104,
 /*  2530 */   105,   83,  107,  121,  121,   87,  121,  121,   90,   91,
 /*  2540 */    92,  121,  121,  121,  121,  121,  121,  121,  100,  101,
 /*  2550 */    83,  121,  104,  105,   87,  107,  121,   90,   91,   92,
 /*  2560 */   121,  121,  121,  121,  121,  121,  121,  100,  101,  121,
 /*  2570 */   121,  104,  105,   83,  107,  121,  121,   87,  121,  121,
 /*  2580 */    90,   91,   92,  121,  121,  121,  121,  121,  121,  121,
 /*  2590 */   100,  101,   83,  121,  104,  105,   87,  107,  121,   90,
 /*  2600 */   121,   92,  121,  121,  121,  121,  121,  121,  121,  121,
 /*  2610 */   101,  121,  121,  104,  105,  121,  107,
);
    const YY_SHIFT_USE_DFLT = -46;
    const YY_SHIFT_MAX = 256;
    static public $yy_shift_ofst = array(
 /*     0 */    -2, 1367, 1479, 1143, 1143, 1143, 1367, 1479, 1087, 1143,
 /*    10 */  1143, 1143, 1143, 1143, 1143, 1143, 1143, 1311, 1143, 1143,
 /*    20 */  1143, 1591, 1143, 1143, 1143, 1143, 1143, 1143, 1143, 1143,
 /*    30 */  1255, 1143, 1143, 1143, 1143, 1423, 1143, 1535, 1143, 1143,
 /*    40 */  1143, 1255, 1143, 1311, 1199, 1199, 1647, 1647, 1647, 1703,
 /*    50 */  1647, 1647, 1647,  200,   50,   -1,  125,  629,  629,  629,
 /*    60 */   830,  881,  932,  503,  302,  251,  353,  428,  578,  755,
 /*    70 */   680,  983,  983,  983,  983,  983,  983,  983,  983,  983,
 /*    80 */   983,  983,  983,  983,  983,  983,  983,  983,  983,  983,
 /*    90 */  1022, 1022, 1208, 1374, 1333, 1156,  407,   -2,  758,   -4,
 /*   100 */   425,  510,  131,  429,  510, 1106,  319, 1106,  407,  445,
 /*   110 */   407,  407,  832,   48, 1681, 1486,  162,   92, 1430,  216,
 /*   120 */   440,  268,  177,    3,  589,  163,  344, 1332,  316,  750,
 /*   130 */   316,  367,  292,  292,  316,  316,  770,  316,  316,  316,
 /*   140 */   445,  394,  316,  368,  445,  280,  316,  367,  593,  593,
 /*   150 */   579,  276,  276,  276,  276,  276,  581,  276,  276,  276,
 /*   160 */   -46,   94,   62,  749,  -45,    0,  -45,  827, 1109,  828,
 /*   170 */   583,   70,  821,  -45,  122,  508, 1150,  590,  539, 1324,
 /*   180 */  1307, 1325,  -45, 1330, 1292,  -45, 1211, 1157, 1234,  515,
 /*   190 */  1290, 1277, 1274, 1276,  618,  593,  524,  634,  634,  593,
 /*   200 */   593,  109,  109,  276,  276,  -46,  -46,  -46,  -46,  -46,
 /*   210 */  1740, 1175,   69,  199,   45,  149,  201,  220,  431,  235,
 /*   220 */   218,   56,  271,  577,  201,  247,  270,  547,  521,  540,
 /*   230 */   346,  514,  506,  518,  541,  524,  500,  511,  543,  555,
 /*   240 */   545,  491,  494,  420,  408,  411,  442,  393,  413,  446,
 /*   250 */   423,  471,  454,  424,  449,  469,  519,
);
    const YY_REDUCE_USE_DFLT = -86;
    const YY_REDUCE_MAX = 209;
    static public $yy_reduce_ofst = array(
 /*     0 */   -48,   44,  422,  347,  119, 1731,  497, 1704, 2005, 1986,
 /*    10 */  1963, 2028, 2047, 2089, 2070, 1944, 1921, 1818, 1795, 1776,
 /*    20 */  1837, 1860, 1902, 1879, 2112, 2131, 2383, 2364, 2341, 2425,
 /*    30 */  2467, 2448, 2490, 2322, 1757, 2299, 2196, 2173, 2154, 2215,
 /*    40 */  2238, 2280, 2257, 2406, 1023, 2509, 1103, 1159,  677, 1064,
 /*    50 */  1048, 1191, 1232,  343,  418,  115,   40,  673,  493,   40,
 /*    60 */   730,  730,  730,  730,  730,  730,  730,  730,  730,  730,
 /*    70 */   730,  730,  730,  730,  730,  730,  730,  730,  730,  730,
 /*    80 */   730,  730,  730,  730,  730,  730,  730,  730,  730,  730,
 /*    90 */   730,  730,  290,  870,  617,  617,  751,   75,  142,  752,
 /*   100 */  1148,  504,   72,  145, 1170,  419,  221,  215,  266,  -35,
 /*   110 */    41,  164,  572,  274,  117,  117,  847,  225,  117,  225,
 /*   120 */   269,  101,  117,  225,  117,  101,  797,  467,  898,  101,
 /*   130 */  1002,  949,  301,  250,  544,  796,  273,  797, 1096,  303,
 /*   140 */   371, 1092, 1007,  797,  193,  117, 1071,  797,  101,  -29,
 /*   150 */   391,  117,  117,  117,  117,  117,  317,  117,  117,  117,
 /*   160 */   117,  522,  520,  484,  476,  484,  476,  484,  484,  484,
 /*   170 */   484,  478,  484,  476,  484,  484,  484,  223,  223,  484,
 /*   180 */   484,  484,  476,  484,  484,  476,  484,  484,  484,  223,
 /*   190 */   484,  484,  484,  484,  549,  498,  527,  523,  523,  498,
 /*   200 */   498,   89,   10,  223,  223,  289,   38,  -85,  231,  123,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 22, 27, 31, 32, 33, ),
        /* 1 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 2 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 3 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 4 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 5 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 6 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 7 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 8 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 63, 76, ),
        /* 9 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 10 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 11 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 12 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 13 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 14 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 15 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 16 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 17 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 18 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 19 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 20 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 21 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 22 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 23 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 24 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 25 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 26 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 27 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 28 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 29 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 30 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 31 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 32 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 33 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 34 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 35 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 36 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 37 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 38 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 39 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 40 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 41 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 42 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 43 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 44 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 45 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 62, 76, ),
        /* 46 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 76, ),
        /* 47 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 76, ),
        /* 48 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 76, ),
        /* 49 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 76, ),
        /* 50 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 76, ),
        /* 51 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 76, ),
        /* 52 */ array(15, 17, 18, 21, 22, 27, 31, 32, 33, 34, 36, 39, 54, 55, 56, 57, 58, 61, 76, ),
        /* 53 */ array(1, 16, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 54 */ array(1, 26, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 55 */ array(1, 16, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 56 */ array(1, 16, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 57 */ array(1, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 58 */ array(1, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 59 */ array(1, 28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 60 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 61 */ array(1, 2, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 62 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 63 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 64 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 65 */ array(1, 29, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 66 */ array(1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 67 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 68 */ array(1, 16, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 69 */ array(1, 23, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 70 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, ),
        /* 71 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 72 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 73 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 74 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 75 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 76 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 77 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 78 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 79 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 80 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 81 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 82 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 83 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 84 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 85 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 86 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 87 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 88 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 89 */ array(1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 90 */ array(38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 91 */ array(38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, ),
        /* 92 */ array(1, 16, 20, 28, 36, 59, ),
        /* 93 */ array(1, 16, 28, 52, ),
        /* 94 */ array(1, 16, 24, 28, ),
        /* 95 */ array(1, 16, 24, 28, ),
        /* 96 */ array(1, 28, ),
        /* 97 */ array(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 21, 22, 27, 31, 32, 33, ),
        /* 98 */ array(10, 15, 21, 22, 27, 31, 32, 33, 76, 77, 78, ),
        /* 99 */ array(15, 18, 28, 30, ),
        /* 100 */ array(15, 18, 28, 30, ),
        /* 101 */ array(15, 18, 28, ),
        /* 102 */ array(1, 2, 16, ),
        /* 103 */ array(20, 57, 62, ),
        /* 104 */ array(15, 18, 28, ),
        /* 105 */ array(1, 16, 28, ),
        /* 106 */ array(17, 18, 61, ),
        /* 107 */ array(1, 16, 28, ),
        /* 108 */ array(1, 28, ),
        /* 109 */ array(17, 36, ),
        /* 110 */ array(1, 28, ),
        /* 111 */ array(1, 28, ),
        /* 112 */ array(10, 15, 21, 22, 27, 31, 32, 33, 76, 77, 78, ),
        /* 113 */ array(4, 5, 6, 7, 8, 12, 13, 14, ),
        /* 114 */ array(1, 16, 28, 29, 52, ),
        /* 115 */ array(1, 16, 28, 52, ),
        /* 116 */ array(15, 18, 19, 24, ),
        /* 117 */ array(15, 18, 19, 60, ),
        /* 118 */ array(1, 16, 28, 52, ),
        /* 119 */ array(15, 18, 60, ),
        /* 120 */ array(1, 16, 20, ),
        /* 121 */ array(19, 20, 59, ),
        /* 122 */ array(1, 30, 52, ),
        /* 123 */ array(15, 18, 19, ),
        /* 124 */ array(1, 16, 52, ),
        /* 125 */ array(19, 20, 59, ),
        /* 126 */ array(15, 18, ),
        /* 127 */ array(16, 28, ),
        /* 128 */ array(15, 18, ),
        /* 129 */ array(20, 59, ),
        /* 130 */ array(15, 18, ),
        /* 131 */ array(15, 18, ),
        /* 132 */ array(17, 18, ),
        /* 133 */ array(17, 18, ),
        /* 134 */ array(15, 18, ),
        /* 135 */ array(15, 18, ),
        /* 136 */ array(1, 16, ),
        /* 137 */ array(15, 18, ),
        /* 138 */ array(15, 18, ),
        /* 139 */ array(15, 18, ),
        /* 140 */ array(17, 36, ),
        /* 141 */ array(15, 18, ),
        /* 142 */ array(15, 18, ),
        /* 143 */ array(15, 18, ),
        /* 144 */ array(17, 36, ),
        /* 145 */ array(1, 52, ),
        /* 146 */ array(15, 18, ),
        /* 147 */ array(15, 18, ),
        /* 148 */ array(20, ),
        /* 149 */ array(20, ),
        /* 150 */ array(28, ),
        /* 151 */ array(1, ),
        /* 152 */ array(1, ),
        /* 153 */ array(1, ),
        /* 154 */ array(1, ),
        /* 155 */ array(1, ),
        /* 156 */ array(28, ),
        /* 157 */ array(1, ),
        /* 158 */ array(1, ),
        /* 159 */ array(1, ),
        /* 160 */ array(),
        /* 161 */ array(15, 18, 60, ),
        /* 162 */ array(15, 17, 18, ),
        /* 163 */ array(16, 28, ),
        /* 164 */ array(57, 62, ),
        /* 165 */ array(16, 28, ),
        /* 166 */ array(57, 62, ),
        /* 167 */ array(16, 28, ),
        /* 168 */ array(16, 28, ),
        /* 169 */ array(16, 28, ),
        /* 170 */ array(16, 28, ),
        /* 171 */ array(15, 36, ),
        /* 172 */ array(16, 28, ),
        /* 173 */ array(57, 62, ),
        /* 174 */ array(16, 28, ),
        /* 175 */ array(16, 28, ),
        /* 176 */ array(16, 28, ),
        /* 177 */ array(1, 16, ),
        /* 178 */ array(1, 16, ),
        /* 179 */ array(16, 28, ),
        /* 180 */ array(16, 28, ),
        /* 181 */ array(16, 28, ),
        /* 182 */ array(57, 62, ),
        /* 183 */ array(16, 28, ),
        /* 184 */ array(16, 28, ),
        /* 185 */ array(57, 62, ),
        /* 186 */ array(16, 28, ),
        /* 187 */ array(16, 28, ),
        /* 188 */ array(16, 28, ),
        /* 189 */ array(1, 16, ),
        /* 190 */ array(16, 28, ),
        /* 191 */ array(16, 28, ),
        /* 192 */ array(16, 28, ),
        /* 193 */ array(16, 28, ),
        /* 194 */ array(13, ),
        /* 195 */ array(20, ),
        /* 196 */ array(36, ),
        /* 197 */ array(2, ),
        /* 198 */ array(2, ),
        /* 199 */ array(20, ),
        /* 200 */ array(20, ),
        /* 201 */ array(28, ),
        /* 202 */ array(28, ),
        /* 203 */ array(1, ),
        /* 204 */ array(1, ),
        /* 205 */ array(),
        /* 206 */ array(),
        /* 207 */ array(),
        /* 208 */ array(),
        /* 209 */ array(),
        /* 210 */ array(16, 23, 25, 26, 28, 29, 35, 36, 37, 52, 59, 63, 77, ),
        /* 211 */ array(16, 19, 28, 36, 59, ),
        /* 212 */ array(15, 17, 18, 34, ),
        /* 213 */ array(16, 28, 36, 59, ),
        /* 214 */ array(36, 57, 59, 63, ),
        /* 215 */ array(30, 36, 59, ),
        /* 216 */ array(36, 59, ),
        /* 217 */ array(35, 63, ),
        /* 218 */ array(2, 19, ),
        /* 219 */ array(24, 77, ),
        /* 220 */ array(18, 60, ),
        /* 221 */ array(19, 57, ),
        /* 222 */ array(35, 37, ),
        /* 223 */ array(23, 35, ),
        /* 224 */ array(36, 59, ),
        /* 225 */ array(35, 37, ),
        /* 226 */ array(35, 37, ),
        /* 227 */ array(18, ),
        /* 228 */ array(18, ),
        /* 229 */ array(18, ),
        /* 230 */ array(18, ),
        /* 231 */ array(18, ),
        /* 232 */ array(24, ),
        /* 233 */ array(17, ),
        /* 234 */ array(18, ),
        /* 235 */ array(36, ),
        /* 236 */ array(63, ),
        /* 237 */ array(53, ),
        /* 238 */ array(18, ),
        /* 239 */ array(2, ),
        /* 240 */ array(17, ),
        /* 241 */ array(19, ),
        /* 242 */ array(17, ),
        /* 243 */ array(37, ),
        /* 244 */ array(57, ),
        /* 245 */ array(25, ),
        /* 246 */ array(17, ),
        /* 247 */ array(17, ),
        /* 248 */ array(2, ),
        /* 249 */ array(36, ),
        /* 250 */ array(61, ),
        /* 251 */ array(18, ),
        /* 252 */ array(34, ),
        /* 253 */ array(61, ),
        /* 254 */ array(34, ),
        /* 255 */ array(18, ),
        /* 256 */ array(18, ),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
        /* 389 */ array(),
        /* 390 */ array(),
        /* 391 */ array(),
        /* 392 */ array(),
);
    static public $yy_default = array(
 /*     0 */   396,  579,  596,  550,  550,  550,  596,  596,  596,  596,
 /*    10 */   596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
 /*    20 */   596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
 /*    30 */   596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
 /*    40 */   596,  596,  596,  596,  596,  596,  596,  596,  596,  596,
 /*    50 */   596,  596,  596,  596,  458,  596,  596,  458,  458,  458,
 /*    60 */   596,  596,  596,  596,  596,  463,  596,  596,  596,  596,
 /*    70 */   596,  479,  581,  580,  548,  465,  463,  460,  582,  487,
 /*    80 */   440,  482,  492,  491,  488,  484,  469,  549,  468,  483,
 /*    90 */   496,  495,  507,  471,  497,  497,  458,  393,  596,  458,
 /*   100 */   458,  458,  596,  562,  458,  478,  596,  515,  458,  596,
 /*   110 */   458,  458,  596,  596,  471,  471,  596,  523,  471,  523,
 /*   120 */   596,  516,  471,  523,  471,  516,  596,  596,  596,  516,
 /*   130 */   596,  596,  596,  596,  596,  596,  596,  596,  596,  523,
 /*   140 */   596,  596,  596,  596,  596,  471,  596,  596,  516,  559,
 /*   150 */   458,  474,  481,  494,  475,  500,  458,  498,  499,  476,
 /*   160 */   557,  524,  596,  596,  521,  596,  541,  596,  596,  596,
 /*   170 */   596,  523,  596,  540,  596,  596,  596,  596,  596,  596,
 /*   180 */   596,  596,  542,  596,  596,  543,  596,  596,  596,  596,
 /*   190 */   596,  596,  596,  596,  411,  537,  523,  552,  551,  560,
 /*   200 */   563,  595,  595,  478,  515,  556,  523,  523,  556,  556,
 /*   210 */   473,  507,  596,  507,  507,  507,  493,  596,  535,  497,
 /*   220 */   596,  503,  596,  596,  507,  596,  596,  596,  596,  596,
 /*   230 */   596,  596,  497,  596,  596,  535,  596,  509,  596,  535,
 /*   240 */   596,  596,  596,  596,  503,  466,  596,  596,  535,  561,
 /*   250 */   596,  596,  505,  596,  596,  596,  596,  536,  421,  470,
 /*   260 */   577,  394,  447,  437,  578,  520,  530,  467,  529,  576,
 /*   270 */   438,  545,  443,  442,  546,  558,  448,  441,  547,  544,
 /*   280 */   531,  509,  528,  519,  594,  532,  477,  450,  449,  555,
 /*   290 */   451,  452,  535,  534,  439,  457,  444,  445,  446,  453,
 /*   300 */   553,  512,  506,  472,  473,  517,  504,  502,  554,  454,
 /*   310 */   455,  501,  436,  435,  404,  403,  405,  406,  407,  402,
 /*   320 */   401,  397,  395,  398,  399,  400,  408,  409,  418,  417,
 /*   330 */   419,  420,  456,  416,  415,  410,  412,  413,  414,  522,
 /*   340 */   525,  427,  426,  428,  429,  538,  591,  425,  422,  539,
 /*   350 */   423,  590,  424,  430,  431,  587,  588,  589,  592,  593,
 /*   360 */   585,  584,  432,  434,  433,  583,  518,  514,  513,  511,
 /*   370 */   485,  486,  489,  510,  480,  533,  526,  527,  508,  490,
 /*   380 */   564,  572,  571,  573,  574,  575,  570,  569,  565,  566,
 /*   390 */   567,  568,  586,
);
    const YYNOCODE = 122;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 393;
    const YYNRULE = 203;
    const YYERRORSYMBOL = 79;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'COMMENT',
  'PHPSTARTTAG',   'PHPENDTAG',     'ASPSTARTTAG',   'ASPENDTAG',
  'FAKEPHPSTARTTAG',  'XMLTAG',        'OTHER',         'LINEBREAK',
  'LITERALSTART',  'LITERALEND',    'LITERAL',       'LDEL',
  'RDEL',          'DOLLAR',        'ID',            'EQUAL',
  'PTR',           'LDELIF',        'LDELFOR',       'SEMICOLON',
  'INCDEC',        'TO',            'STEP',          'LDELFOREACH',
  'SPACE',         'AS',            'APTR',          'LDELSETFILTER',
  'SMARTYBLOCKCHILD',  'LDELSLASH',     'INTEGER',       'COMMA',
  'OPENP',         'CLOSEP',        'MATH',          'UNIMATH',
  'ANDSYM',        'ISIN',          'ISDIVBY',       'ISNOTDIVBY',
  'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY',
  'ISODD',         'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',
  'INSTANCEOF',    'QMARK',         'NOT',           'TYPECAST',
  'HEX',           'DOT',           'SINGLEQUOTESTRING',  'DOUBLECOLON',
  'AT',            'HATCH',         'OPENB',         'CLOSEB',
  'EQUALS',        'NOTEQUALS',     'GREATERTHAN',   'LESSTHAN',
  'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',      'NONEIDENTITY',
  'MOD',           'LAND',          'LOR',           'LXOR',
  'QUOTE',         'BACKTICK',      'DOLLARID',      'error',
  'start',         'template',      'template_element',  'smartytag',
  'literal',       'literal_elements',  'literal_element',  'value',
  'modifierlist',  'attributes',    'variable',      'expr',
  'varindexed',    'statement',     'statements',    'optspace',
  'varvar',        'foraction',     'modparameters',  'attribute',
  'ternary',       'array',         'ifcond',        'lop',
  'function',      'doublequoted_with_quotes',  'static_class_access',  'object',
  'arrayindex',    'indexdef',      'varvarele',     'objectchain',
  'objectelement',  'method',        'params',        'modifier',
  'modparameter',  'arrayelements',  'arrayelement',  'doublequoted',
  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= smartytag",
 /*   5 */ "template_element ::= COMMENT",
 /*   6 */ "template_element ::= literal",
 /*   7 */ "template_element ::= PHPSTARTTAG",
 /*   8 */ "template_element ::= PHPENDTAG",
 /*   9 */ "template_element ::= ASPSTARTTAG",
 /*  10 */ "template_element ::= ASPENDTAG",
 /*  11 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  12 */ "template_element ::= XMLTAG",
 /*  13 */ "template_element ::= OTHER",
 /*  14 */ "template_element ::= LINEBREAK",
 /*  15 */ "literal ::= LITERALSTART LITERALEND",
 /*  16 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  17 */ "literal_elements ::= literal_elements literal_element",
 /*  18 */ "literal_elements ::=",
 /*  19 */ "literal_element ::= literal",
 /*  20 */ "literal_element ::= LITERAL",
 /*  21 */ "literal_element ::= PHPSTARTTAG",
 /*  22 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  23 */ "literal_element ::= PHPENDTAG",
 /*  24 */ "literal_element ::= ASPSTARTTAG",
 /*  25 */ "literal_element ::= ASPENDTAG",
 /*  26 */ "smartytag ::= LDEL value RDEL",
 /*  27 */ "smartytag ::= LDEL value modifierlist attributes RDEL",
 /*  28 */ "smartytag ::= LDEL value attributes RDEL",
 /*  29 */ "smartytag ::= LDEL variable modifierlist attributes RDEL",
 /*  30 */ "smartytag ::= LDEL variable attributes RDEL",
 /*  31 */ "smartytag ::= LDEL expr modifierlist attributes RDEL",
 /*  32 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  35 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  36 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  37 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  38 */ "smartytag ::= LDEL ID RDEL",
 /*  39 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  40 */ "smartytag ::= LDEL ID modifierlist attributes RDEL",
 /*  41 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes RDEL",
 /*  42 */ "smartytag ::= LDELIF expr RDEL",
 /*  43 */ "smartytag ::= LDELIF expr attributes RDEL",
 /*  44 */ "smartytag ::= LDELIF statement RDEL",
 /*  45 */ "smartytag ::= LDELIF statement attributes RDEL",
 /*  46 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes RDEL",
 /*  47 */ "foraction ::= EQUAL expr",
 /*  48 */ "foraction ::= INCDEC",
 /*  49 */ "smartytag ::= LDELFOR statement TO expr attributes RDEL",
 /*  50 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes RDEL",
 /*  51 */ "smartytag ::= LDELFOREACH attributes RDEL",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes RDEL",
 /*  53 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  54 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes RDEL",
 /*  55 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  56 */ "smartytag ::= LDELSETFILTER ID modparameters RDEL",
 /*  57 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
 /*  58 */ "smartytag ::= SMARTYBLOCKCHILD",
 /*  59 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  60 */ "smartytag ::= LDELSLASH ID modifierlist RDEL",
 /*  61 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  62 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist RDEL",
 /*  63 */ "attributes ::= attributes attribute",
 /*  64 */ "attributes ::= attribute",
 /*  65 */ "attributes ::=",
 /*  66 */ "attribute ::= SPACE ID EQUAL ID",
 /*  67 */ "attribute ::= SPACE ID EQUAL expr",
 /*  68 */ "attribute ::= SPACE ID EQUAL value",
 /*  69 */ "attribute ::= SPACE ID",
 /*  70 */ "attribute ::= SPACE expr",
 /*  71 */ "attribute ::= SPACE value",
 /*  72 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  73 */ "statements ::= statement",
 /*  74 */ "statements ::= statements COMMA statement",
 /*  75 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  76 */ "statement ::= varindexed EQUAL expr",
 /*  77 */ "statement ::= OPENP statement CLOSEP",
 /*  78 */ "expr ::= value",
 /*  79 */ "expr ::= ternary",
 /*  80 */ "expr ::= DOLLAR ID COLON ID",
 /*  81 */ "expr ::= expr MATH value",
 /*  82 */ "expr ::= expr UNIMATH value",
 /*  83 */ "expr ::= expr ANDSYM value",
 /*  84 */ "expr ::= array",
 /*  85 */ "expr ::= expr modifierlist",
 /*  86 */ "expr ::= expr ifcond expr",
 /*  87 */ "expr ::= expr ISIN array",
 /*  88 */ "expr ::= expr ISIN value",
 /*  89 */ "expr ::= expr lop expr",
 /*  90 */ "expr ::= expr ISDIVBY expr",
 /*  91 */ "expr ::= expr ISNOTDIVBY expr",
 /*  92 */ "expr ::= expr ISEVEN",
 /*  93 */ "expr ::= expr ISNOTEVEN",
 /*  94 */ "expr ::= expr ISEVENBY expr",
 /*  95 */ "expr ::= expr ISNOTEVENBY expr",
 /*  96 */ "expr ::= expr ISODD",
 /*  97 */ "expr ::= expr ISNOTODD",
 /*  98 */ "expr ::= expr ISODDBY expr",
 /*  99 */ "expr ::= expr ISNOTODDBY expr",
 /* 100 */ "expr ::= value INSTANCEOF ID",
 /* 101 */ "expr ::= value INSTANCEOF value",
 /* 102 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /* 103 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /* 104 */ "value ::= variable",
 /* 105 */ "value ::= UNIMATH value",
 /* 106 */ "value ::= NOT value",
 /* 107 */ "value ::= TYPECAST value",
 /* 108 */ "value ::= variable INCDEC",
 /* 109 */ "value ::= HEX",
 /* 110 */ "value ::= INTEGER",
 /* 111 */ "value ::= INTEGER DOT INTEGER",
 /* 112 */ "value ::= INTEGER DOT",
 /* 113 */ "value ::= DOT INTEGER",
 /* 114 */ "value ::= ID",
 /* 115 */ "value ::= function",
 /* 116 */ "value ::= OPENP expr CLOSEP",
 /* 117 */ "value ::= SINGLEQUOTESTRING",
 /* 118 */ "value ::= doublequoted_with_quotes",
 /* 119 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 120 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 121 */ "value ::= smartytag",
 /* 122 */ "value ::= value modifierlist",
 /* 123 */ "variable ::= varindexed",
 /* 124 */ "variable ::= DOLLAR varvar AT ID",
 /* 125 */ "variable ::= object",
 /* 126 */ "variable ::= HATCH ID HATCH",
 /* 127 */ "variable ::= HATCH variable HATCH",
 /* 128 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 129 */ "arrayindex ::= arrayindex indexdef",
 /* 130 */ "arrayindex ::=",
 /* 131 */ "indexdef ::= DOT DOLLAR varvar",
 /* 132 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 133 */ "indexdef ::= DOT ID",
 /* 134 */ "indexdef ::= DOT INTEGER",
 /* 135 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 136 */ "indexdef ::= OPENB ID CLOSEB",
 /* 137 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 138 */ "indexdef ::= OPENB expr CLOSEB",
 /* 139 */ "indexdef ::= OPENB CLOSEB",
 /* 140 */ "varvar ::= varvarele",
 /* 141 */ "varvar ::= varvar varvarele",
 /* 142 */ "varvarele ::= ID",
 /* 143 */ "varvarele ::= LDEL expr RDEL",
 /* 144 */ "object ::= varindexed objectchain",
 /* 145 */ "objectchain ::= objectelement",
 /* 146 */ "objectchain ::= objectchain objectelement",
 /* 147 */ "objectelement ::= PTR ID arrayindex",
 /* 148 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 149 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 150 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 151 */ "objectelement ::= PTR method",
 /* 152 */ "function ::= ID OPENP params CLOSEP",
 /* 153 */ "method ::= ID OPENP params CLOSEP",
 /* 154 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 155 */ "params ::= params COMMA expr",
 /* 156 */ "params ::= expr",
 /* 157 */ "params ::=",
 /* 158 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 159 */ "modifierlist ::= modifier modparameters",
 /* 160 */ "modifier ::= VERT AT ID",
 /* 161 */ "modifier ::= VERT ID",
 /* 162 */ "modparameters ::= modparameters modparameter",
 /* 163 */ "modparameters ::=",
 /* 164 */ "modparameter ::= COLON value",
 /* 165 */ "modparameter ::= COLON array",
 /* 166 */ "static_class_access ::= method",
 /* 167 */ "static_class_access ::= method objectchain",
 /* 168 */ "static_class_access ::= ID",
 /* 169 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 170 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 171 */ "ifcond ::= EQUALS",
 /* 172 */ "ifcond ::= NOTEQUALS",
 /* 173 */ "ifcond ::= GREATERTHAN",
 /* 174 */ "ifcond ::= LESSTHAN",
 /* 175 */ "ifcond ::= GREATEREQUAL",
 /* 176 */ "ifcond ::= LESSEQUAL",
 /* 177 */ "ifcond ::= IDENTITY",
 /* 178 */ "ifcond ::= NONEIDENTITY",
 /* 179 */ "ifcond ::= MOD",
 /* 180 */ "lop ::= LAND",
 /* 181 */ "lop ::= LOR",
 /* 182 */ "lop ::= LXOR",
 /* 183 */ "array ::= OPENB arrayelements CLOSEB",
 /* 184 */ "arrayelements ::= arrayelement",
 /* 185 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 186 */ "arrayelements ::=",
 /* 187 */ "arrayelement ::= value APTR expr",
 /* 188 */ "arrayelement ::= ID APTR expr",
 /* 189 */ "arrayelement ::= expr",
 /* 190 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 191 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 192 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 193 */ "doublequoted ::= doublequotedcontent",
 /* 194 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 195 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 196 */ "doublequotedcontent ::= DOLLARID",
 /* 197 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 198 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 199 */ "doublequotedcontent ::= smartytag",
 /* 200 */ "doublequotedcontent ::= OTHER",
 /* 201 */ "optspace ::= SPACE",
 /* 202 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
    $this->yyidx = $yyidx;
    $this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 83 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1768 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 80, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 1 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 0 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 0 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 5 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 5 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 5 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 6 ),
  array( 'lhs' => 83, 'rhs' => 6 ),
  array( 'lhs' => 83, 'rhs' => 7 ),
  array( 'lhs' => 83, 'rhs' => 6 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 6 ),
  array( 'lhs' => 83, 'rhs' => 5 ),
  array( 'lhs' => 83, 'rhs' => 7 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 12 ),
  array( 'lhs' => 97, 'rhs' => 2 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 6 ),
  array( 'lhs' => 83, 'rhs' => 8 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 8 ),
  array( 'lhs' => 83, 'rhs' => 11 ),
  array( 'lhs' => 83, 'rhs' => 8 ),
  array( 'lhs' => 83, 'rhs' => 11 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 5 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 4 ),
  array( 'lhs' => 83, 'rhs' => 5 ),
  array( 'lhs' => 83, 'rhs' => 6 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 0 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 4 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 93, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 4 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 100, 'rhs' => 8 ),
  array( 'lhs' => 100, 'rhs' => 7 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 2 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 4 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 90, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 0 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 5 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 4 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 5 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 96, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 2 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 1 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 4 ),
  array( 'lhs' => 112, 'rhs' => 5 ),
  array( 'lhs' => 112, 'rhs' => 6 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 4 ),
  array( 'lhs' => 113, 'rhs' => 5 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 0 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 2 ),
  array( 'lhs' => 98, 'rhs' => 0 ),
  array( 'lhs' => 116, 'rhs' => 2 ),
  array( 'lhs' => 116, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 0 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 119, 'rhs' => 2 ),
  array( 'lhs' => 119, 'rhs' => 1 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 1 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 1 ),
  array( 'lhs' => 120, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 1 ),
  array( 'lhs' => 95, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        18 => 15,
        16 => 16,
        17 => 17,
        105 => 17,
        107 => 17,
        108 => 17,
        167 => 17,
        19 => 19,
        20 => 19,
        78 => 19,
        79 => 19,
        104 => 19,
        109 => 19,
        110 => 19,
        115 => 19,
        117 => 19,
        118 => 19,
        125 => 19,
        166 => 19,
        184 => 19,
        21 => 21,
        22 => 21,
        23 => 23,
        24 => 24,
        25 => 25,
        26 => 26,
        27 => 27,
        29 => 27,
        28 => 28,
        30 => 28,
        32 => 28,
        31 => 31,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        42 => 42,
        44 => 42,
        43 => 43,
        45 => 43,
        46 => 46,
        47 => 47,
        48 => 48,
        70 => 48,
        71 => 48,
        168 => 48,
        189 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 61,
        62 => 62,
        63 => 63,
        64 => 64,
        73 => 64,
        156 => 64,
        160 => 64,
        65 => 65,
        157 => 65,
        66 => 66,
        67 => 67,
        68 => 67,
        69 => 69,
        72 => 72,
        74 => 74,
        75 => 75,
        76 => 75,
        77 => 77,
        80 => 80,
        81 => 81,
        82 => 81,
        83 => 81,
        84 => 84,
        140 => 84,
        201 => 84,
        85 => 85,
        122 => 85,
        86 => 86,
        89 => 86,
        100 => 86,
        87 => 87,
        88 => 88,
        90 => 90,
        91 => 91,
        92 => 92,
        97 => 92,
        93 => 93,
        96 => 93,
        94 => 94,
        99 => 94,
        95 => 95,
        98 => 95,
        101 => 101,
        102 => 102,
        103 => 103,
        106 => 106,
        111 => 111,
        112 => 112,
        113 => 113,
        114 => 114,
        116 => 116,
        119 => 119,
        120 => 120,
        121 => 121,
        123 => 123,
        124 => 124,
        126 => 126,
        127 => 127,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        138 => 135,
        136 => 136,
        137 => 137,
        139 => 139,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        158 => 158,
        159 => 159,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        165 => 164,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        185 => 185,
        186 => 186,
        187 => 187,
        188 => 188,
        190 => 190,
        191 => 191,
        192 => 192,
        193 => 193,
        194 => 194,
        195 => 194,
        197 => 194,
        196 => 196,
        198 => 198,
        199 => 199,
        200 => 200,
        202 => 202,
    );
#line 94 "smarty_internal_templateparser.y"
    function yy_r0(){ $this->_retvalue = $this->root_buffer->to_smarty_php();     }
#line 2200 "smarty_internal_templateparser.php"
#line 100 "smarty_internal_templateparser.y"
    function yy_r1(){ $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);     }
#line 2203 "smarty_internal_templateparser.php"
#line 112 "smarty_internal_templateparser.y"
    function yy_r4(){
                                          if ($this->compiler->has_code) {
                                            $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
                                            $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true));
                                         } else {
                                           $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
                                         }
                                         $this->compiler->has_variable_string = false;
                                         $this->block_nesting_level = count($this->compiler->_tag_stack);
                                            }
#line 2215 "smarty_internal_templateparser.php"
#line 124 "smarty_internal_templateparser.y"
    function yy_r5(){ $this->_retvalue = new _smarty_tag($this, '');    }
#line 2218 "smarty_internal_templateparser.php"
#line 127 "smarty_internal_templateparser.y"
    function yy_r6(){ $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2221 "smarty_internal_templateparser.php"
#line 130 "smarty_internal_templateparser.y"
    function yy_r7(){
                                      if ($this->php_handling == Smarty::PHP_PASSTHRU) {
                                                 $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
                                      } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
                                      }elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                                       if (!($this->smarty instanceof SmartyBC)) {
                                         $this->compiler->trigger_template_error (self::Err3);
                                                                             }
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true));
                                      }elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                                       $this->_retvalue = new _smarty_text($this, '');
                                      }
                                         }
#line 2237 "smarty_internal_templateparser.php"
#line 145 "smarty_internal_templateparser.y"
    function yy_r8(){if ($this->is_xml) {
                                       $this->compiler->tag_nocache = true;
                                       $this->is_xml = false;
                                       $save = $this->template->has_nocache_code;
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>", $this->compiler, true));
                                       $this->template->has_nocache_code = $save;
                                      }elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
                                                 $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
                                      } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
                                      }elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                                       $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
                                      }elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                                       $this->_retvalue = new _smarty_text($this, '');
                                      }
                                         }
#line 2255 "smarty_internal_templateparser.php"
#line 163 "smarty_internal_templateparser.y"
    function yy_r9(){
                                      if ($this->php_handling == Smarty::PHP_PASSTHRU) {
                                                 $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                      } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
                                      }elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                                        if ($this->asp_tags) {
                                          if (!($this->smarty instanceof SmartyBC)) {
                                            $this->compiler->trigger_template_error (self::Err3);
                                                                                }
                                          $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                        }
                                      }elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                                        if ($this->asp_tags) {
                                         $this->_retvalue = new _smarty_text($this, '');
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
                                        }
                                      }
                                        }
#line 2279 "smarty_internal_templateparser.php"
#line 187 "smarty_internal_templateparser.y"
    function yy_r10(){
                                      if ($this->php_handling == Smarty::PHP_PASSTHRU) {
                                                 $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                      } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                                       $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
                                      }elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                                        if ($this->asp_tags) {
                                          $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                        }
                                      }elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                                        if ($this->asp_tags) {
                                         $this->_retvalue = new _smarty_text($this, '');
                                        } else {
                                         $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
                                        }
                                      }
                                        }
#line 2300 "smarty_internal_templateparser.php"
#line 207 "smarty_internal_templateparser.y"
    function yy_r11(){if ($this->lex->strip) {
                                       $this->_retvalue = new _smarty_text($this, preg_replace('![\$this->yystack[$this->yyidx + 0]->minor ]*[\r\n]+[\$this->yystack[$this->yyidx + 0]->minor ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)));
                                     } else {
                                       $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
                                     }
                                        }
#line 2308 "smarty_internal_templateparser.php"
#line 215 "smarty_internal_templateparser.y"
    function yy_r12(){ $this->compiler->tag_nocache = true;
                                   $this->is_xml = true;
                                   $save = $this->template->has_nocache_code;
                                   $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true));
                                   $this->template->has_nocache_code = $save;
                                      }
#line 2316 "smarty_internal_templateparser.php"
#line 223 "smarty_internal_templateparser.y"
    function yy_r13(){if ($this->lex->strip) {
                                       $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
                                     } else {
                                       $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
                                     }
                                        }
#line 2324 "smarty_internal_templateparser.php"
#line 229 "smarty_internal_templateparser.y"
    function yy_r14(){
                                     $this->_retvalue = new _smarty_linebreak($this, $this->yystack[$this->yyidx + 0]->minor);
                                       }
#line 2329 "smarty_internal_templateparser.php"
#line 234 "smarty_internal_templateparser.y"
    function yy_r15(){ $this->_retvalue = '';     }
#line 2332 "smarty_internal_templateparser.php"
#line 235 "smarty_internal_templateparser.y"
    function yy_r16(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2335 "smarty_internal_templateparser.php"
#line 237 "smarty_internal_templateparser.y"
    function yy_r17(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2338 "smarty_internal_templateparser.php"
#line 240 "smarty_internal_templateparser.y"
    function yy_r19(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2341 "smarty_internal_templateparser.php"
#line 242 "smarty_internal_templateparser.y"
    function yy_r21(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2344 "smarty_internal_templateparser.php"
#line 244 "smarty_internal_templateparser.y"
    function yy_r23(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);     }
#line 2347 "smarty_internal_templateparser.php"
#line 245 "smarty_internal_templateparser.y"
    function yy_r24(){ $this->_retvalue = '<<?php ?>%';     }
#line 2350 "smarty_internal_templateparser.php"
#line 246 "smarty_internal_templateparser.y"
    function yy_r25(){ $this->_retvalue = '%<?php ?>>';     }
#line 2353 "smarty_internal_templateparser.php"
#line 254 "smarty_internal_templateparser.y"
    function yy_r26(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2356 "smarty_internal_templateparser.php"
#line 255 "smarty_internal_templateparser.y"
    function yy_r27(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));    }
#line 2359 "smarty_internal_templateparser.php"
#line 256 "smarty_internal_templateparser.y"
    function yy_r28(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor));    }
#line 2362 "smarty_internal_templateparser.php"
#line 259 "smarty_internal_templateparser.y"
    function yy_r31(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));    }
#line 2365 "smarty_internal_templateparser.php"
#line 267 "smarty_internal_templateparser.y"
    function yy_r33(){ $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")));    }
#line 2368 "smarty_internal_templateparser.php"
#line 269 "smarty_internal_templateparser.y"
    function yy_r35(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'")),$this->yystack[$this->yyidx + -1]->minor));    }
#line 2371 "smarty_internal_templateparser.php"
#line 270 "smarty_internal_templateparser.y"
    function yy_r36(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>$this->yystack[$this->yyidx + -4]->minor['var'])),$this->yystack[$this->yyidx + -1]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -4]->minor['smarty_internal_index']));    }
#line 2374 "smarty_internal_templateparser.php"
#line 272 "smarty_internal_templateparser.y"
    function yy_r37(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);    }
#line 2377 "smarty_internal_templateparser.php"
#line 273 "smarty_internal_templateparser.y"
    function yy_r38(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());    }
#line 2380 "smarty_internal_templateparser.php"
#line 275 "smarty_internal_templateparser.y"
    function yy_r39(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor));    }
#line 2383 "smarty_internal_templateparser.php"
#line 277 "smarty_internal_templateparser.y"
    function yy_r40(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
                                                                                    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
                                                                                     }
#line 2388 "smarty_internal_templateparser.php"
#line 281 "smarty_internal_templateparser.y"
    function yy_r41(){  $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -5]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -3]->minor)).'<?php echo ';
                                                                                               $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).'?>';
                                                                                                }
#line 2393 "smarty_internal_templateparser.php"
#line 285 "smarty_internal_templateparser.y"
    function yy_r42(){ $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length)); $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2396 "smarty_internal_templateparser.php"
#line 286 "smarty_internal_templateparser.y"
    function yy_r43(){ $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor,$this->lex->ldel_length)); $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + -1]->minor,array('if condition'=>$this->yystack[$this->yyidx + -2]->minor));    }
#line 2399 "smarty_internal_templateparser.php"
#line 290 "smarty_internal_templateparser.y"
    function yy_r46(){
                                                             $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -10]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -7]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),1);    }
#line 2403 "smarty_internal_templateparser.php"
#line 293 "smarty_internal_templateparser.y"
    function yy_r47(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2406 "smarty_internal_templateparser.php"
#line 294 "smarty_internal_templateparser.y"
    function yy_r48(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2409 "smarty_internal_templateparser.php"
#line 295 "smarty_internal_templateparser.y"
    function yy_r49(){ $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -4]->minor),array('to'=>$this->yystack[$this->yyidx + -2]->minor))),0);    }
#line 2412 "smarty_internal_templateparser.php"
#line 296 "smarty_internal_templateparser.y"
    function yy_r50(){ $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -6]->minor),array('to'=>$this->yystack[$this->yyidx + -4]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),0);    }
#line 2415 "smarty_internal_templateparser.php"
#line 298 "smarty_internal_templateparser.y"
    function yy_r51(){ $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + -1]->minor);    }
#line 2418 "smarty_internal_templateparser.php"
#line 300 "smarty_internal_templateparser.y"
    function yy_r52(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));    }
#line 2422 "smarty_internal_templateparser.php"
#line 302 "smarty_internal_templateparser.y"
    function yy_r53(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));    }
#line 2426 "smarty_internal_templateparser.php"
#line 304 "smarty_internal_templateparser.y"
    function yy_r54(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));    }
#line 2430 "smarty_internal_templateparser.php"
#line 306 "smarty_internal_templateparser.y"
    function yy_r55(){
                                                            $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));    }
#line 2434 "smarty_internal_templateparser.php"
#line 309 "smarty_internal_templateparser.y"
    function yy_r56(){
                                                            $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor))));    }
#line 2438 "smarty_internal_templateparser.php"
#line 311 "smarty_internal_templateparser.y"
    function yy_r57(){
                                                            $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -2]->minor)),$this->yystack[$this->yyidx + -1]->minor)));    }
#line 2442 "smarty_internal_templateparser.php"
#line 314 "smarty_internal_templateparser.y"
    function yy_r58(){ $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);    }
#line 2445 "smarty_internal_templateparser.php"
#line 318 "smarty_internal_templateparser.y"
    function yy_r59(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());    }
#line 2448 "smarty_internal_templateparser.php"
#line 320 "smarty_internal_templateparser.y"
    function yy_r60(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
                                                                                          }
#line 2452 "smarty_internal_templateparser.php"
#line 323 "smarty_internal_templateparser.y"
    function yy_r61(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2455 "smarty_internal_templateparser.php"
#line 324 "smarty_internal_templateparser.y"
    function yy_r62(){  $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));    }
#line 2458 "smarty_internal_templateparser.php"
#line 330 "smarty_internal_templateparser.y"
    function yy_r63(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor; $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2461 "smarty_internal_templateparser.php"
#line 332 "smarty_internal_templateparser.y"
    function yy_r64(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2464 "smarty_internal_templateparser.php"
#line 334 "smarty_internal_templateparser.y"
    function yy_r65(){ $this->_retvalue = array();    }
#line 2467 "smarty_internal_templateparser.php"
#line 337 "smarty_internal_templateparser.y"
    function yy_r66(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
                                                 } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
                                                 } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
                                                 } else
                                                  $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");    }
#line 2477 "smarty_internal_templateparser.php"
#line 345 "smarty_internal_templateparser.y"
    function yy_r67(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2480 "smarty_internal_templateparser.php"
#line 347 "smarty_internal_templateparser.y"
    function yy_r69(){ $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";    }
#line 2483 "smarty_internal_templateparser.php"
#line 350 "smarty_internal_templateparser.y"
    function yy_r72(){$this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2486 "smarty_internal_templateparser.php"
#line 357 "smarty_internal_templateparser.y"
    function yy_r74(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;    }
#line 2489 "smarty_internal_templateparser.php"
#line 359 "smarty_internal_templateparser.y"
    function yy_r75(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2492 "smarty_internal_templateparser.php"
#line 361 "smarty_internal_templateparser.y"
    function yy_r77(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;    }
#line 2495 "smarty_internal_templateparser.php"
#line 372 "smarty_internal_templateparser.y"
    function yy_r80(){$this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';    }
#line 2498 "smarty_internal_templateparser.php"
#line 374 "smarty_internal_templateparser.y"
    function yy_r81(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;     }
#line 2501 "smarty_internal_templateparser.php"
#line 380 "smarty_internal_templateparser.y"
    function yy_r84(){$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;    }
#line 2504 "smarty_internal_templateparser.php"
#line 383 "smarty_internal_templateparser.y"
    function yy_r85(){  $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));     }
#line 2507 "smarty_internal_templateparser.php"
#line 387 "smarty_internal_templateparser.y"
    function yy_r86(){$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2510 "smarty_internal_templateparser.php"
#line 388 "smarty_internal_templateparser.y"
    function yy_r87(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2513 "smarty_internal_templateparser.php"
#line 389 "smarty_internal_templateparser.y"
    function yy_r88(){$this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2516 "smarty_internal_templateparser.php"
#line 391 "smarty_internal_templateparser.y"
    function yy_r90(){$this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2519 "smarty_internal_templateparser.php"
#line 392 "smarty_internal_templateparser.y"
    function yy_r91(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2522 "smarty_internal_templateparser.php"
#line 393 "smarty_internal_templateparser.y"
    function yy_r92(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2525 "smarty_internal_templateparser.php"
#line 394 "smarty_internal_templateparser.y"
    function yy_r93(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2528 "smarty_internal_templateparser.php"
#line 395 "smarty_internal_templateparser.y"
    function yy_r94(){$this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2531 "smarty_internal_templateparser.php"
#line 396 "smarty_internal_templateparser.y"
    function yy_r95(){$this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';    }
#line 2534 "smarty_internal_templateparser.php"
#line 402 "smarty_internal_templateparser.y"
    function yy_r101(){$this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;    }
#line 2537 "smarty_internal_templateparser.php"
#line 408 "smarty_internal_templateparser.y"
    function yy_r102(){ $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2540 "smarty_internal_templateparser.php"
#line 409 "smarty_internal_templateparser.y"
    function yy_r103(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2543 "smarty_internal_templateparser.php"
#line 416 "smarty_internal_templateparser.y"
    function yy_r106(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2546 "smarty_internal_templateparser.php"
#line 422 "smarty_internal_templateparser.y"
    function yy_r111(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2549 "smarty_internal_templateparser.php"
#line 423 "smarty_internal_templateparser.y"
    function yy_r112(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';     }
#line 2552 "smarty_internal_templateparser.php"
#line 424 "smarty_internal_templateparser.y"
    function yy_r113(){ $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2555 "smarty_internal_templateparser.php"
#line 426 "smarty_internal_templateparser.y"
    function yy_r114(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'true';
                               } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'false';
                               } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
                                $this->_retvalue = 'null';
                               } else
                               $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";     }
#line 2565 "smarty_internal_templateparser.php"
#line 437 "smarty_internal_templateparser.y"
    function yy_r116(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";     }
#line 2568 "smarty_internal_templateparser.php"
#line 443 "smarty_internal_templateparser.y"
    function yy_r119(){if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
                                                                                                         if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
                                                                  $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
                                                                                                         } else {
                                                                  $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
                                                                 }
                                                                } else {
                                                                 $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
                                                                }
                                                                   }
#line 2580 "smarty_internal_templateparser.php"
#line 453 "smarty_internal_templateparser.y"
    function yy_r120(){ if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor;}    }
#line 2584 "smarty_internal_templateparser.php"
#line 456 "smarty_internal_templateparser.y"
    function yy_r121(){ $this->prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.$this->prefix_number;     }
#line 2587 "smarty_internal_templateparser.php"
#line 466 "smarty_internal_templateparser.y"
    function yy_r123(){if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
                                                                                $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
                                                                                $this->_retvalue = $smarty_var;
                                      } else {
                                          // used for array reset,next,prev,end,current
                                          $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
                                          $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
                                      }
                                        }
#line 2599 "smarty_internal_templateparser.php"
#line 477 "smarty_internal_templateparser.y"
    function yy_r124(){$this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2602 "smarty_internal_templateparser.php"
#line 481 "smarty_internal_templateparser.y"
    function yy_r126(){$this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';    }
#line 2605 "smarty_internal_templateparser.php"
#line 482 "smarty_internal_templateparser.y"
    function yy_r127(){$this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';    }
#line 2608 "smarty_internal_templateparser.php"
#line 485 "smarty_internal_templateparser.y"
    function yy_r128(){$this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);    }
#line 2611 "smarty_internal_templateparser.php"
#line 491 "smarty_internal_templateparser.y"
    function yy_r129(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2614 "smarty_internal_templateparser.php"
#line 493 "smarty_internal_templateparser.y"
    function yy_r130(){return;    }
#line 2617 "smarty_internal_templateparser.php"
#line 497 "smarty_internal_templateparser.y"
    function yy_r131(){ $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';    }
#line 2620 "smarty_internal_templateparser.php"
#line 498 "smarty_internal_templateparser.y"
    function yy_r132(){ $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';    }
#line 2623 "smarty_internal_templateparser.php"
#line 499 "smarty_internal_templateparser.y"
    function yy_r133(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";    }
#line 2626 "smarty_internal_templateparser.php"
#line 500 "smarty_internal_templateparser.y"
    function yy_r134(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";    }
#line 2629 "smarty_internal_templateparser.php"
#line 501 "smarty_internal_templateparser.y"
    function yy_r135(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";    }
#line 2632 "smarty_internal_templateparser.php"
#line 503 "smarty_internal_templateparser.y"
    function yy_r136(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';    }
#line 2635 "smarty_internal_templateparser.php"
#line 504 "smarty_internal_templateparser.y"
    function yy_r137(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';    }
#line 2638 "smarty_internal_templateparser.php"
#line 508 "smarty_internal_templateparser.y"
    function yy_r139(){$this->_retvalue = '[]';    }
#line 2641 "smarty_internal_templateparser.php"
#line 516 "smarty_internal_templateparser.y"
    function yy_r141(){$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2644 "smarty_internal_templateparser.php"
#line 518 "smarty_internal_templateparser.y"
    function yy_r142(){$this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';    }
#line 2647 "smarty_internal_templateparser.php"
#line 520 "smarty_internal_templateparser.y"
    function yy_r143(){$this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2650 "smarty_internal_templateparser.php"
#line 525 "smarty_internal_templateparser.y"
    function yy_r144(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;} else {
                                                         $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;}    }
#line 2654 "smarty_internal_templateparser.php"
#line 528 "smarty_internal_templateparser.y"
    function yy_r145(){$this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;     }
#line 2657 "smarty_internal_templateparser.php"
#line 530 "smarty_internal_templateparser.y"
    function yy_r146(){$this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2660 "smarty_internal_templateparser.php"
#line 532 "smarty_internal_templateparser.y"
    function yy_r147(){if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
                                                      $this->compiler->trigger_template_error (self::Err1);
                                                                                                       }
                                                     $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
                                                         }
#line 2667 "smarty_internal_templateparser.php"
#line 537 "smarty_internal_templateparser.y"
    function yy_r148(){if ($this->security) {
                                                                 $this->compiler->trigger_template_error (self::Err2);
                                                                                                                             }
                                                               $this->_retvalue = '->{'.$this->compileVariable("'".$this->yystack[$this->yyidx + -1]->minor."'").$this->yystack[$this->yyidx + 0]->minor.'}';
                                                                   }
#line 2674 "smarty_internal_templateparser.php"
#line 542 "smarty_internal_templateparser.y"
    function yy_r149(){if ($this->security) {
                                                                 $this->compiler->trigger_template_error (self::Err2);
                                                                                                                               }
                                                                                                              $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
                                                                                                                 }
#line 2681 "smarty_internal_templateparser.php"
#line 547 "smarty_internal_templateparser.y"
    function yy_r150(){if ($this->security) {
                                                                         $this->compiler->trigger_template_error (self::Err2);
                                                                                                                                     }
                                                                       $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
                                                                          }
#line 2688 "smarty_internal_templateparser.php"
#line 553 "smarty_internal_templateparser.y"
    function yy_r151(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2691 "smarty_internal_templateparser.php"
#line 559 "smarty_internal_templateparser.y"
    function yy_r152(){if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
                                                                                                if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
                                                                                                    $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
                                                                                                    if ($func_name == 'isset') {
                                                                                                      if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                                                                                                       $this->compiler->trigger_template_error ('Illegal number of paramer in "isset()"');
                                                                                                      }
                                                                                                      $isset_par=str_replace("')->value","',null,true,false)->value",implode(',',$this->yystack[$this->yyidx + -1]->minor));
                                                                                                      $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
                                                                                                      } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                                                                                                      if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                                                                                                       $this->compiler->trigger_template_error ('Illegal number of paramer in "empty()"');
                                                                                                      }
                                                                                                      if ($func_name == 'empty') {
                                                                                                          $this->_retvalue = $func_name.'('.str_replace("')->value","',null,true,false)->value",$this->yystack[$this->yyidx + -1]->minor[0]).')';
                                                                                                      } else {
                                                                                                          $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
                                                                                                      }
                                                                                                    } else {
                                                                                                      $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
                                                                                                    }
                                                                                                } else {
                                                       $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
                                                      }
                                                     }
                                                        }
#line 2719 "smarty_internal_templateparser.php"
#line 589 "smarty_internal_templateparser.y"
    function yy_r153(){if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
                                                      $this->compiler->trigger_template_error (self::Err1);
                                                                                                     }
                                                   $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
                                                      }
#line 2726 "smarty_internal_templateparser.php"
#line 594 "smarty_internal_templateparser.y"
    function yy_r154(){if ($this->security) {
                                                              $this->compiler->trigger_template_error (self::Err2);
                                                                                                                     }
                                                           $this->prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';?>'; $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
                                                              }
#line 2733 "smarty_internal_templateparser.php"
#line 602 "smarty_internal_templateparser.y"
    function yy_r155(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));    }
#line 2736 "smarty_internal_templateparser.php"
#line 611 "smarty_internal_templateparser.y"
    function yy_r158(){$this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));    }
#line 2739 "smarty_internal_templateparser.php"
#line 612 "smarty_internal_templateparser.y"
    function yy_r159(){$this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));    }
#line 2742 "smarty_internal_templateparser.php"
#line 615 "smarty_internal_templateparser.y"
    function yy_r161(){ $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2745 "smarty_internal_templateparser.php"
#line 620 "smarty_internal_templateparser.y"
    function yy_r162(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);    }
#line 2748 "smarty_internal_templateparser.php"
#line 622 "smarty_internal_templateparser.y"
    function yy_r163(){$this->_retvalue = array();    }
#line 2751 "smarty_internal_templateparser.php"
#line 624 "smarty_internal_templateparser.y"
    function yy_r164(){$this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);    }
#line 2754 "smarty_internal_templateparser.php"
#line 634 "smarty_internal_templateparser.y"
    function yy_r169(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2757 "smarty_internal_templateparser.php"
#line 636 "smarty_internal_templateparser.y"
    function yy_r170(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2760 "smarty_internal_templateparser.php"
#line 645 "smarty_internal_templateparser.y"
    function yy_r171(){$this->_retvalue = '==';    }
#line 2763 "smarty_internal_templateparser.php"
#line 646 "smarty_internal_templateparser.y"
    function yy_r172(){$this->_retvalue = '!=';    }
#line 2766 "smarty_internal_templateparser.php"
#line 647 "smarty_internal_templateparser.y"
    function yy_r173(){$this->_retvalue = '>';    }
#line 2769 "smarty_internal_templateparser.php"
#line 648 "smarty_internal_templateparser.y"
    function yy_r174(){$this->_retvalue = '<';    }
#line 2772 "smarty_internal_templateparser.php"
#line 649 "smarty_internal_templateparser.y"
    function yy_r175(){$this->_retvalue = '>=';    }
#line 2775 "smarty_internal_templateparser.php"
#line 650 "smarty_internal_templateparser.y"
    function yy_r176(){$this->_retvalue = '<=';    }
#line 2778 "smarty_internal_templateparser.php"
#line 651 "smarty_internal_templateparser.y"
    function yy_r177(){$this->_retvalue = '===';    }
#line 2781 "smarty_internal_templateparser.php"
#line 652 "smarty_internal_templateparser.y"
    function yy_r178(){$this->_retvalue = '!==';    }
#line 2784 "smarty_internal_templateparser.php"
#line 653 "smarty_internal_templateparser.y"
    function yy_r179(){$this->_retvalue = '%';    }
#line 2787 "smarty_internal_templateparser.php"
#line 655 "smarty_internal_templateparser.y"
    function yy_r180(){$this->_retvalue = '&&';    }
#line 2790 "smarty_internal_templateparser.php"
#line 656 "smarty_internal_templateparser.y"
    function yy_r181(){$this->_retvalue = '||';    }
#line 2793 "smarty_internal_templateparser.php"
#line 657 "smarty_internal_templateparser.y"
    function yy_r182(){$this->_retvalue = ' XOR ';    }
#line 2796 "smarty_internal_templateparser.php"
#line 662 "smarty_internal_templateparser.y"
    function yy_r183(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';    }
#line 2799 "smarty_internal_templateparser.php"
#line 664 "smarty_internal_templateparser.y"
    function yy_r185(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;     }
#line 2802 "smarty_internal_templateparser.php"
#line 665 "smarty_internal_templateparser.y"
    function yy_r186(){ return;     }
#line 2805 "smarty_internal_templateparser.php"
#line 666 "smarty_internal_templateparser.y"
    function yy_r187(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2808 "smarty_internal_templateparser.php"
#line 667 "smarty_internal_templateparser.y"
    function yy_r188(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;    }
#line 2811 "smarty_internal_templateparser.php"
#line 674 "smarty_internal_templateparser.y"
    function yy_r190(){ $this->_retvalue = "''";     }
#line 2814 "smarty_internal_templateparser.php"
#line 675 "smarty_internal_templateparser.y"
    function yy_r191(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();     }
#line 2817 "smarty_internal_templateparser.php"
#line 677 "smarty_internal_templateparser.y"
    function yy_r192(){ $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor); $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;     }
#line 2820 "smarty_internal_templateparser.php"
#line 678 "smarty_internal_templateparser.y"
    function yy_r193(){ $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2823 "smarty_internal_templateparser.php"
#line 680 "smarty_internal_templateparser.y"
    function yy_r194(){ $this->_retvalue = new _smarty_code($this, $this->yystack[$this->yyidx + -1]->minor);     }
#line 2826 "smarty_internal_templateparser.php"
#line 682 "smarty_internal_templateparser.y"
    function yy_r196(){$this->_retvalue = new _smarty_code($this, '$_smarty_tpl->tpl_vars[\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\']->value');    }
#line 2829 "smarty_internal_templateparser.php"
#line 684 "smarty_internal_templateparser.y"
    function yy_r198(){ $this->_retvalue = new _smarty_code($this, '('.$this->yystack[$this->yyidx + -1]->minor.')');     }
#line 2832 "smarty_internal_templateparser.php"
#line 685 "smarty_internal_templateparser.y"
    function yy_r199(){
   $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
      }
#line 2837 "smarty_internal_templateparser.php"
#line 688 "smarty_internal_templateparser.y"
    function yy_r200(){ $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);     }
#line 2840 "smarty_internal_templateparser.php"
#line 695 "smarty_internal_templateparser.y"
    function yy_r202(){$this->_retvalue = '';    }
#line 2843 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 76 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2906 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 68 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2924 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>